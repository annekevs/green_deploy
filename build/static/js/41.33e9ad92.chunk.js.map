{"version":3,"sources":["components/Machine/Layout/ContentWrapper.js","components/Machine/Notifications/ListAlerte.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","VuFormatter","value","data-title","DateFormatter","Date","toString","OptionFormatter","type","ListAlerte","context","onCollectionUpdate","querySnapshot","alertes","forEach","doc","data","machine","severite","date","description","motif","vu","push","key","id","setState","rows","slice","rowGetter","i","state","handleGridSort","sortColumn","sortDirection","sort","a","b","ref","firebase","firestore","collection","unsubscribe","_columns","name","width","sortable","formatter","this","onSnapshot","fluid","onGridSort","columns","rowsCount","length","Component"],"mappings":"iGAAA,gBAMMA,EAAiB,SAAAC,GAAK,OACxB,qBAAKC,UAAU,kBAAf,SACKD,EAAME,OACF,qBAAKD,UAAU,SAAf,SAAyBD,EAAMG,WAE/BH,EAAMG,YASnBJ,EAAeK,aAAe,CAC1BF,QAAQ,GAGGH,O,gJCPTM,EAAc,SAAAL,GAAK,OACrBA,EAAMM,MACF,qBAAKL,UAAU,4BAA4BM,aAAW,WAEtD,qBAAKN,UAAU,6BAA6BM,aAAW,YAIzDC,EAAgB,SAAAR,GAAK,OACvB,IAAIS,KAAKT,EAAMM,OAAOI,YAGpBC,EAAkB,SAAAX,GAAK,OACzB,qBAAKC,UAAU,sBAAf,SACI,kCACI,uBAAOW,KAAK,aACZ,sBAAMX,UAAU,6BAKtBY,E,kDACF,WAAYb,EAAOc,GAAU,IAAD,8BACxB,cAAMd,EAAOc,IA2DjBC,mBAAqB,SAACC,GAClB,IAAMC,EAAU,GAChBD,EAAcE,SAAQ,SAACC,GACrB,MAAkEA,EAAIC,OAA9DC,EAAR,EAAQA,QAAST,EAAjB,EAAiBA,KAAMU,EAAvB,EAAuBA,SAAUC,EAAjC,EAAiCA,KAAMC,EAAvC,EAAuCA,YAAaC,EAApD,EAAoDA,MAAOC,EAA3D,EAA2DA,GAC3DT,EAAQU,KAAK,CACXC,IAAKT,EAAIU,GACTV,MACAE,UACAT,OACAU,WACAC,OACAC,cACAC,QACAC,UAGJ,EAAKI,SAAS,CACZb,QAAUA,EACVc,KAAOd,EAAQe,MAAM,MA9EC,EAsF5BC,UAAY,SAACC,GAAD,OAAO,EAAKC,MAAMJ,KAAKG,IAtFP,EAwF5BE,eAAiB,SAACC,EAAYC,GAC1B,IAQMP,EAAyB,SAAlBO,EAA2B,EAAKH,MAAMlB,QAAQe,MAAM,GAAK,EAAKG,MAAMJ,KAAKQ,MARrE,SAACC,EAAGC,GACnB,MAAsB,QAAlBH,EACME,EAAEH,GAAcI,EAAEJ,GAAe,GAAK,EACnB,SAAlBC,EACDE,EAAEH,GAAcI,EAAEJ,GAAe,GAAK,OADzC,KAOT,EAAKP,SAAS,CAAEC,UAjGhB,EAAKW,IAAMC,IAASC,YAAYC,WAAW,WAC3C,EAAKC,YAAc,KACnB,EAAKC,SAAW,CACZ,CACInB,IAAK,UACLoB,KAAM,UACNC,MAAO,GACPC,UAAU,GAEd,CACItB,IAAK,OACLoB,KAAM,OACNC,MAAO,KAEX,CACIrB,IAAK,WACLoB,KAAM,WACNE,UAAU,GAEd,CACItB,IAAK,OACLoB,KAAM,OACNG,UAAW3C,EACX0C,UAAU,GAEd,CACItB,IAAK,cACLoB,KAAM,cACNE,UAAU,GAEd,CACItB,IAAK,QACLoB,KAAM,QACNE,UAAU,GAEd,CACItB,IAAK,KACLoB,KAAM,KACNC,MAAO,GACPE,UAAW9C,EACX6C,UAAU,GAEd,CACItB,IAAK,SACLoB,KAAM,SACNG,UAAWxC,EACXuC,UAAU,IAIlB,EAAKf,MAAQ,CAGTlB,QAAU,GACVc,KAAM,IAxDc,E,qDAkF5B,WACIqB,KAAKN,YAAcM,KAAKV,IAAIW,WAAWD,KAAKrC,sB,oBAmBhD,WACI,OACI,eAAC,IAAD,WACI,qBAAKd,UAAU,kBAAf,gCACA,sBAAKA,UAAU,cAAf,UACI,8BACI,mBAAGA,UAAU,YAAb,4DAEJ,sBAAKA,UAAU,UAAf,UACI,wBAAQA,UAAU,2BAA2BW,KAAK,SAAlD,SACI,oBAAIX,UAAU,mBAElB,wBAAQA,UAAU,2BAA2BW,KAAK,SAAlD,SACI,oBAAIX,UAAU,wBAI1B,cAAC,IAAD,CAAWqD,OAAK,EAAhB,SACI,cAAC,IAAD,CACIC,WAAYH,KAAKhB,eACjBoB,QAASJ,KAAKL,SACdd,UAAWmB,KAAKnB,UAChBwB,UAAWL,KAAKjB,MAAMJ,KAAK2B,kB,GA7H1BC,aAqIV9C","file":"static/js/41.33e9ad92.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Container, Progress } from 'reactstrap';\r\nimport ReactDataGrid from 'react-data-grid';\r\nimport firebase from '../../../firebase';\r\n\r\n// Custom Formatter component\r\nconst PercentCompleteFormatter = props => (\r\n    props.value == 0 ? (\r\n        <Progress color='gray-dark' value='100'> indéfini </Progress>        \r\n    ):(\r\n        <Progress color={props.value < 50 ? 'success' : props.value < 75 ? 'warning' : 'danger'}\r\n            value={props.value}> {props.value}%\r\n        </Progress>\r\n    )\r\n)\r\n\r\nconst VuFormatter = props => (\r\n    props.value? (\r\n        <div className=\"fas fa-check text-success\" data-title=\"normal\"/>\r\n    ):(\r\n        <div className=\"circle circle-lg bg-danger\" data-title=\"normal\"/>\r\n    )\r\n)\r\n\r\nconst DateFormatter = props => (\r\n    new Date(props.value).toString()\r\n)\r\n\r\nconst OptionFormatter = props => (\r\n    <div className=\"checkbox c-checkbox\">\r\n        <label>\r\n            <input type=\"checkbox\"/>\r\n            <span className=\"fa fa-check-circle\"></span>\r\n        </label>\r\n    </div>\r\n)\r\n\r\nclass ListAlerte extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.ref = firebase.firestore().collection('alertes');\r\n        this.unsubscribe = null;\r\n        this._columns = [\r\n            {\r\n                key: 'machine',\r\n                name: 'Machine',\r\n                width: 70,\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'type',\r\n                name: 'Type',\r\n                width: 110\r\n            },\r\n            {\r\n                key: 'severite',\r\n                name: 'Severite',\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'date',\r\n                name: 'Date',\r\n                formatter: DateFormatter,\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'description',\r\n                name: 'Description',\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'motif',\r\n                name: 'Motif',\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'vu',\r\n                name: 'Vu',\r\n                width: 50,\r\n                formatter: VuFormatter,\r\n                sortable: true\r\n            },\r\n            {\r\n                key: 'option',\r\n                name: 'Option',\r\n                formatter: OptionFormatter,\r\n                sortable: true\r\n            }\r\n        ];\r\n\r\n        this.state = { \r\n           // originalRows, // creer au départ\r\n           // rows, // modifier dans la suite\r\n            alertes : [],\r\n            rows: [] \r\n        };\r\n    }\r\n    \r\n    onCollectionUpdate = (querySnapshot) => {\r\n        const alertes = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const { machine, type, severite, date, description, motif, vu } = doc.data();\r\n          alertes.push({\r\n            key: doc.id,\r\n            doc, // DocumentSnapshot\r\n            machine,\r\n            type,\r\n            severite,\r\n            date,\r\n            description,\r\n            motif,\r\n            vu,\r\n          });\r\n        });\r\n        this.setState({\r\n          alertes : alertes,\r\n          rows : alertes.slice(0)\r\n       });\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n    }\r\n    \r\n    rowGetter = (i) => this.state.rows[i]\r\n\r\n    handleGridSort = (sortColumn, sortDirection) => {\r\n        const comparer = (a, b) => {\r\n          if (sortDirection === 'ASC') {\r\n            return (a[sortColumn] > b[sortColumn]) ? 1 : -1;\r\n          } else if (sortDirection === 'DESC') {\r\n            return (a[sortColumn] < b[sortColumn]) ? 1 : -1;\r\n          }\r\n        };\r\n\r\n        const rows = sortDirection === 'NONE' ? this.state.alertes.slice(0) : this.state.rows.sort(comparer);\r\n\r\n        this.setState({ rows });\r\n    };\r\n\r\n    render() {\r\n        return  (\r\n            <ContentWrapper>\r\n                <div className=\"content-heading\">Liste des alertes </div>\r\n                <div className=\"mb-3 d-flex\">\r\n                    <div>\r\n                        <p className=\"mb-0 mt-1\">Dernière modification : 04/05/21 14:24:18</p>\r\n                    </div>\r\n                    <div className=\"ml-auto\">\r\n                        <button className=\"btn btn-sm btn-secondary\" type=\"button\">\r\n                            <em className=\"fas fa-share\"></em>\r\n                        </button>\r\n                        <button className=\"btn btn-sm btn-secondary\" type=\"button\">\r\n                            <em className=\"fa fa-print\"></em>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <Container fluid>\r\n                    <ReactDataGrid\r\n                        onGridSort={this.handleGridSort}\r\n                        columns={this._columns}\r\n                        rowGetter={this.rowGetter}\r\n                        rowsCount={this.state.rows.length}\r\n                    />\r\n                </Container>\r\n            </ContentWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListAlerte;"],"sourceRoot":""}