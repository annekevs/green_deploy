{"version":3,"sources":["components/Client/Layout/ContentWrapper.js","components/Common/FormValidator.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","components/Client/Layout/HeadingMenu.js","components/Client/Services/AddUpService.js","components/Client/Services/Add_Service.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","FormValidator","validate","element","isCheckbox","type","value","checked","name","Error","param","getAttribute","validations","JSON","parse","result","length","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","document","getElementById","equals","isLength","min","max","toInt","list","isIn","bulkValidate","inputs","errors","hasError","input","Object","keys","some","val","propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","CardHeader","node","inline","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","row","check","disabled","FormGroup","HeadingMenu","path","map","label","to","title","AddUpService","toggleStep","validateOnChange","handleSubmit","formRef","nom","service","formCategorie","description","logo","progressValue","onSubmit","TabContent","activeTab","activeStep","TabPane","id","tabId","Input","placeholder","invalid","onChange","data-validate","Button","AddService","form","formCategorieRef","tabPane","state","slice","querySelectorAll","setState","console","log","event","target","formName","inputName","method","e","elements","filter","i","includes","nodeName","preventDefault","addService","axios","post","url_categories","then","docRef","swal","history","push","catch","error","message","isLoading"],"mappings":"iGAAA,gBAMMA,EAAiB,SAAAC,GAAK,OACxB,qBAAKC,UAAU,kBAAf,SACKD,EAAME,OACF,qBAAKD,UAAU,SAAf,SAAyBD,EAAMG,WAE/BH,EAAMG,YASnBJ,EAAeK,aAAe,CAC1BF,QAAQ,GAGGH,O,+ECjBTM,EAAgB,CAQlBC,SARkB,SAQTC,GAEL,IAAMC,EAA8B,aAAjBD,EAAQE,KACrBC,EAAQF,EAAaD,EAAQI,QAAUJ,EAAQG,MAGrD,IAFaH,EAAQK,KAEV,MAAM,IAAIC,MAAM,iCAG3B,IAAMC,EAAQP,EAAQQ,aAAa,cAC7BC,EAAcC,KAAKC,MAAMX,EAAQQ,aAAa,kBAEhDI,EAAS,GAwDb,OAvDGH,GAAeA,EAAYI,QAG1BJ,EAAYK,SAAQ,SAAAC,GAChB,OAAQA,GACJ,IAAK,WACDH,EAAOG,GAAKd,GAAuB,IAAVE,EAAkBa,IAAUC,QAAQd,GAC7D,MACJ,IAAK,QACDS,EAAOG,IAAMC,IAAUE,QAAQf,GAC/B,MACJ,IAAK,SACDS,EAAOG,IAAMC,IAAUG,UAAUhB,GACjC,MACJ,IAAK,UACDS,EAAOG,IAAMC,IAAUI,MAAMjB,GAC7B,MACJ,IAAK,WACDS,EAAOG,IAAMC,IAAUK,eAAelB,GACtC,MACJ,IAAK,MACDS,EAAOG,IAAMC,IAAUM,MAAMnB,GAC7B,MACJ,IAAK,UAED,IAAMoB,EAASC,SAASC,eAAelB,GAAOJ,MAC9CS,EAAOG,IAAMC,IAAUU,OAAOvB,EAAOoB,GACrC,MACJ,IAAK,SACDX,EAAOG,IAAMC,IAAUW,SAASxB,EAAO,CAAEyB,IAAKrB,IAC9C,MACJ,IAAK,SACDK,EAAOG,IAAMC,IAAUW,SAASxB,EAAO,CAAE0B,IAAKtB,IAC9C,MACJ,IAAK,MACD,MAAmBG,KAAKC,MAAMJ,GAA9B,mBAAOqB,EAAP,KAAYC,EAAZ,KACAjB,EAAOG,IAAMC,IAAUW,SAASxB,EAAO,CAAEyB,MAAKC,QAC9C,MACJ,IAAK,MACDjB,EAAOG,IAAMC,IAAUI,MAAMjB,EAAO,CAAEyB,IAAKZ,IAAUc,MAAMvB,KAC3D,MACJ,IAAK,MACDK,EAAOG,IAAMC,IAAUI,MAAMjB,EAAO,CAAE0B,IAAKb,IAAUc,MAAMvB,KAC3D,MACJ,IAAK,OACD,IAAMwB,EAAOrB,KAAKC,MAAMJ,GACxBK,EAAOG,IAAMC,IAAUgB,KAAK7B,EAAO4B,GACnC,MACJ,QACI,MAAM,IAAIzB,MAAM,+BAMzBM,GAUXqB,aAtFkB,SAsFLC,GAAS,IAAD,OACbC,EAAS,GACTC,GAAW,EAQf,OANAF,EAAOpB,SAAQ,SAAAuB,GACX,IAAIzB,EAAS,EAAKb,SAASsC,GAC3BF,EAAM,2BAAQA,GAAR,kBAAiBE,EAAMhC,KAAOO,IAC/BwB,IAAUA,EAAWE,OAAOC,KAAK3B,GAAQ4B,MAAK,SAAAC,GAAG,OAAI7B,EAAO6B,UAG9D,CACHN,SACAC,cAKGtC,O,iCC9Gf,2EAMI4C,EAAY,CACdC,IAAKC,IACLC,QAASC,IAAUC,KACnBC,MAAOF,IAAUG,OACjBC,KAAMJ,IAAUC,KAChBI,QAASL,IAAUC,KACnBrD,UAAWoD,IAAUG,OACrBG,UAAWN,IAAUO,OACrBC,SAAUR,IAAUS,UAAU,CAACT,IAAUO,OAAQP,IAAUG,OAAQH,IAAUU,QAM3EC,EAAO,SAAchE,GACvB,IAAIC,EAAYD,EAAMC,UAClB0D,EAAY3D,EAAM2D,UAClBJ,EAAQvD,EAAMuD,MACdE,EAAOzD,EAAMyD,KACbL,EAAUpD,EAAMoD,QAChBM,EAAU1D,EAAM0D,QAChBO,EAAMjE,EAAMkD,IACZW,EAAW7D,EAAM6D,SACjBK,EAAaC,YAA8BnE,EAAO,CAAC,YAAa,YAAa,QAAS,OAAQ,UAAW,UAAW,MAAO,aAE3HoE,EAAUC,YAAgBC,IAAWrE,EAAW,SAAQmD,GAAU,eAAsBK,GAAO,cAAqBF,IAASG,EAAU,SAAW,MAAQ,IAAMH,GAAgBI,GACpL,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEjE,UAAWmE,EACXM,IAAKb,MAITG,EAAKf,UAAYA,EACjBe,EAAK5D,aAvBc,CACjB8C,IAAK,OAuBQc,O,iCCxCf,2EAMIf,EAAY,CACdC,IAAKC,IACLlD,UAAWoD,IAAUG,OACrBG,UAAWN,IAAUO,QAMnBe,EAAa,SAAoB3E,GACnC,IAAIC,EAAYD,EAAMC,UAClB0D,EAAY3D,EAAM2D,UAClBM,EAAMjE,EAAMkD,IACZgB,EAAaC,YAA8BnE,EAAO,CAAC,YAAa,YAAa,QAE7EoE,EAAUC,YAAgBC,IAAWrE,EAAW,eAAgB0D,GACpE,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEjE,UAAWmE,MAIfO,EAAW1B,UAAYA,EACvB0B,EAAWvE,aAjBQ,CACjB8C,IAAK,OAiBQyB,O,iCC7Bf,2FAQI1B,EAAY,CACd9C,SAAUkD,IAAUuB,KACpBC,OAAQxB,IAAUC,KAClBJ,IAAKC,IACLU,SAAUR,IAAUS,UAAU,CAACT,IAAUO,OAAQP,IAAUU,KAAMV,IAAUG,SAC3EvD,UAAWoD,IAAUG,OACrBG,UAAWN,IAAUO,QAMnBkB,EAAoB,SAAUC,GAGhC,SAASD,EAAK9E,GACZ,IAAIgF,EAKJ,OAHAA,EAAQD,EAAWE,KAAKC,KAAMlF,IAAUkF,MAClCC,OAASH,EAAMG,OAAOC,KAAKC,YAAuBL,IACxDA,EAAMM,OAASN,EAAMM,OAAOF,KAAKC,YAAuBL,IACjDA,EARTO,YAAeT,EAAMC,GAWrB,IAAIS,EAASV,EAAKW,UAgClB,OA9BAD,EAAOL,OAAS,SAAgBT,GAC1BQ,KAAKlF,MAAM6D,UACbqB,KAAKlF,MAAM6D,SAASa,GAGtBQ,KAAKR,IAAMA,GAGbc,EAAOF,OAAS,WACVJ,KAAKR,KACPQ,KAAKR,IAAIY,UAIbE,EAAOE,OAAS,WACd,IAAIC,EAAcT,KAAKlF,MACnBC,EAAY0F,EAAY1F,UACxB0D,EAAYgC,EAAYhC,UACxBkB,EAASc,EAAYd,OACrBZ,EAAM0B,EAAYzC,IAClBW,EAAW8B,EAAY9B,SACvBK,EAAaC,YAA8BwB,EAAa,CAAC,YAAa,YAAa,SAAU,MAAO,aAEpGvB,EAAUC,YAAgBC,IAAWrE,IAAW4E,GAAS,eAAwBlB,GACrF,OAAoBY,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEQ,IAAKb,EACL5D,UAAWmE,MAIRU,EA5Ce,CA6CtBc,aAEFd,EAAK7B,UAAYA,EACjB6B,EAAK1E,aApDc,CACjB8C,IAAK,QAoDQ4B,O,iCCrEf,2EAMI7B,EAAY,CACd9C,SAAUkD,IAAUuB,KACpBiB,IAAKxC,IAAUC,KACfwC,MAAOzC,IAAUC,KACjBuB,OAAQxB,IAAUC,KAClByC,SAAU1C,IAAUC,KACpBJ,IAAKC,IACLlD,UAAWoD,IAAUG,OACrBG,UAAWN,IAAUO,QAMnBoC,EAAY,SAAmBhG,GACjC,IAAIC,EAAYD,EAAMC,UAClB0D,EAAY3D,EAAM2D,UAClBkC,EAAM7F,EAAM6F,IACZE,EAAW/F,EAAM+F,SACjBD,EAAQ9F,EAAM8F,MACdjB,EAAS7E,EAAM6E,OACfZ,EAAMjE,EAAMkD,IACZgB,EAAaC,YAA8BnE,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnHoE,EAAUC,YAAgBC,IAAWrE,IAAW4F,GAAM,MAAeC,EAAQ,aAAe,gBAAcA,IAASjB,IAAS,uBAA6BiB,IAASC,IAAW,YAAqBpC,GAMtM,MAJY,aAARM,IACFC,EAAW6B,SAAWA,GAGJxB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEjE,UAAWmE,MAIf4B,EAAU/C,UAAYA,EACtB+C,EAAU5F,aA1BS,CACjB8C,IAAK,OA0BQ8C,O,2FCxCTC,E,kDACF,WAAYjG,GAAQ,uCACVA,G,0CAGV,WACI,IAAMkG,EAAOhB,KAAKlF,MAAMkG,KACxB,OACI,qBAAKjG,UAAU,kBAAf,SACQ,oBAAIA,UAAU,aAAd,SACKiG,EAAKC,KAAI,SAAC5F,GAAD,MACW,IAAjBA,EAAQG,MACJ,qBAAIT,UAAU,yBAAd,cAA0CM,EAAQ6F,MAAlD,OAEA,oBAAInG,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMoG,GAAI9F,EAAQG,MAAO4F,MAAO/F,EAAQ6F,MAAxC,SACM7F,EAAQ6F,qB,GAhBxBR,aA4BXK,O,0QCwHAM,E,kDArHX,WAAYvG,GAAQ,IAAD,8BACf,cAAMA,IAGVwG,WAAa,EAAKxG,MAAMwG,WAJL,EAKnBC,iBAAmB,EAAKzG,MAAMyG,iBALX,EAMnB9D,SAAW,EAAK3C,MAAM2C,SANH,EAOnB+D,aAAe,EAAK1G,MAAM0G,aAPP,EAQnBC,QAAU,EAAK3G,MAAM2G,QARF,E,0CAUnB,WACI,IAAMC,EAAM1B,KAAKlF,MAAM6G,QAAQC,cAAcF,IACvCG,EAAc7B,KAAKlF,MAAM6G,QAAQC,cAAcC,YAC/CC,EAAO9B,KAAKlF,MAAM6G,QAAQC,cAAcE,KAGjC9B,KAAKlF,MAAM6G,QAAQI,cAAc,GACjC/B,KAAKlF,MAAM6G,QAAQI,cAAc,GACjC/B,KAAKlF,MAAM6G,QAAQI,cAAc,GAE9C,OACI,cAAClH,EAAA,EAAD,UAEI,qBAAKE,UAAU,wBAAf,SACI,cAAC6E,EAAA,EAAD,CACAjB,SAAUqB,KAAKyB,QACf1G,UAAU,kBACVW,KAAK,gBACLsG,SAAUhC,KAAKwB,aAJf,SAMI,eAAC1C,EAAA,EAAD,CAAM/D,UAAU,eAAhB,UACI,cAAC0E,EAAA,EAAD,CAAY1E,UAAU,SAGtB,cAACkH,EAAA,EAAD,CAAYC,UAAWlC,KAAKlF,MAAM6G,QAAQQ,WAA1C,SAEI,eAACC,EAAA,EAAD,CAASC,GAAG,WAAWC,MAAM,IAA7B,UACI,sBAAKvH,UAAU,YAAf,UAEI,eAAC+F,EAAA,EAAD,CAAWH,KAAG,EAAd,UACI,uBAAO5F,UAAU,0BAAjB,iBACA,sBAAKA,UAAU,YAAf,UACI,cAACwH,EAAA,EAAD,CACAhH,KAAK,OACL8G,GAAG,MACH3G,KAAK,MACL8G,YAAY,MACZC,QAASzC,KAAKvC,SAAS,gBAAgB,MAAM,YAC7CiF,SAAU1C,KAAKuB,iBACfoB,gBAAc,eACdnH,MAAOkG,IAEP,sBAAM3G,UAAU,mBAAhB,qDAIR,eAAC+F,EAAA,EAAD,CAAWH,KAAG,EAAd,UACI,uBAAO5F,UAAU,0BAAjB,0BACA,sBAAKA,UAAU,YAAf,UACI,cAACwH,EAAA,EAAD,CACAhH,KAAK,cACL8G,GAAG,cACH3G,KAAK,cACL8G,YAAY,cACZC,QAASzC,KAAKvC,SAAS,gBAAgB,cAAc,YACrDiF,SAAU1C,KAAKuB,iBACf/F,MAAOqG,EACPc,gBAAc,iBAEZ3C,KAAKvC,SAAS,gBAAgB,cAAc,aAAe,sBAAM1C,UAAU,mBAAhB,6CAIrE,eAAC+F,EAAA,EAAD,CAAWH,KAAG,EAAd,UACI,uBAAO5F,UAAU,0BAAjB,kBACA,qBAAKA,UAAU,YAAf,SACI,cAACwH,EAAA,EAAD,CACAhH,KAAK,OACL8G,GAAG,OACH3G,KAAK,OACL8G,YAAY,kDACZE,SAAU1C,KAAKuB,iBACf/F,MAAOsG,YAWnB,uBACA,sBAAK/G,UAAU,SAAf,UACI,cAAC6H,EAAA,EAAD,CAAQvE,MAAM,YAAd,uBACA,cAACuE,EAAA,EAAD,CACA7H,UAAU,UACVsD,MAtGtB,UAuGsB9C,KAAK,SAHL,0C,GAjGbmF,aCnBrBmC,E,kDACF,aAAe,IAAD,8BACV,gBAuBJvB,WAAa,SAAAa,GAAU,OAAI,WAGvB,IAAMW,EAAO,EAAKC,iBAGZC,EAAUnG,SAASC,eAAe,UAAY,EAAKmG,MAAMd,YACzD5E,EAAS,GAAG2F,MAAMnD,KAAKiD,EAAQG,iBAAiB,iBAEtD,EAA6BhI,IAAcmC,aAAaC,GAAhDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAWhB,GARA,EAAK2F,SAAL,eACKN,EAAKpH,KADV,2BAEW,EAAKuH,MAAMH,EAAKpH,OAF3B,IAGQ8B,cAKHC,EAAU,CAWX,OANI,EAAKwF,MAAMd,aAAeA,GAC1B,EAAKiB,SAAS,CACVjB,eAIAA,GACJ,IAAK,IACD,EAAKiB,SAAS,CACVrB,cAbU,CAAC,IAAK,EAAG,KAevB,MACJ,IAAK,IACD,EAAKqB,SAAS,CACVrB,cAjBU,CAAC,EAAG,IAAK,KAmBvB,MACJ,IAAK,IACD,EAAKqB,SAAS,CACVrB,cArBU,CAAC,EAAG,EAAG,OAuBrB,MACJ,QACIsB,QAAQC,IAAI,eAxEd,EAkFd/B,iBAAmB,SAAAgC,GAAU,IAAD,EAClB7F,EAAQ6F,EAAMC,OACdV,EAAOpF,EAAMoF,KACbtH,EAAuB,aAAfkC,EAAMnC,KAAsBmC,EAAMjC,QAAUiC,EAAMlC,MAE1DS,EAASd,IAAcC,SAASsC,GAEtC,EAAK0F,SAAL,eACKN,EAAKpH,KADV,2BAEW,EAAKuH,MAAMH,EAAKpH,OAF3B,uBAGSgC,EAAMhC,KAAOF,GAHtB,kDAKe,EAAKyH,MAAMH,EAAKpH,MAAM8B,QALrC,kBAMaE,EAAMhC,KAAOO,KAN1B,OAzFU,EA+GdwB,SAAW,SAACgG,EAAUC,EAAWC,GAC7B,OAAQ,EAAKV,MAAMQ,IACX,EAAKR,MAAMQ,GAAUjG,QACrB,EAAKyF,MAAMQ,GAAUjG,OAAOkG,IAC5B,EAAKT,MAAMQ,GAAUjG,OAAOkG,GAAWC,IAnHrC,EAsHdnC,aAAe,SAAAoC,GACX,IAAMd,EAAOc,EAAEJ,OACTjG,EAAS,YAAIuF,EAAKe,UAAUC,QAAO,SAAAC,GAAC,MAAI,CAAC,QAAS,UAAUC,SAASD,EAAEE,aAE7E,EAA6B9I,IAAcmC,aAAaC,GAAhDC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEhB,EAAK2F,SAAL,eACKN,EAAKpH,KADV,2BAEW,EAAKuH,MAAMH,EAAKpH,OAF3B,IAGQ8B,aAIR6F,QAAQC,IAAI7F,EAAW,0BAA4B,mBACnDmG,EAAEM,iBACFb,QAAQC,IAAI7F,GACPA,GACD,EAAK0G,cAvIC,EA2IdA,WAAa,WACT,MAAmC,EAAKlB,MAAMrB,cAAtCF,EAAR,EAAQA,IAAKG,EAAb,EAAaA,YAAaC,EAA1B,EAA0BA,KAC1BsC,IAAMC,KAAKC,IAAgB,CACvB5C,MACAG,cACAC,SAEHyC,MAAK,SAACC,GACH,EAAKpB,SAAS,CACVxB,cAAgB,CACZF,IAAK,GACLG,YAAa,GACbC,KAAM,MAIduB,QAAQC,IAAI,wBACZmB,IAAK,SAAD,kBAAsB/C,EAAtB,6BAAgD,WAAW6C,MAAK,SAAC/I,GACjE,EAAKV,MAAM4J,QAAQC,KAAK,wBAG/BC,OAAM,SAACC,GACNxB,QAAQwB,MAAM,yBAA0BA,GACxCJ,IAAK,cAAYI,EAAMC,QAAU,eAlKzB,EAuKdrD,QAAU,SAAA/B,GAAI,OAAK,EAAKqD,iBAAmBrD,GArKvC,EAAKuD,MAAQ,CACTrB,cAAgB,CACZF,IAAK,GACLG,YAAa,GACbC,KAAM,IAEViD,WAAW,EACX5C,WAAY,IACZJ,cAAe,CAAC,IAAK,EAAG,GACxBf,KAAM,CACF,CACIE,MAAO,OACP1F,MAAO,qBAEX,CACI0F,MAAO,qBACP1F,MAAO,MAlBT,E,0CAyKd,WAGI,OAFA6H,QAAQC,IAAItD,KAAKiD,MAAMrB,eAGnB,eAAC/G,EAAA,EAAD,WACI,cAACkG,EAAA,EAAD,CAAaC,KAAQhB,KAAKiD,MAAMjC,OAChC,cAAC,EAAD,CACAW,QAAS3B,KAAKiD,MACdxB,QAASzB,KAAKyB,QACdH,WAAYtB,KAAKsB,WACjBC,iBAAoBvB,KAAKuB,iBACzB9D,SAAUuC,KAAKvC,SACf+D,aAAgBxB,KAAKwB,sB,GAtLZd,aA8LVmC","file":"static/js/18.240b8238.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","// https://github.com/chriso/validator.js\r\nimport validator from 'validator';\r\n\r\n/**\r\n * Helper methods to validate form inputs\r\n * using controlled components\r\n */\r\nconst FormValidator = {\r\n    /**\r\n     * Validate input element\r\n     * @param element Dome element of the input\r\n     * Uses the following attributes\r\n     *     data-validate: array in json format with validation methods\r\n     *     data-param: used to provide arguments for certain methods.\r\n     */\r\n    validate(element) {\r\n\r\n        const isCheckbox = element.type === 'checkbox';\r\n        const value = isCheckbox ? element.checked : element.value;\r\n        const name = element.name;\r\n\r\n        if (!name) throw new Error('Input name must not be empty.');\r\n\r\n        // use getAttribute to support IE10+\r\n        const param = element.getAttribute('data-param');\r\n        const validations = JSON.parse(element.getAttribute('data-validate'));\r\n\r\n        let result = []\r\n        if(validations && validations.length) {\r\n            /*  Result of each validation must be true if the input is invalid\r\n                and false if valid. */\r\n            validations.forEach(m => {\r\n                switch (m) {\r\n                    case 'required':\r\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\r\n                        break;\r\n                    case 'email':\r\n                        result[m] = !validator.isEmail(value)\r\n                        break;\r\n                    case 'number':\r\n                        result[m] = !validator.isNumeric(value)\r\n                        break;\r\n                    case 'integer':\r\n                        result[m] = !validator.isInt(value)\r\n                        break;\r\n                    case 'alphanum':\r\n                        result[m] = !validator.isAlphanumeric(value)\r\n                        break;\r\n                    case 'url':\r\n                        result[m] = !validator.isURL(value)\r\n                        break;\r\n                    case 'equalto':\r\n                        // here we expect a valid ID as param\r\n                        const value2 = document.getElementById(param).value;\r\n                        result[m] = !validator.equals(value, value2)\r\n                        break;\r\n                    case 'minlen':\r\n                        result[m] = !validator.isLength(value, { min: param })\r\n                        break;\r\n                    case 'maxlen':\r\n                        result[m] = !validator.isLength(value, { max: param })\r\n                        break;\r\n                    case 'len':\r\n                        const [min, max] = JSON.parse(param)\r\n                        result[m] = !validator.isLength(value, { min, max })\r\n                        break;\r\n                    case 'min':\r\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\r\n                        break;\r\n                    case 'max':\r\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\r\n                        break;\r\n                    case 'list':\r\n                        const list = JSON.parse(param)\r\n                        result[m] = !validator.isIn(value, list)\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unrecognized validator.');\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Bulk validation of input elements.\r\n     * Used with form elements collection.\r\n     * @param  {Array} inputs Array for DOM element\r\n     * @return {Object}       Contains array of error and a flag to\r\n     *                        indicate if there was a validation error\r\n     */\r\n    bulkValidate(inputs) {\r\n        let errors = {},\r\n            hasError = false;\r\n\r\n        inputs.forEach(input => {\r\n            let result = this.validate(input)\r\n            errors = { ...errors, [input.name]: result }\r\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\r\n        })\r\n\r\n        return {\r\n            errors,\r\n            hasError\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormValidator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeadingMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.path\r\n        return (\r\n            <div className=\"content-heading\">\r\n                    <ol className=\"breadcrumb\">\r\n                        {path.map((element) =>\r\n                            element.value == '' ? (\r\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\r\n                            ):(\r\n                                <li className=\"breadcrumb-item\"> \r\n                                    <Link to={element.value} title={element.label}> \r\n                                        { element.label } \r\n                                    </Link> \r\n                                </li>\r\n                            )\r\n                        )}\r\n                   </ol>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadingMenu;","/** modifier/ajouter les informations d'un manager */\r\nimport React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Row,\r\n    Progress,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    TabContent,\r\n    TabPane,\r\n    Button,\r\n    Nav,\r\n    Form,\r\n    NavItem,\r\n    NavLink,\r\n    CustomInput, \r\n} \r\nfrom 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nconst stepNavitemStyle = {\r\n    backgroundColor: 'bg-gray-dark'\r\n};\r\n\r\n/*color for next and previous button */\r\nconst previousColor = \"inverse\"\r\nconst nextColor = \"success\"\r\n\r\n\r\nclass AddUpService extends Component {\r\n    constructor(props) { \r\n        super(props);        \r\n    }\r\n    \r\n    toggleStep = this.props.toggleStep\r\n    validateOnChange = this.props.validateOnChange\r\n    hasError = this.props.hasError\r\n    handleSubmit = this.props.handleSubmit\r\n    formRef = this.props.formRef\r\n\r\n    render() {     \r\n        const nom = this.props.service.formCategorie.nom\r\n        const description = this.props.service.formCategorie.description\r\n        const logo = this.props.service.formCategorie.logo\r\n\r\n        // tab item active\r\n        const tab1 = this.props.service.progressValue[0]\r\n        const tab2 = this.props.service.progressValue[1]\r\n        const tab3 = this.props.service.progressValue[2]\r\n        \r\n        return (            \r\n            <ContentWrapper>\r\n                {/* START form */}\r\n                <div className=\"block-center col-md-8\">\r\n                    <Form\r\n                    innerRef={this.formRef}\r\n                    className=\"form-horizontal\" \r\n                    name=\"formCategorie\" \r\n                    onSubmit={this.handleSubmit}\r\n                    >\r\n                        <Card className=\"card-default\">\r\n                            <CardHeader className=\"pb-0\">\r\n                                {/*<div className=\"col pr-0\"> <Progress color=\"success-light\" value={100}/> </div>*/}\r\n                            </CardHeader>                            \r\n                            <TabContent activeTab={this.props.service.activeStep}>\r\n                                {/*informations */}\r\n                                <TabPane id=\"tabPane1\" tabId=\"1\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        {/*nom */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Nom</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"nom\"\r\n                                                name=\"nom\" \r\n                                                placeholder=\"Nom\" \r\n                                                invalid={this.hasError('formCategorie','nom','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={nom}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez entrer le nom du service</span>                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {/*description */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\" > Description</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"description\"\r\n                                                id=\"description\"\r\n                                                name=\"description\"\r\n                                                placeholder=\"Description\"\r\n                                                invalid={this.hasError('formCategorie','description','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                value={description}\r\n                                                data-validate='[\"required\"]' \r\n                                                />\r\n                                                { this.hasError('formCategorie','description','required') && <span className=\"invalid-feedback\">Veuillez remplir ce champ</span> }\r\n                                             </div>\r\n                                        </FormGroup>\r\n                                        {/*logo */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Logo</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"file\"\r\n                                                id=\"logo\"\r\n                                                name=\"logo\" \r\n                                                placeholder=\"Choisir une image correspondant à ce service\" \r\n                                                onChange={this.validateOnChange}\r\n                                                value={logo} \r\n                                                />\r\n                                               {/*</Input>   \r\n                                                <Input \r\n                                                type=\"file\" \r\n                                                id=\"logo\" \r\n                                                name=\"logo\"\r\n                                                value={logo} />*/}\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex\">\r\n                                        <Button color=\"secondary\"> Annuler </Button>\r\n                                        <Button\r\n                                        className=\"ml-auto\"\r\n                                        color={nextColor}\r\n                                        type=\"submit\" \r\n                                        //onClick={this.toggleStep('2')}\r\n                                        >\r\n                                            Ajouter\r\n                                        </Button>\r\n                                    </div>   \r\n                                </TabPane>\r\n                            </TabContent>                                            \r\n                        </Card>\r\n                        {/* END card */}\r\n                    </Form>\r\n                </div>\r\n            </ContentWrapper>\r\n        );\r\n    }\r\n \r\n}\r\n\r\nexport default AddUpService;\r\n","/**editer les informations d'une machine */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { url_categories } from '../../../urls';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport FormValidator from '../../Common/FormValidator';\r\nimport swal from 'sweetalert';\r\nimport HeadingMenu from '../Layout/HeadingMenu';\r\nimport AddUpService from './AddUpService';\r\n\r\nconst stepNavitemStyle = {\r\n    backgroundColor: 'bg-gray-dark'\r\n};\r\n\r\nclass AddService extends Component {\r\n    constructor() {\r\n        super();   \r\n        this.state = {\r\n            formCategorie : {\r\n                nom: '',\r\n                description: '',\r\n                logo: '',\r\n            },\r\n            isLoading: true,\r\n            activeStep: '1',\r\n            progressValue: [100, 0, 0],\r\n            path: [\r\n                { \r\n                    label: 'Home',\r\n                    value: '/dashboard_client',\r\n                },\r\n                { \r\n                    label: 'Ajouter un service',\r\n                    value: '',\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    toggleStep = activeStep => () => {\r\n        // For submit we can obtain the form from the event\r\n        // but for each step we need a global ref to the element\r\n        const form = this.formCategorieRef;\r\n        // To validate only the inputs in the current steps, we use an id to query the tabPane\r\n        // and then find all form elements for the current step only.\r\n        const tabPane = document.getElementById('tabPane' + this.state.activeStep);\r\n        const inputs = [].slice.call(tabPane.querySelectorAll('input,select'));\r\n        // Run validation of inputs\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\r\n\r\n        // Update state so the validation message are shown/hidden\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        // and prevent change the if form is not valid\r\n        if (!hasError) {\r\n            const progessValue1 = [100, 0, 0];\r\n            const progessValue2 = [0, 100, 0];\r\n            const progessValue3 = [0, 0, 100];\r\n            \r\n            if (this.state.activeStep !== activeStep) {\r\n                this.setState({\r\n                    activeStep\r\n                });\r\n            }\r\n            \r\n            switch (activeStep) {\r\n                case '1':\r\n                    this.setState({\r\n                        progressValue: progessValue1\r\n                    });\r\n                    break;\r\n                case '2':\r\n                    this.setState({\r\n                        progressValue: progessValue2\r\n                    });\r\n                    break;\r\n                case '3':\r\n                    this.setState({\r\n                        progressValue: progessValue3\r\n                    });\r\n                    break;\r\n                default:\r\n                    console.log('default')\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n      * Validate input using onChange event\r\n      * @param  {String} formName The name of the form in the state object\r\n      * @return {Function} a function used for the event\r\n    */\r\n    validateOnChange = event => {\r\n        const input = event.target;\r\n        const form = input.form;\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        const result = FormValidator.validate(input);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value,\r\n                errors: {\r\n                    ...this.state[form.name].errors,\r\n                    [input.name]: result\r\n                }\r\n            }\r\n        });\r\n/*\r\n        if (input.name == 'logo') {\r\n            // update les informations sur le rôle\r\n            const selectedRole = this.state.logos.find(logo => logo.nom == value)\r\n            console.log(selectedRole )       \r\n            this.setState({\r\n                selectedRole  : selectedRole,\r\n            })\r\n        }*/\r\n    };\r\n\r\n    /* Simplify error check */\r\n    hasError = (formName, inputName, method) => {\r\n        return  this.state[formName] &&\r\n                this.state[formName].errors &&\r\n                this.state[formName].errors[inputName] &&\r\n                this.state[formName].errors[inputName][method]\r\n    }    \r\n\r\n    handleSubmit = e => {\r\n        const form = e.target;\r\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\r\n\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\r\n        e.preventDefault();\r\n        console.log(hasError)\r\n        if (!hasError) {\r\n            this.addService();\r\n        }     \r\n    }\r\n    \r\n    addService = () => {\r\n        const { nom, description, logo } = this.state.formCategorie;\r\n        axios.post(url_categories, {\r\n            nom,\r\n            description,\r\n            logo,\r\n        })\r\n        .then((docRef) => {\r\n            this.setState({\r\n                formCategorie : {            \r\n                    nom: '',\r\n                    description: '',\r\n                    logo: '',\r\n                },\r\n            });\r\n            //feedback\r\n            console.log(\"Un service de plus !\");\r\n            swal(\"Super!\", `Service ${nom} ajouté avec succès`, \"success\").then((value) => {\r\n                this.props.history.push(\"/list_service/\")\r\n            }) \r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding service: \", error);\r\n          swal(\"Desolée!\", error.message , \"warning\")\r\n        });\r\n    }\r\n\r\n    // Keep a reference to the form to access from the steps methods\r\n    formRef = node => (this.formCategorieRef = node);    \r\n\r\n    render() {\r\n        console.log(this.state.formCategorie)\r\n       \r\n        return (            \r\n            <ContentWrapper>\r\n                <HeadingMenu path = {this.state.path}/>\r\n                <AddUpService \r\n                service={this.state}\r\n                formRef={this.formRef}\r\n                toggleStep={this.toggleStep}\r\n                validateOnChange = {this.validateOnChange}\r\n                hasError={this.hasError}\r\n                handleSubmit = {this.handleSubmit} />\r\n            </ContentWrapper>\r\n        \r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddService;\r\n"],"sourceRoot":""}