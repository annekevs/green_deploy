{"version":3,"sources":["components/Machine/Cartographie/Carte.js","components/Machine/Layout/ContentWrapper.js","allconfig.js","../node_modules/reactstrap/es/Row.js","components/Machine/HeadingMenu.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Col.js","components/Machine/Maps/Map.js","components/Machine/Maps/MapDirection.js","assets/Maps/728939_flag_yellow_location_map_marker_icon.svg","../node_modules/reactstrap/es/CardFooter.js","components/Machine/Maps/MapMachine.js","components/Machine/Dashboard/ApercuMachine.js"],"names":["containerStyle","width","height","path","label","value","Carte","props","context","selectMachine","e","latLng","toJSON","lat","lng","position","latitude","toString","longitude","machine","state","machines","find","_","isEqual","coordonnees","console","log","setState","selectedMachine","isSelectMachine","zoom","resizeMap","isLoading","axios","get","url_machines","then","res","data","catch","error","this","md","listeMachine","currentMachine","isSelect","onClick","onResize","className","Component","withTranslation","ContentWrapper","unwrap","children","defaultProps","googleMapsApiKey","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","cssModule","object","form","xs","sm","lg","xl","widths","Row","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","HeadingMenu","map","element","to","title","CardHeader","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","svgMarker","fillColor","fillOpacity","strokeWeight","rotation","scale","MyMap","compose","withProps","googleMapURL","loadingElement","style","containerElement","mapElement","withScriptjs","withGoogleMap","center","level","key","icon","Map","CardFooter","MapMachine","customStyle","featureType","stylers","visibility","color","elementType","lightness","positions","parseFloat","nom","currentPosition","etatFalse","etatTrue","ApercuMachine","localite","status","qte_bte","modele","Object","libelle","description","pays","ville","quartier","lieu","nb_bte","etat","levelFormatter","levelColor","outline","data-title","hidden"],"mappings":"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","file":"static/js/20.f704c074.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {url_machines} from '../../../urls'\nimport { withTranslation, Trans } from 'react-i18next';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport { Row, Col } from 'reactstrap';\nimport MapMachine from '../Maps/MapMachine';\nimport ApercuMachine from '../Dashboard/ApercuMachine';\nimport HeadingMenu from '../HeadingMenu';\nimport _ from 'lodash';\nimport PageLoader from '../../Common/PageLoader';\n\nconst containerStyle = {\n    width: '100%',\n    height: '600px'\n}\n\nconst path = [\n    { \n        label: 'Home',\n        value: '/dashboard_machine',\n    },{ \n        label: 'Carte',\n        value: '/carte_machine',\n    },\n]\n\nconst defaultZoom = 12;\n\nclass Carte extends Component {\n    constructor(props, context) {\n        super(props, context);\n        //this.ref = firebase.firestore().collection('machines');\n        //this.unsubscribe = null;\n        this.state = { \n            machines: [],\n            selectedMachine: {}, //id de la machine courante\n            isLoading: true,\n            isSelectMachine: false,\n            zoom: defaultZoom,\n        }; \n    }\n    \n    componentDidMount() {\n        // liste des machines\n        axios.get(url_machines)\n        .then(res => {\n            const machines = res.data.data.machines\n            console.log(machines);\n            this.setState({\n                machines: machines,\n                isLoading: false,\n                zoom: 12\n             });\n        })\n        .catch((error) => {\n            console.log(\"get machine failed!\")\n            console.log(error)\n        })\n    }\n\n    selectMachine = e => {\n        const {lat, lng} = e.latLng.toJSON()\n        const position = {\n            latitude: lat.toString(),\n            longitude: lng.toString(),\n        }\n         \n        const machine = this.state.machines.find(machine => _.isEqual(machine.coordonnees, position))\n        console.log(machine)\n        this.setState({\n            selectedMachine: machine,\n            isSelectMachine: true,\n            zoom: 18,\n        })\n    }\n\n    resizeMap = () => {\n        this.setState({\n            zoom: defaultZoom,\n        })\n    }\n\n    render() {\n        const machines = this.state.machines\n        const selectedMachine = this.state.selectedMachine\n        const zoom = this.state.zoom\n\n        console.log(machines)\n        const isLoading = !this.state.isLoading\n        const isSelectMachine = this.state.isSelectMachine\n\n        return (\n          isLoading? (\n            <ContentWrapper>\n                <HeadingMenu path={path}/>\n                <Row>\n                    <Col md={8}>\n                        <MapMachine \n                         listeMachine={machines}\n                         currentMachine={selectedMachine}\n                         isSelect={isSelectMachine}\n                         zoom={zoom}\n                         containerStyle={containerStyle}\n                         onClick={this.selectMachine}\n                         onResize={this.resizeMap}\n                        />\n                    </Col>\n                    {isSelectMachine? (\n                    <Col md={4}>\n                        <ApercuMachine \n                         currentMachine={selectedMachine}\n                         isSelect={isSelectMachine}\n                         />\n                    </Col>\n                    ):(\n                        <div className=\"d-flex\">\n                            <span className=\"align-self-center align-items-center\"> Selectionner une machine et retrouvez ses informations </span>  \n                        </div>\n                    )}    \n                </Row>\n            </ContentWrapper>\n          ):(\n            <PageLoader/>\n          )\n    );\n\n    }\n\n}\n\nexport default withTranslation('translations')(Carte);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Wrapper element for template content\n */\nconst ContentWrapper = props =>(\n    <div className=\"content-wrapper\">\n        {props.unwrap ?\n            (<div className=\"unwrap\">{props.children}</div>)\n            :\n            (props.children)\n        }\n    </div>\n)\n\nContentWrapper.propTypes = {\n    /** add element with 'unwrap' class to expand content area */\n    unwrap: PropTypes.bool\n}\nContentWrapper.defaultProps = {\n    unwrap: false\n}\n\nexport default ContentWrapper;\n","const googleMapsApiKey=\"AIzaSyB2gRtnm_h3PmxB6ZhZ1ZBpvwAYiQheb1Y\"\n\nexport { googleMapsApiKey}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HeadingMenu extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const path = this.props.path\n        return (\n            <div className=\"content-heading\">\n                    <ol className=\"breadcrumb\">\n                        {path.map((element) =>\n                            element.value == '' ? (\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\n                            ):(\n                                <li className=\"breadcrumb-item\"> \n                                    <Link to={element.value} title={element.label}> \n                                        { element.label } \n                                    </Link> \n                                </li>\n                            )\n                        )}\n                   </ol>\n            </div>\n                \n        )\n    }\n}\n\nexport default HeadingMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","/*global google*/\nimport React, {Component}  from 'react'\nimport { compose, withProps, lifecycle } from 'recompose'\nimport {\n  withScriptjs,\n  withState,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  DirectionsRenderer,\n} from 'react-google-maps'\nimport { googleMapsApiKey} from '../../../allconfig';\nimport MapDirection from './MapDirection';\nimport stationMarker from '../../../assets/Maps/728939_flag_yellow_location_map_marker_icon.svg';\n\nconst svgMarker = {\n  path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\n  fillColor: \"green\",\n  fillOpacity: 1,\n  strokeWeight: 0,\n  rotation: 0,\n  scale: 2,\n  //anchor: new google.maps.Point(15, 30),\n};\n\n\nconst MyMap = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `450px` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n  )(props => {\n    \n    return (\n      props.machines.length? (\n        <GoogleMap\n          center={props.center}\n          zoom={props.zoom}\n          onClick={props.onClick}\n        > \n          {props.machines.map( (machine) => {\n            const test = (machine.level >= 50)? true : false\n            return (\n              test? (\n                <Marker key={machine.key} position={machine.value} onClick={props.onClick}/>\n              ):(\n                <Marker key={machine.key} position={machine.value} onClick={props.onClick} icon={svgMarker}/>\n              )\n            )\n          })}\n        </GoogleMap>\n      ):(\n        <GoogleMap center={props.center} zoom={props.zoom} />\n      )\n    )\n  }\n\n\n)\n\n// display directions\nconst start = {lat: 4.0004737, lng: 9.8057055}\nconst end = {lat: 4.001925800, lng: 9.76514100}\nconst fromTo = [start, end]\n\nclass Map extends Component {\n  \n  onClick = this.props.onClick\n  \n  render() {\n    const machines = this.props.machines\n    const zoom = this.props.zoom\n    const center = this.props.currentMachine? this.props.currentMachine.coordonnees : {lat: 4.0004737, lng: 9.8057055}\n    console.log(machines)\n    const positions = []\n    /*this.props.machines.map((machine) => {\n      positions.push({\n        lat: parseFloat(machine.coordonnees.latitude),\n        lng: parseFloat(machine.coordonnees.longitude)\n      })\n    })*/\n\n    return(\n      <div>\n        <MyMap \n          machines={machines} \n          zoom={zoom} \n          onClick={this.onClick}\n          center={center}\n          />\n        {/*<MapDirection\n        origin={this.props.currentPosition} \n        destination={end}\n        zoom={zoom}\n        />*/}\n      </div>\n    )\n  }\n}\n\nexport default Map;","/*global google*/\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\nimport { googleMapsApiKey} from '../../../allconfig';\n\nclass MapDirection extends Component {\n  state = {\n    directions: null\n  };\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    let origin = this.props.origin? this.props.origin : {lat: 4.0004737, lng: 9.8057055}\n    let destination = this.props.destination? this.props.destination : {lat: 4.0004740,lng: 9.8057055}\n    //waypoints\n    const start = {lat: 4.0054737, lng: 9.8057055}\n    const end = {lat: 4.002925800, lng: 9.76514100}\n    const fromTo = [start, end]    \n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: [\n          {\n             location: new google.maps.LatLng(4.0004937, 9.8757055)\n          },\n          {\n            location: new google.maps.LatLng(4.001855800, 9.76244100)\n          }\n        ],\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n  \n  render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    const MapOk = () => (\n        <GoogleMapExample\n        containerElement={<div style={{ height: `400px`}} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    )\n\n    const MapLoader = withScriptjs(MapOk);\n\n    return (\n      <div>\n          <MapLoader\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&v=3.exp&libraries=geometry,drawing,places`}\n            loadingElement={<div style={{ height: `100%` }} />}\n          />\n      </div>\n    );\n  }\n}\n\nexport default MapDirection;\n","export default __webpack_public_path__ + \"static/media/728939_flag_yellow_location_map_marker_icon.c4fa07d5.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","/*global google*/\nimport React, { Component } from 'react';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { googleMapsApiKey} from '../../../allconfig';\nimport Map from './Map';\n\nconst svgMarker = {\n    path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\n    fillColor: \"green\",\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 2,\n    //anchor: new google.maps.Point(15, 30),\n};\n\nconst FullMarker = props => (\n    <Marker \n    key={props.key} \n    position={props.position}\n    onClick={props.onClick}\n    />\n)\n\nconst LowMarker = props => (\n    <Marker \n    key={props.key} \n    position={props.position}\n    onClick={props.onClick}\n    icon={svgMarker}\n    title={props.title}\n    />\n)\n\n// Demo with multiple markers\nconst DemoMapCustomMarkers = props => { \n    console.log(props)\n    const id = (Math.random() + 1).toString(36).substring(5)\n    return (\n        props.customMarkers.length ? (\n            <GoogleMap\n                id={id}\n                mapContainerStyle={props.containerStyle} \n                zoom={props.zoom} \n                center={props.center}\n            >\n                {props.customMarkers.map( (machine) => {\n                    const test = (machine.level >= 50)? true : false\n                    return (\n                        test? (\n                            <FullMarker \n                            key={machine.key} \n                            position={machine.value}\n                            onClick={props.onClick}\n                            //title={machine.nom}\n                            />\n                       ):(\n                            <LowMarker \n                            key={machine.key} \n                            position={machine.value}\n                            onClick={props.onClick}\n                            />  \n                        )\n                    )}\n                )}\n\n            </GoogleMap>\n        ):(\n            <GoogleMap mapContainerStyle={props.containerStyle} zoom={props.zoom} center={props.center}/>\n        )\n    )\n}\n\n\n//default value for lat, long\nconst defaultPosition = {\n    lat: 4.0004737, \n    lng: 9.8057055\n}\n\nclass MapMachine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            center: {},\n            customStyle: [\n                {featureType:'water',stylers:[{visibility:'on'},{color:'#bdd1f9'}]},\n                {featureType:'all',elementType:'labels.text.fill',stylers:[{color:'#334165'}]},\n                {featureType:'landscape',stylers:[{color:'#e9ebf1'}]},\n                {featureType:'road.highway',elementType:'geometry',stylers:[{color:'#c5c6c6'}]},\n                {featureType:'road.arterial',elementType:'geometry',stylers:[{color:'#fff'}]},\n                {featureType:'road.local',elementType:'geometry',stylers:[{color:'#fff'}]},\n                {featureType:'transit',elementType:'geometry',stylers:[{color:'#d8dbe0'}]},\n                {featureType:'poi',elementType:'geometry',stylers:[{color:'#cfd5e0'}]},\n                {featureType:'administrative',stylers:[{visibility:'on'},{lightness:33}]},\n                {featureType:'poi.park',elementType:'labels',stylers:[{visibility:'on'},\n                {lightness:20}]},{featureType:'road',stylers:[{color:'#d8dbe0',lightness:20}]}\n            ]\n        }\n    }\n\n   /* componentDidMount() {\n        //console.log(this.props)\n        this.setState({ center : this.props.currentMachine.coordonnees})\n    }*/\n\n    onResize = this.props.onResize;\n\n    render() {\n        // get all position\n        const machines = this.props.listeMachine\n        //console.log(machines)\n        const positions = []\n        machines.map((machine) => {\n            positions.push({\n                key: machine.key,\n                value :{\n                    lat: parseFloat(machine.coordonnees.latitude),\n                    lng: parseFloat(machine.coordonnees.longitude)\n                },\n                nom: machine.nom,\n                level: machine.level,\n            })\n        })\n        const isSelect = this.props.isSelect\n        const zoom = this.props.zoom\n        \n        const containerStyle = this.props.containerStyle\n\n        return (\n            <ContentWrapper>\n                <Card className=\"card-default\">\n                    <CardBody>\n                        <Map\n                            machines={positions}\n                            currentMachine={this.props.currentMachine}\n                            zoom={zoom}\n                            onClick={this.props.onClick}\n                            currentPosition={this.props.currentPosition}\n                        />\n                    </CardBody>\n                    <CardFooter className=\"ml-auto\">\n                        <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\n                    </CardFooter>\n                </Card>\n            </ContentWrapper>\n        )\n       /* return (\n            <LoadScript\n                googleMapsApiKey = {googleMapsApiKey}\n            >\n                <ContentWrapper>\n                    <Card className=\"card-default\">\n                        <CardBody>\n                            <DemoMapCustomMarkers \n                             customMarkers={positions}\n                             center={center}\n                             zoom = {zoom} \n                             containerStyle={containerStyle}\n                             onClick={this.props.onClick}\n                            />\n                        </CardBody>\n                        <CardFooter className=\"ml-auto\">\n                            <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\n                        </CardFooter>\n                    </Card>\n             </ContentWrapper>\n            </LoadScript>\n        );*/\n\n        //return(<div> Just for test</div>)\n    }\n\n}\n\nexport default MapMachine;\n\n","import React, { Component } from 'react';\nimport { Progress, Row, Col, Card, CardHeader, CardBody, CardFooter, Input } from 'reactstrap';\n\nconst etatFalse = {\n    label: 'déconnectée',\n    color: 'circle circle-lg bg-danger',\n}\n\nconst etatTrue = {\n    label: 'connectée',\n    color: 'circle circle-lg bg-success',\n}\n\nclass ApercuMachine extends Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n    render() {\n        console.log(this.props.currentMachine)\n        const { nom, localite, level, status, qte_bte, modele } = this.props.currentMachine\n        const {libelle, description} = new Object(modele)\n        const {pays, ville, quartier, lieu} = new Object(localite);\n        //const libelle =  'A-18'\n        //const description = 'Machine de rue'\n        const nb_bte = qte_bte\n        const nb_tickect = 18\n\n        //Status formatter\n        let etat = {}\n        status? (\n            etat = etatTrue\n        ):(\n            etat = etatFalse\n        )\n        //end status formatter\n        // level formatter\n        let levelFormatter = { levelColor: 'danger', value: level }\n        level == 0 ? (\n            levelFormatter = { levelColor: 'gray-light', value: level }\n        ): level <= 70 ? (\n            levelFormatter = { levelColor: 'success', value: level } \n        ): level <=85 ? (\n            levelFormatter = { levelColor: 'success', value: level }\n        ):(\n            console.log(levelFormatter)\n        )\n        // end level formatter\n    \n        const {label, color} = etat\n        const {value, levelColor} = levelFormatter\n\n\n        // \n        return (\n            \n            <div className=\"row\">\n                    {/*Info Machine */}\n                    <Card outline color=\"info\" >\n                            <CardHeader className=\"mr-3 mt-3 bg-gray-light\">\n                                <div className=\"float-right row\">\n                                    {/*<span className=\"align-self-center\"> {label} </span>*/}\n                                    <div className={color}/>\n                                </div>\n                                <h4 className=\"m-0\">{nom}</h4>\n                                <small className=\"text-muted\"></small>\n                            </CardHeader>\n                            <CardBody>\n                                <div className=\"d-flex align-items-center mb-4 \">\n                                    <div className=\"w-100\" data-title=\"Health\">\n                                        { level==0? (\n                                            <Progress className=\"progress-xs m-0\" value={100} color={levelColor}> </Progress>\n                                        ):(\n                                            <Progress className=\"progress-xs m-0\" value={level} color={levelColor}> </Progress>\n\n                                        )}\n                                    </div>\n                                    <div className=\"wd-xxs text-right\">\n                                        <div className=\"text-bold text-muted\">{level}%</div>\n                                    </div>\n                                </div>\n                            <div className=\"mb-3 mt-3\">                            \n                                {/*Adresse */}\n                                <div className=\"media mb-3 pl-2\">\n                                    <div className=\"align-self-start mr-2\">\n                                        <em className=\"fas fas fa-map-marker-alt fa-2x\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <address>\n                                            <strong> {lieu} </strong>\n                                            <br/> {quartier}\n                                            <br/> \n                                            <span> {ville} - {pays} </span>\n                                        </address>\n                                    </div>\n                                </div>                            \n                                {/*Modele */}\n                                <div className=\"media mb-4 pl-2\">\n                                    <div className=\"align-self-start mr-2\">\n                                        <em className=\"fas fa-box fa-2x\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <span> {libelle} </span>\n                                        <br/>\n                                        <span className=\"pl-3\"> {description} </span>\n                                    </div>\n                                </div>                            \n                                {/*Chiffres */}\n                                <label className=\"mr-3 pl-1 mb-3\">Ajourdh'ui...</label>\n                                {/*bte collectees */}\n                                <div className=\"media mb-4\">\n                                    <div className=\"align-self-center mr-2\">\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <h4 className=\"mt-0 text-bold\">{nb_bte}</h4>\n                                        {nb_bte <= 1? (\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE </p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">BOUTEILLES COLLECTEES</p>\n                                        )}\n                                    </div>\n                                </div>\n                                {/*tickets imprimés */}\n                                <div hidden className=\"media mt-4 mb-3\">\n                                    <div className=\"align-self-center mr-2\">\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <h4 className=\"mt-0 text-bold\">{nb_tickect}</h4>\n                                        <p className=\"mb-0 text-muted text-bold\">TICKETS IMPRIMES</p>\n                                    </div>\n                                </div>\n                            </div>\n                            </CardBody>\n                            {/*<CardFooter className=\"text-center mb-auto mt-2\"color=\"bg-gray\">\n                            </CardFooter>*/}\n                    </Card>\n                </div>\n        ); \n    }\n}\n\nexport default ApercuMachine;\n\n\n"],"sourceRoot":""}