{"version":3,"sources":["allconfig.js","components/MesTests/Maps/Map.js"],"names":["googleMapsApiKey","MapDirection","state","directions","directionsService","google","maps","DirectionsService","origin","this","props","lat","lng","destination","route","waypoints","location","LatLng","travelMode","TravelMode","DRIVING","result","status","DirectionsStatus","OK","setState","console","error","GoogleMapExample","withGoogleMap","defaultCenter","defaultZoom","MapLoader","withScriptjs","containerElement","style","height","mapElement","googleMapURL","loadingElement","Component"],"mappings":"iGAAA,sCAAMA,EAAiB,2C,4GCUjBC,E,4MACJC,MAAQ,CACNC,WAAY,M,uDAGd,WAAqB,IAAD,OACZC,EAAoB,IAAIC,OAAOC,KAAKC,kBAEtCC,EAASC,KAAKC,MAAMF,OAAQC,KAAKC,MAAMF,OAAS,CAACG,IAAK,UAAWC,IAAK,WACtEC,EAAcJ,KAAKC,MAAMG,YAAaJ,KAAKC,MAAMG,YAAc,CAACF,IAAK,SAAUC,IAAK,WAKxFR,EAAkBU,MAChB,CACEN,OAAQA,EACRK,YAAaA,EACbE,UAAW,CACT,CACGC,SAAU,IAAIX,OAAOC,KAAKW,OAAO,UAAW,YAE/C,CACED,SAAU,IAAIX,OAAOC,KAAKW,OAAO,UAAa,YAGlDC,WAAYb,OAAOC,KAAKa,WAAWC,UAErC,SAACC,EAAQC,GACHA,IAAWjB,OAAOC,KAAKiB,iBAAiBC,GAC1C,EAAKC,SAAS,CACZtB,WAAYkB,IAGdK,QAAQC,MAAR,oCAA2CN,S,oBAMnD,WAAU,IAAD,OACDO,EAAmBC,yBAAc,SAAAnB,GAAK,OAC1C,cAAC,YAAD,CACEoB,cAAe,CAAEnB,IAAK,UAAWC,KAAM,WACvCmB,YAAa,GAFf,SAIE,cAAC,qBAAD,CACE5B,WAAY,EAAKD,MAAMC,kBAYvB6B,EAAYC,wBAPJ,kBACV,cAACL,EAAD,CACAM,iBAAkB,qBAAKC,MAAO,CAAEC,OAAO,WACvCC,WAAY,qBAAKF,MAAO,CAAEC,OAAO,eAMrC,OACE,8BACI,cAACJ,EAAD,CACEM,aAAY,sDAAiDtC,IAAjD,8CACZuC,eAAgB,qBAAKJ,MAAO,CAAEC,OAAO,kB,GAjEtBI,aAwEZvC","file":"static/js/43.47c08817.chunk.js","sourcesContent":["const googleMapsApiKey=\"AIzaSyB2gRtnm_h3PmxB6ZhZ1ZBpvwAYiQheb1Y\"\n\nexport { googleMapsApiKey}","/*global google*/\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\nimport { googleMapsApiKey} from '../../../allconfig';\n\nclass MapDirection extends Component {\n  state = {\n    directions: null\n  };\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    let origin = this.props.origin? this.props.origin : {lat: 4.0004737, lng: 9.8057055}\n    let destination = this.props.destination? this.props.destination : {lat: 4.0004740,lng: 9.8057055}\n    //waypoints\n    const start = {lat: 4.0054737, lng: 9.8057055}\n    const end = {lat: 4.002925800, lng: 9.76514100}\n    const fromTo = [start, end]    \n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: [\n          {\n             location: new google.maps.LatLng(4.0004937, 9.8757055)\n          },\n          {\n            location: new google.maps.LatLng(4.001855800, 9.76244100)\n          }\n        ],\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n  \n  render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    const MapOk = () => (\n        <GoogleMapExample\n        containerElement={<div style={{ height: `400px`}} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    )\n\n    const MapLoader = withScriptjs(MapOk);\n\n    return (\n      <div>\n          <MapLoader\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&v=3.exp&libraries=geometry,drawing,places`}\n            loadingElement={<div style={{ height: `100%` }} />}\n          />\n      </div>\n    );\n  }\n}\n\nexport default MapDirection;\n"],"sourceRoot":""}