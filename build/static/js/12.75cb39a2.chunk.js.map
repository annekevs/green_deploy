{"version":3,"sources":["components/Common/FormValidator.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Progress.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/CustomFileInput.js","../node_modules/reactstrap/es/CustomInput.js","components/Authentication/Layout/ContentWrapper.js","components/Authentication/HeadingMenu.js","components/Authentication/Manager/SignUpManager.js","components/Authentication/Manager/CompleteSignUp.js"],"names":["FormValidator","validate","element","isCheckbox","type","value","checked","name","Error","param","getAttribute","validations","JSON","parse","result","length","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","document","getElementById","equals","isLength","min","max","toInt","list","isIn","bulkValidate","inputs","errors","hasError","input","Object","keys","some","val","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","className","cssModule","object","form","xs","sm","md","lg","xl","defaultProps","widths","Row","props","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","inverse","color","body","outline","innerRef","func","Card","ref","CardBody","CardHeader","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","children","node","bar","multi","animated","striped","barClassName","style","barStyle","barAriaValueText","barAriaLabelledBy","Progress","percent","toNumber","progressClasses","progressBarProps","width","role","inline","Form","_Component","_this","call","this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","Component","row","check","disabled","FormGroup","id","isRequired","label","valid","invalid","bsSize","htmlFor","onChange","array","CustomFileInput","_React$Component","state","files","e","getSelectedFiles","setState","multiple","slice","map","file","join","indexOf","parts","split","dataBrowse","hidden","customClass","validationClassNames","labelHtmlFor","CustomInput","_rest","wrapperClasses","rest","ContentWrapper","unwrap","HeadingMenu","path","to","title","stepNavitemStyle","backgroundColor","previousColor","nextColor","SignUpManager","toggleStep","validateOnChange","handleSubmit","formRef","username","manager","formComplete","email","nom","prenom","nationalite","adresse","telephone","cni","terms","tab1","progressValue","tab2","tab3","onSubmit","Nav","tabs","justified","NavItem","NavLink","classnames","active","activeStep","onClick","TabContent","activeTab","TabPane","tabId","Input","placeholder","data-validate","readOnly","Button","CompleteManager","formCompleteRef","tabPane","querySelectorAll","console","log","event","formName","inputName","method","elements","includes","nodeName","preventDefault","complete","uid","axios","put","url_managers","then","docRef","password","swal","history","catch","error","isLoading","firebase","auth","onAuthStateChanged","authUser","get","res","data"],"mappings":"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","file":"static/js/12.75cb39a2.chunk.js","sourcesContent":["// https://github.com/chriso/validator.js\r\nimport validator from 'validator';\r\n\r\n/**\r\n * Helper methods to validate form inputs\r\n * using controlled components\r\n */\r\nconst FormValidator = {\r\n    /**\r\n     * Validate input element\r\n     * @param element Dome element of the input\r\n     * Uses the following attributes\r\n     *     data-validate: array in json format with validation methods\r\n     *     data-param: used to provide arguments for certain methods.\r\n     */\r\n    validate(element) {\r\n\r\n        const isCheckbox = element.type === 'checkbox';\r\n        const value = isCheckbox ? element.checked : element.value;\r\n        const name = element.name;\r\n\r\n        if (!name) throw new Error('Input name must not be empty.');\r\n\r\n        // use getAttribute to support IE10+\r\n        const param = element.getAttribute('data-param');\r\n        const validations = JSON.parse(element.getAttribute('data-validate'));\r\n\r\n        let result = []\r\n        if(validations && validations.length) {\r\n            /*  Result of each validation must be true if the input is invalid\r\n                and false if valid. */\r\n            validations.forEach(m => {\r\n                switch (m) {\r\n                    case 'required':\r\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\r\n                        break;\r\n                    case 'email':\r\n                        result[m] = !validator.isEmail(value)\r\n                        break;\r\n                    case 'number':\r\n                        result[m] = !validator.isNumeric(value)\r\n                        break;\r\n                    case 'integer':\r\n                        result[m] = !validator.isInt(value)\r\n                        break;\r\n                    case 'alphanum':\r\n                        result[m] = !validator.isAlphanumeric(value)\r\n                        break;\r\n                    case 'url':\r\n                        result[m] = !validator.isURL(value)\r\n                        break;\r\n                    case 'equalto':\r\n                        // here we expect a valid ID as param\r\n                        const value2 = document.getElementById(param).value;\r\n                        result[m] = !validator.equals(value, value2)\r\n                        break;\r\n                    case 'minlen':\r\n                        result[m] = !validator.isLength(value, { min: param })\r\n                        break;\r\n                    case 'maxlen':\r\n                        result[m] = !validator.isLength(value, { max: param })\r\n                        break;\r\n                    case 'len':\r\n                        const [min, max] = JSON.parse(param)\r\n                        result[m] = !validator.isLength(value, { min, max })\r\n                        break;\r\n                    case 'min':\r\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\r\n                        break;\r\n                    case 'max':\r\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\r\n                        break;\r\n                    case 'list':\r\n                        const list = JSON.parse(param)\r\n                        result[m] = !validator.isIn(value, list)\r\n                        break;\r\n                    default:\r\n                        throw new Error('Unrecognized validator.');\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /**\r\n     * Bulk validation of input elements.\r\n     * Used with form elements collection.\r\n     * @param  {Array} inputs Array for DOM element\r\n     * @return {Object}       Contains array of error and a flag to\r\n     *                        indicate if there was a validation error\r\n     */\r\n    bulkValidate(inputs) {\r\n        let errors = {},\r\n            hasError = false;\r\n\r\n        inputs.forEach(input => {\r\n            let result = this.validate(input)\r\n            errors = { ...errors, [input.name]: result }\r\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\r\n        })\r\n\r\n        return {\r\n            errors,\r\n            hasError\r\n        }\r\n    }\r\n}\r\n\r\nexport default FormValidator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, toNumber } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  bar: PropTypes.bool,\n  multi: PropTypes.bool,\n  tag: tagPropType,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  animated: PropTypes.bool,\n  striped: PropTypes.bool,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  barClassName: PropTypes.string,\n  cssModule: PropTypes.object,\n  style: PropTypes.object,\n  barStyle: PropTypes.object,\n  barAriaValueText: PropTypes.string,\n  barAriaLabelledBy: PropTypes.string\n};\nvar defaultProps = {\n  tag: 'div',\n  value: 0,\n  min: 0,\n  max: 100,\n  style: {},\n  barStyle: {}\n};\n\nvar Progress = function Progress(props) {\n  var children = props.children,\n      className = props.className,\n      barClassName = props.barClassName,\n      cssModule = props.cssModule,\n      value = props.value,\n      min = props.min,\n      max = props.max,\n      animated = props.animated,\n      striped = props.striped,\n      color = props.color,\n      bar = props.bar,\n      multi = props.multi,\n      Tag = props.tag,\n      style = props.style,\n      barStyle = props.barStyle,\n      barAriaValueText = props.barAriaValueText,\n      barAriaLabelledBy = props.barAriaLabelledBy,\n      attributes = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"barClassName\", \"cssModule\", \"value\", \"min\", \"max\", \"animated\", \"striped\", \"color\", \"bar\", \"multi\", \"tag\", \"style\", \"barStyle\", \"barAriaValueText\", \"barAriaLabelledBy\"]);\n\n  var percent = toNumber(value) / toNumber(max) * 100;\n  var progressClasses = mapToCssModules(classNames(className, 'progress'), cssModule);\n  var progressBarClasses = mapToCssModules(classNames('progress-bar', bar ? className || barClassName : barClassName, animated ? 'progress-bar-animated' : null, color ? \"bg-\" + color : null, striped || animated ? 'progress-bar-striped' : null), cssModule);\n  var progressBarProps = {\n    className: progressBarClasses,\n    style: _objectSpread(_objectSpread(_objectSpread({}, bar ? style : {}), barStyle), {}, {\n      width: percent + \"%\"\n    }),\n    role: 'progressbar',\n    'aria-valuenow': value,\n    'aria-valuemin': min,\n    'aria-valuemax': max,\n    'aria-valuetext': barAriaValueText,\n    'aria-labelledby': barAriaLabelledBy,\n    children: children\n  };\n\n  if (bar) {\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, progressBarProps));\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    style: style,\n    className: progressClasses\n  }), multi ? children : /*#__PURE__*/React.createElement(\"div\", progressBarProps));\n};\n\nProgress.propTypes = propTypes;\nProgress.defaultProps = defaultProps;\nexport default Progress;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nvar CustomFileInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CustomFileInput.prototype;\n\n  _proto.onChange = function onChange(e) {\n    var input = e.target;\n    var onChange = this.props.onChange;\n    var files = this.getSelectedFiles(input);\n\n    if (typeof onChange === \"function\") {\n      onChange.apply(void 0, arguments);\n    }\n\n    this.setState({\n      files: files\n    });\n  };\n\n  _proto.getSelectedFiles = function getSelectedFiles(input) {\n    var multiple = this.props.multiple;\n\n    if (multiple && input.files) {\n      var files = [].slice.call(input.files);\n      return files.map(function (file) {\n        return file.name;\n      }).join(\", \");\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      var parts = input.value.split(\"\\\\\");\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        label = _this$props.label,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        bsSize = _this$props.bsSize,\n        innerRef = _this$props.innerRef,\n        htmlFor = _this$props.htmlFor,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        dataBrowse = _this$props.dataBrowse,\n        hidden = _this$props.hidden,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\", \"hidden\"]);\n\n    var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n    var files = this.state.files;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: customClass,\n      hidden: hidden || false\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n      onChange: this.onChange\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: mapToCssModules(\"custom-file-label\", cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse\n    }, files || label || \"Choose file\"), children);\n  };\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nimport CustomFileInput from './CustomFileInput';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nfunction CustomInput(props) {\n  var className = props.className,\n      label = props.label,\n      inline = props.inline,\n      valid = props.valid,\n      invalid = props.invalid,\n      cssModule = props.cssModule,\n      children = props.children,\n      bsSize = props.bsSize,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"]);\n\n  var type = attributes.type;\n  var customClass = mapToCssModules(classNames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === \"select\") {\n    var _type = attributes.type,\n        _rest = _objectWithoutPropertiesLoose(attributes, [\"type\"]);\n\n    return /*#__PURE__*/React.createElement(\"select\", _extends({}, _rest, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass),\n      \"aria-invalid\": invalid\n    }), children);\n  }\n\n  if (type === \"file\") {\n    return /*#__PURE__*/React.createElement(CustomFileInput, props);\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return /*#__PURE__*/React.createElement(\"input\", _extends({}, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames(\"custom-control\", {\n    \"custom-control-inline\": inline\n  }), cssModule));\n\n  var hidden = attributes.hidden,\n      rest = _objectWithoutPropertiesLoose(attributes, [\"hidden\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses,\n    hidden: hidden || false\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, rest, {\n    type: type === \"switch\" ? \"checkbox\" : type,\n    ref: innerRef,\n    \"aria-invalid\": invalid,\n    className: classNames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule))\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: mapToCssModules(\"custom-control-label\", cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n}\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeadingMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.path\r\n        return (\r\n            <div className=\"content-heading\">\r\n                    <ol className=\"breadcrumb\">\r\n                        {path.map((element) =>\r\n                            element.value == '' ? (\r\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\r\n                            ):(\r\n                                <li className=\"breadcrumb-item\"> \r\n                                    <Link to={element.value} title={element.label}> \r\n                                        { element.label } \r\n                                    </Link> \r\n                                </li>\r\n                            )\r\n                        )}\r\n                   </ol>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadingMenu;","/**editer les informations d'une machine */\r\nimport React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Row,\r\n    Progress,\r\n    Col,\r\n    FormGroup,\r\n    Input,\r\n    TabContent,\r\n    TabPane,\r\n    Button,\r\n    Nav,\r\n    Form,\r\n    CustomInput,\r\n    NavItem,\r\n    NavLink, } \r\nfrom 'reactstrap';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport classnames from 'classnames';\r\nconst stepNavitemStyle = {\r\n    backgroundColor: 'bg-gray-dark'\r\n};\r\n\r\n/*color for next and previous button */\r\nconst previousColor = \"inverse\"\r\nconst nextColor = \"success\"\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '400px'\r\n};\r\n\r\n\r\nclass SignUpManager extends Component {\r\n    constructor(props) { \r\n        super(props);        \r\n    }\r\n    \r\n    toggleStep = this.props.toggleStep\r\n    validateOnChange = this.props.validateOnChange\r\n    hasError = this.props.hasError\r\n    handleSubmit = this.props.handleSubmit\r\n    formRef = this.props.formRef\r\n\r\n    render() {  \r\n        const username = this.props.manager.formComplete.username\r\n        const email = this.props.manager.formComplete.email\r\n        const role = this.props.manager.formComplete.role\r\n\r\n        const nom = this.props.manager.formComplete.nom\r\n        const prenom = this.props.manager.formComplete.prenom\r\n        const nationalite = this.props.manager.formComplete.nationalite\r\n        const adresse = this.props.manager.formComplete.adresse\r\n        const telephone = this.props.manager.formComplete.telephone\r\n        const cni = this.props.manager.formComplete.cni\r\n        \r\n        const terms = this.props.manager.formComplete.terms\r\n\r\n        // tab item active\r\n        const tab1 = this.props.manager.progressValue[0]\r\n        const tab2 = this.props.manager.progressValue[1]\r\n        const tab3 = this.props.manager.progressValue[2]\r\n        \r\n        return (            \r\n            <ContentWrapper>\r\n                {/* START form */}\r\n                <div className=\"block-center col-md-8\">\r\n                    <Form\r\n                    innerRef={this.formRef}\r\n                    className=\"form-horizontal\" \r\n                    name=\"formComplete\" \r\n                    onSubmit={this.handleSubmit}\r\n                    >\r\n                        <Card className=\"card-default\">\r\n                            <CardHeader className=\"pb-0\">\r\n                                <Row>\r\n                                    <div className=\"col pr-0\"> <Progress color=\"success-light\" value={tab1}/> </div>\r\n                                    <div className=\"col p-0\"> <Progress color=\"success-light\" value={tab2}/> </div>\r\n                                    <div className=\"col pl-0\"> <Progress color=\"success-light\" value={tab3}/> </div>\r\n                                </Row>\r\n                            </CardHeader>                            \r\n                            <CardBody className=\"pt-0 pb-0\">         \r\n                                <Nav tabs justified >\r\n                                    <NavItem style={stepNavitemStyle}>\r\n                                        <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.props.manager.activeStep === '1'\r\n                                        })}\r\n                                        onClick={this.toggleStep('1')}\r\n                                        >\r\n                                         <h4 className=\"text-left my-3\">\r\n                                            1. Compte\r\n                                         </h4>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem style={stepNavitemStyle}>\r\n                                        <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.props.manager.activeStep === '2'\r\n                                        })}\r\n                                        onClick={this.toggleStep('2')}\r\n                                        >\r\n                                        <h4 className=\"text-left my-3\">\r\n                                           2. Profil\r\n                                        </h4>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem style={stepNavitemStyle}>\r\n                                        <NavLink\r\n                                        tag=\"div\"\r\n                                        className={classnames({\r\n                                            active: this.props.manager.activeStep === '3'\r\n                                        })}\r\n                                        onClick={this.toggleStep('3')}\r\n                                        >\r\n                                        <h4 className=\"text-left my-3\">\r\n                                          3. Terminer\r\n                                         </h4>\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                            </CardBody>    \r\n                            <TabContent activeTab={this.props.manager.activeStep}>\r\n                                {/*account */}                        \r\n                                <TabPane id=\"tabPane1\" tabId=\"1\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        {/*username */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Nom d'utilisateur</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"username\"\r\n                                                name=\"username\" \r\n                                                placeholder=\"username\" \r\n                                                invalid={this.hasError('formComplete','username','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={username}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                         {/*email */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Adresse email</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"email\"\r\n                                                id=\"email\"\r\n                                                name=\"email\" \r\n                                                invalid={this.hasError('formComplete','email','required')||this.hasError('formComplete','email','email')}\r\n                                                onChange={this.validateOnChange}\r\n                                                value={email}\r\n                                                data-validate='[\"required\", \"email\"]'\r\n                                                readOnly\r\n                                                />                                                                                         \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                         {/*role */}\r\n                                         <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\"> Rôle </label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"role\"\r\n                                                name=\"role\" \r\n                                                invalid={this.hasError('formComplete','role','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                value={role}\r\n                                                data-validate='[\"required\"]'\r\n                                                readOnly\r\n                                                />                                                                                        \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                    </div>   \r\n                                    <hr/>\r\n                                    <div className=\"d-flex\">\r\n                                        {/*<Button color=\"secondary\">Previous</Button>*/}\r\n                                        <Button\r\n                                        className=\"ml-auto\"\r\n                                        color={nextColor}\r\n                                        onClick={this.toggleStep('2')}\r\n                                        >\r\n                                            Suivant\r\n                                        </Button>\r\n                                    </div>\r\n                                </TabPane>                               \r\n                                {/*profil*/}\r\n                                <TabPane id=\"tabPane2\" tabId=\"2\">\r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        {/*nom */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Nom</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"nom\"\r\n                                                name=\"nom\" \r\n                                                placeholder=\"Nom\" \r\n                                                invalid={this.hasError('formComplete','nom','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={nom}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez entrer votre nom complet</span>                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {/*prenom */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Prénom</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"prenom\"\r\n                                                name=\"prenom\" \r\n                                                placeholder=\"Entrer votre prenom ici\" \r\n                                                invalid={this.hasError('formComplete','prenom','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={prenom}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {/*telephone */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Numéro de téléphone</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"telephone\"\r\n                                                name=\"telephone\" \r\n                                                placeholder=\"telephone\" \r\n                                                invalid={this.hasError('formComplete','telephone','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={telephone}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup> \r\n                                        {/*cni */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Numéro de CNI</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"cni\"\r\n                                                name=\"cni\" \r\n                                                placeholder=\"cni\" \r\n                                                invalid={this.hasError('formComplete','cni','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={cni}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup>   \r\n                                        {/*nationalite */}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Nationalite</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"nationalite\"\r\n                                                name=\"nationalite\" \r\n                                                placeholder=\"nationalite\" \r\n                                                invalid={this.hasError('formComplete','nationalite','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={nationalite}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup> \r\n                                        {/*adresse*/}\r\n                                        <FormGroup row>\r\n                                            <label className=\"col-xl-2 col-form-label\">Adresse</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                <Input \r\n                                                type=\"text\"\r\n                                                id=\"adresse\"\r\n                                                name=\"adresse\" \r\n                                                placeholder=\"adresse\" \r\n                                                invalid={this.hasError('formComplete','adresse','required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                value={adresse}\r\n                                                />\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>                                            \r\n                                            </div>\r\n                                        </FormGroup> \r\n                                    </div>\r\n                                    <hr />\r\n                                    <div className=\"d-flex\">\r\n                                        <Button outline color={previousColor} onClick={this.toggleStep('1')}>\r\n                                            Precedent\r\n                                        </Button>\r\n                                        <Button\r\n                                        className=\"ml-auto\"\r\n                                        color={nextColor}\r\n                                        type=\"submit\" \r\n                                        onClick={this.toggleStep('3')}\r\n                                        >\r\n                                            Suivant\r\n                                        </Button>\r\n                                    </div>   \r\n                                </TabPane>\r\n                                {/*terminer*/}\r\n                                <TabPane id=\"tabPane3\" tabId=\"3\">   \r\n                                    <div className=\"pt-3 mb-3\">\r\n                                        <FormGroup>\r\n                                            <label className=\" col-form-label text-info\">Règles et conditions d'utilisation</label>\r\n                                            <div className=\"col-xl-10\">\r\n                                                En cliquant sur \"Terminer\", vous vous engagez à ne divulguer aucunes informations relatives aux outils, et aux données des utilisateurs Green Plan sous peine de poursuites judiciares.                            \r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        <fieldset>\r\n                                            <CustomInput\r\n                                                type=\"checkbox\"\r\n                                                id=\"terms\"\r\n                                                name=\"terms\"\r\n                                                label=\"J'accepte les conditions d'utilisations\"\r\n                                                invalid={this.hasError('formComplete', 'terms', 'required')}\r\n                                                onChange={this.validateOnChange}\r\n                                                data-validate='[\"required\"]'\r\n                                                checked={terms}\r\n                                            >\r\n                                                <span className=\"invalid-feedback\">Veuillez remplir ce champ</span>\r\n                                            </CustomInput>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className=\"d-flex\">\r\n                                        <Button outline color={previousColor} onClick={this.toggleStep('2')}>\r\n                                            Precedent\r\n                                        </Button>\r\n                                        <Button\r\n                                            type=\"submit\" \r\n                                            className=\"ml-auto\"\r\n                                            color={nextColor}\r\n                                        >                                              \r\n                                            Terminer\r\n                                        </Button>\r\n                                    </div>\r\n                                </TabPane>\r\n                            </TabContent>                                            \r\n                        </Card>\r\n                        {/* END card */}\r\n                    </Form>\r\n                </div>\r\n            </ContentWrapper>\r\n            );\r\n    }\r\n \r\n}\r\n\r\nexport default SignUpManager;\r\n","/**editer les informations d'une machine */\r\nimport React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport firebase from '../../../firebase';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport FormValidator from '../../Common/FormValidator';\r\nimport swal from 'sweetalert';\r\nimport HeadingMenu from '../HeadingMenu';\r\nimport SignUpManager from './SignUpManager';\r\nimport {url_managers} from '../../../urls'\r\n\r\nconst stepNavitemStyle = {\r\n    backgroundColor: 'bg-gray-dark'\r\n};\r\n\r\n\r\nclass CompleteManager extends Component {\r\n    constructor(props) {\r\n        super(props);        \r\n        /*Ajouter les fonctionnalités par la suite, les horaires ou le planning */\r\n        this.state = {\r\n            uid: '',\r\n            formComplete : {\r\n                //account\r\n                username : '',\r\n                email: '',\r\n                role: '',\r\n                //profile\r\n                nom: '',\r\n                prenom: '',\r\n                nationalite: '',\r\n                adresse: '',\r\n                telephone: '',\r\n                cni: '',\r\n                // terminer\r\n                terms: false,\r\n            },\r\n            password: '',\r\n            isLoading: true,\r\n            activeStep: '1',\r\n            progressValue: [100, 0, 0],\r\n            path: [\r\n                { \r\n                    label: 'Manager',\r\n                    value: '/dashboard_manager',\r\n                },\r\n                { \r\n                    label: 'Completer vos informations',\r\n                    value: '',\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged( (authUser) => {\r\n            if(authUser) {\r\n                console.log(authUser.uid)\r\n                const uid = authUser.uid\r\n                axios.get(`${url_managers}${uid}`)\r\n                .then((res) => {\r\n                    const manager = res.data.data\r\n                    const email = manager.email\r\n                    const role = manager.role.nom\r\n                    this.setState({\r\n                        formComplete : {\r\n                            email: email,\r\n                            role: role,\r\n                        },\r\n                        uid: uid, \r\n                    })\r\n                })\r\n                .catch((error) => {\r\n                    console.log('Erreur', error)\r\n                    swal('Erreur', 'Vous ne pouvez pas accéder à cette page pour le moment, réessayer ultérieurement', 'error')\r\n                })\r\n            }\r\n            else {\r\n                this.props.history.push('/login')\r\n            }\r\n        })\r\n    }\r\n    \r\n    toggleStep = activeStep => () => {\r\n        // For submit we can obtain the form from the event\r\n        // but for each step we need a global ref to the element\r\n        const form = this.formCompleteRef;\r\n        // To validate only the inputs in the current steps, we use an id to query the tabPane\r\n        // and then find all form elements for the current step only.\r\n        const tabPane = document.getElementById('tabPane' + this.state.activeStep);\r\n        const inputs = [].slice.call(tabPane.querySelectorAll('input,select'));\r\n        // Run validation of inputs\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\r\n\r\n        // Update state so the validation message are shown/hidden\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        // and prevent change the if form is not valid\r\n        if (!hasError) {\r\n            const progessValue1 = [100, 0, 0];\r\n            const progessValue2 = [0, 100, 0];\r\n            const progessValue3 = [0, 0, 100];\r\n            \r\n            if (this.state.activeStep !== activeStep) {\r\n                this.setState({\r\n                    activeStep\r\n                });\r\n            }\r\n            \r\n            switch (activeStep) {\r\n                case '1':\r\n                    this.setState({\r\n                        progressValue: progessValue1\r\n                    });\r\n                    break;\r\n                case '2':\r\n                    this.setState({\r\n                        progressValue: progessValue2\r\n                    });\r\n                    break;\r\n                case '3':\r\n                    this.setState({\r\n                        progressValue: progessValue3\r\n                    });\r\n                    break;\r\n                default:\r\n                    console.log('default')\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n      * Validate input using onChange event\r\n      * @param  {String} formName The name of the form in the state object\r\n      * @return {Function} a function used for the event\r\n    */\r\n    validateOnChange = event => {\r\n        const input = event.target;\r\n        const form = input.form;\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        const result = FormValidator.validate(input);\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value,\r\n                errors: {\r\n                    ...this.state[form.name].errors,\r\n                    [input.name]: result\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    /* Simplify error check */\r\n    hasError = (formName, inputName, method) => {\r\n        return  this.state[formName] &&\r\n                this.state[formName].errors &&\r\n                this.state[formName].errors[inputName] &&\r\n                this.state[formName].errors[inputName][method]\r\n    }    \r\n\r\n    handleSubmit = e => {\r\n        const form = e.target;\r\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\r\n\r\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                errors\r\n            }\r\n        });\r\n\r\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\r\n        e.preventDefault();\r\n        console.log(hasError)\r\n        if (!hasError) {\r\n            this.complete();\r\n        }    \r\n    }\r\n\r\n    complete = () => {\r\n        const { username, nom, prenom, nationalite, adresse, telephone } = this.state.formComplete;\r\n        const uid = this.state.uid\r\n        console.log(\"dans complete\")\r\n        axios.put(`${url_managers}${uid}`, {\r\n            username,\r\n            nom,\r\n            prenom,\r\n            nationalite,\r\n            adresse,\r\n            telephone,\r\n            cni,\r\n        })\r\n        .then((docRef) => {\r\n            console.log(\"reinitialisation du formulaire\")\r\n            this.setState({\r\n                formComplete : {\r\n                    username: '',\r\n                    password: '',            \r\n                    nom: '',\r\n                    prenom: '',\r\n                    nationalite: '',\r\n                    adresse: '',\r\n                    telephone: '',\r\n                    cni: '',\r\n                    terms: false,\r\n                },\r\n            });\r\n            //feedback\r\n            console.log(\"Un manager vient de terminer son inscription ajouté!\");\r\n            let message = \"\";\r\n            swal(\"Felicitation!\", `Bienvenue dans la Green Team, ${message}`, \"success\").then((value) => {\r\n                this.props.history.push(\"/\")\r\n            }) \r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error adding document: \", error);\r\n          swal(\"Desolée!\", \"L'opération n'a pu être effectuée, veuillez recommencer ultérieurement\", \"warning\")\r\n        });\r\n    }\r\n    \r\n    // Keep a reference to the form to access from the steps methods\r\n    formRef = node => (this.formCompleteRef = node);    \r\n\r\n    render() {\r\n        return (            \r\n            <ContentWrapper>\r\n                <HeadingMenu path = {this.state.path}/>\r\n                <SignUpManager \r\n                manager={this.state}\r\n                formRef={this.formRef}\r\n                toggleStep={this.toggleStep}\r\n                validateOnChange = {this.validateOnChange}\r\n                hasError={this.hasError}\r\n                handleSubmit = {this.handleSubmit} />\r\n            </ContentWrapper>\r\n            );\r\n    }\r\n\r\n}\r\n\r\nexport default CompleteManager;\r\n"],"sourceRoot":""}