{"version":3,"sources":["components/Machine/Layout/ContentWrapper.js","components/Machine/HeadingMenu.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/reactstrap/es/Input.js","components/Machine/CRUD/ListMachine.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","HeadingMenu","path","this","map","element","value","label","to","title","Component","propTypes","PropTypes","node","inline","bool","tag","tagPropType","innerRef","oneOfType","object","func","string","cssModule","Form","_Component","_this","call","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","ref","render","_this$props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","row","check","disabled","FormGroup","type","size","number","bsSize","valid","invalid","plaintext","addon","Input","_React$Component","focus","checkInput","indexOf","isNotaNumber","RegExp","formControlClass","test","warnOnce","SearchBar","Search","ExportCSVButton","CSVExport","LocaliteFormatter","cell","Object","localite","lieu","quartier","pays","ville","DateFormatter","created","Date","createdAt","toUTCString","StatusFormatter","status","data-title","LevelFormatter","level","color","OptionFormatter","rowIndex","key","selectRow","mode","clickToSelect","selectStatus","headingStyle","backgroundColor","ListMachine","context","onChangeDay","day","setState","formFilter","date","toDate","testok","state","machines","console","log","onChangeMonth","month","mois","onChangeStatus","event","input","target","form","checked","name","allowFilter","e","find","defaultMachines","filter","machine","isFilter","clearFilter","original","heure","firebase","firestore","collection","unsubscribe","isLoading","_columns","dataField","text","hidden","headerStyle","sort","formatter","isDummyField","axios","get","url_machines","then","res","data","catch","error","options","custom","paginationSize","pageStartIndex","sizePerPage","firstPageText","prePageText","nextPageText","lastPageText","nextPageTitle","prePageTitle","firstPageTitle","lastPageTitle","showTotal","paginationTotalRenderer","customTotal","sizePerPageList","length","totalSize","labelStatus","from","pagination","paginationFactory","paginationProps","paginationTableProps","keyField","columns","search","toolkitprops","inputProps","defaultValue","onChange","timeFormat","dateFormat","placeholder","onClick","searchProps","style","bootstrap4","hover","filterFactory","baseProps","csvProps"],"mappings":"iGAAA,gBAMMA,EAAiB,SAAAC,GAAK,OACxB,qBAAKC,UAAU,kBAAf,SACKD,EAAME,OACF,qBAAKD,UAAU,SAAf,SAAyBD,EAAMG,WAE/BH,EAAMG,YASnBJ,EAAeK,aAAe,CAC1BF,QAAQ,GAGGH,O,2FCrBTM,E,kDACF,WAAYL,GAAQ,uCACVA,G,0CAGV,WACI,IAAMM,EAAOC,KAAKP,MAAMM,KACxB,OACI,qBAAKL,UAAU,kBAAf,SACQ,oBAAIA,UAAU,aAAd,SACKK,EAAKE,KAAI,SAACC,GAAD,MACW,IAAjBA,EAAQC,MACJ,qBAAIT,UAAU,yBAAd,cAA0CQ,EAAQE,MAAlD,OAEA,oBAAIV,UAAU,kBAAd,SACI,cAAC,IAAD,CAAMW,GAAIH,EAAQC,MAAOG,MAAOJ,EAAQE,MAAxC,SACMF,EAAQE,qB,GAhBxBG,aA4BXT,O,iCC/Bf,2FAQIU,EAAY,CACdZ,SAAUa,IAAUC,KACpBC,OAAQF,IAAUG,KAClBC,IAAKC,IACLC,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUS,KAAMT,IAAUU,SAC3EzB,UAAWe,IAAUU,OACrBC,UAAWX,IAAUQ,QAMnBI,EAAoB,SAAUC,GAGhC,SAASD,EAAK5B,GACZ,IAAI8B,EAKJ,OAHAA,EAAQD,EAAWE,KAAKxB,KAAMP,IAAUO,MAClCyB,OAASF,EAAME,OAAOC,KAAKC,YAAuBJ,IACxDA,EAAMK,OAASL,EAAMK,OAAOF,KAAKC,YAAuBJ,IACjDA,EARTM,YAAeR,EAAMC,GAWrB,IAAIQ,EAAST,EAAKU,UAgClB,OA9BAD,EAAOL,OAAS,SAAgBO,GAC1BhC,KAAKP,MAAMsB,UACbf,KAAKP,MAAMsB,SAASiB,GAGtBhC,KAAKgC,IAAMA,GAGbF,EAAOF,OAAS,WACV5B,KAAKgC,KACPhC,KAAKgC,IAAIJ,UAIbE,EAAOG,OAAS,WACd,IAAIC,EAAclC,KAAKP,MACnBC,EAAYwC,EAAYxC,UACxB0B,EAAYc,EAAYd,UACxBT,EAASuB,EAAYvB,OACrBwB,EAAMD,EAAYrB,IAClBE,EAAWmB,EAAYnB,SACvBqB,EAAaC,YAA8BH,EAAa,CAAC,YAAa,YAAa,SAAU,MAAO,aAEpGI,EAAUC,YAAgBC,IAAW9C,IAAWiB,GAAS,eAAwBS,GACrF,OAAoBqB,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEJ,IAAKjB,EACLrB,UAAW4C,MAIRjB,EA5Ce,CA6CtBd,aAEFc,EAAKb,UAAYA,EACjBa,EAAKxB,aApDc,CACjBgB,IAAK,QAoDQQ,O,iCCrEf,2EAMIb,EAAY,CACdZ,SAAUa,IAAUC,KACpBkC,IAAKnC,IAAUG,KACfiC,MAAOpC,IAAUG,KACjBD,OAAQF,IAAUG,KAClBkC,SAAUrC,IAAUG,KACpBC,IAAKC,IACLpB,UAAWe,IAAUU,OACrBC,UAAWX,IAAUQ,QAMnB8B,EAAY,SAAmBtD,GACjC,IAAIC,EAAYD,EAAMC,UAClB0B,EAAY3B,EAAM2B,UAClBwB,EAAMnD,EAAMmD,IACZE,EAAWrD,EAAMqD,SACjBD,EAAQpD,EAAMoD,MACdlC,EAASlB,EAAMkB,OACfwB,EAAM1C,EAAMoB,IACZuB,EAAaC,YAA8B5C,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnH6C,EAAUC,YAAgBC,IAAW9C,IAAWkD,GAAM,MAAeC,EAAQ,aAAe,gBAAcA,IAASlC,IAAS,uBAA6BkC,IAASC,IAAW,YAAqB1B,GAMtM,MAJY,aAARe,IACFC,EAAWU,SAAWA,GAGJL,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpE1C,UAAW4C,MAIfS,EAAUvC,UAAYA,EACtBuC,EAAUlD,aA1BS,CACjBgB,IAAK,OA0BQkC,O,iCC3Cf,2FAUIvC,EAAY,CACdZ,SAAUa,IAAUC,KACpBsC,KAAMvC,IAAUU,OAChB8B,KAAMxC,IAAUO,UAAU,CAACP,IAAUyC,OAAQzC,IAAUU,SACvDgC,OAAQ1C,IAAUU,OAClBiC,MAAO3C,IAAUG,KACjByC,QAAS5C,IAAUG,KACnBC,IAAKC,IACLC,SAAUN,IAAUO,UAAU,CAACP,IAAUQ,OAAQR,IAAUS,KAAMT,IAAUU,SAC3EmC,UAAW7C,IAAUG,KACrB2C,MAAO9C,IAAUG,KACjBlB,UAAWe,IAAUU,OACrBC,UAAWX,IAAUQ,QAMnBuC,EAAqB,SAAUC,GAGjC,SAASD,EAAM/D,GACb,IAAI8B,EAKJ,OAHAA,EAAQkC,EAAiBjC,KAAKxB,KAAMP,IAAUO,MACxCyB,OAASF,EAAME,OAAOC,KAAKC,YAAuBJ,IACxDA,EAAMmC,MAAQnC,EAAMmC,MAAMhC,KAAKC,YAAuBJ,IAC/CA,EARTM,YAAe2B,EAAOC,GAWtB,IAAI3B,EAAS0B,EAAMzB,UA8EnB,OA5EAD,EAAOL,OAAS,SAAgBO,GAC1BhC,KAAKP,MAAMsB,UACbf,KAAKP,MAAMsB,SAASiB,GAGtBhC,KAAKgC,IAAMA,GAGbF,EAAO4B,MAAQ,WACT1D,KAAKgC,KACPhC,KAAKgC,IAAI0B,SAIb5B,EAAOG,OAAS,WACd,IAAIC,EAAclC,KAAKP,MACnBC,EAAYwC,EAAYxC,UACxB0B,EAAYc,EAAYd,UACxB4B,EAAOd,EAAYc,KACnBG,EAASjB,EAAYiB,OACrBC,EAAQlB,EAAYkB,MACpBC,EAAUnB,EAAYmB,QACtBxC,EAAMqB,EAAYrB,IAClB0C,EAAQrB,EAAYqB,MACpBD,EAAYpB,EAAYoB,UACxBvC,EAAWmB,EAAYnB,SACvBqB,EAAaC,YAA8BH,EAAa,CAAC,YAAa,YAAa,OAAQ,SAAU,QAAS,UAAW,MAAO,QAAS,YAAa,aAEtJyB,EAAa,CAAC,QAAS,YAAYC,QAAQZ,IAAS,EACpDa,EAAe,IAAIC,OAAO,MAAO,KAKjC3B,EAAMtB,IAFiB,WAATmC,GADW,aAATA,EAG6BA,EAAO,SACpDe,EAAmB,eAEnBT,GACFS,GAAsC,aACtC5B,EAAMtB,GAAO,SATU,SAATmC,EAWde,GAAsC,QARd,UAATf,EAUfe,GAAsC,SAC7BJ,IAEPI,EADER,EACiB,KAEA,oBAInBnB,EAAWa,MAAQY,EAAaG,KAAK5B,EAAWa,QAClDgB,YAAS,oFACTd,EAASf,EAAWa,YACbb,EAAWa,MAGpB,IAAIX,EAAUC,YAAgBC,IAAW9C,EAAW2D,GAAW,aAAcD,GAAS,aAAYD,GAAS,gBAAkBA,EAAgBY,GAAmB3C,GAWhK,OATY,UAARe,GAAmBtB,GAAsB,oBAARA,KACnCuB,EAAWY,KAAOA,GAGhBZ,EAAWxC,WAAc0D,GAAsB,WAATN,GAAoC,kBAARb,GAA4B,WAARA,IACxF8B,YAAS,yBAA4BjB,EAAO,6EACrCZ,EAAWxC,UAGA6C,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpEJ,IAAKjB,EACLrB,UAAW4C,EACX,eAAgBe,MAIbG,EA1FgB,CA2FvBf,IAAMlC,WAERiD,EAAMhD,UAAYA,EAClBgD,EAAM3D,aAlGa,CACjBmD,KAAM,QAkGOQ,O,4VC5GPU,EAAcC,SAAdD,UACAE,EAAoBC,YAApBD,gBAKR,SAASE,EAAkBC,EAAM3B,GAC7B,MAAsC,IAAI4B,OAAO5B,EAAI6B,UAA9CC,EAAP,EAAOA,KAAYC,GAAnB,EAAaC,KAAb,EAAmBD,UAAnB,EAA6BE,MAC7B,OACI,oCACI,qCAAQF,EAAR,OACA,uBACA,wBAAOjF,UAAU,cAAjB,cAAiCgF,EAAjC,UAMZ,SAASI,EAAcP,EAAM3B,GACzB,IACMmC,EADO,IAAIC,KAAKpC,EAAIqC,WACLC,cAErB,OACI,qCAAQH,EAAR,OAKR,SAASI,EAAgBZ,EAAM3B,GAC3B,OAAIA,EAAIwC,OACE,qBAAK1F,UAAU,8BAA8B2F,aAAW,WAG1D,qBAAK3F,UAAU,6BAA6B2F,aAAW,WAInE,SAASC,EAAef,EAAM3B,GAW1B,OATa,GAAbA,EAAI2C,MACQ,cAAC,IAAD,CAAUC,MAAM,aAAarF,MAAM,MAAnC,kBACTyC,EAAI2C,MAAQ,IAEX3C,EAAI2C,MAAQ,GADJ,eAAC,IAAD,CAAUC,MAAM,UAAUrF,MAAOoE,EAAjC,cAAyCA,EAAzC,QAIA,eAAC,IAAD,CAAUiB,MAAM,SAASrF,MAAOoE,EAAhC,cAAwCA,EAAxC,QAMhB,SAASkB,EAAgBlB,EAAM3B,EAAK8C,GAChC,OACI,sBAAKhG,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SACI,eAAC,IAAD,CAAMW,GAAE,wBAAmBuC,EAAI+C,KAA/B,UAAsC,sBAAMjG,UAAU,uCAAtD,SAEJ,qBAAKA,UAAU,OAAf,SACI,eAAC,IAAD,CAAMW,GAAE,wBAAmBuC,EAAI+C,KAA/B,UAAsC,sBAAMjG,UAAU,yCAAtD,YAOhB,IAAMkG,EAAY,CACdC,KAAM,QACNC,eAAe,GAabC,EAAe,CACjB,CACI3F,MAAO,OACPD,MAAO,OAEX,CACIC,MAAO,aACPD,OAAQ,GAEZ,CACIC,MAAO,eACPD,OAAO,IAKT6F,EAAe,CACjBC,gBAAkB,UAClBT,MAAO,IAGLU,E,kDACF,WAAYzG,EAAO0G,GAAU,IAAD,8BACxB,cAAM1G,EAAO0G,IAwKjBC,YAAc,SAACC,GACX,EAAKC,SAAS,CACVC,WAAY,CACRC,KAAMH,KAGIA,EAAII,SAAUvB,cAAhC,IACMwB,EAAS,EAAKC,MAAMC,SAAS,GAAG7B,QACtC8B,QAAQC,IAAIJ,IAjLY,EAqL5BK,cAAgB,SAACC,GACb,EAAKV,SAAS,CACVC,WAAY,CACRU,KAAMD,MAxLU,EA8L5BE,eAAiB,SAAAC,GACb,IAAMC,EAAQD,EAAME,OACdC,EAAOF,EAAME,KACbnH,EAAuB,aAAfiH,EAAMpE,KAAsBoE,EAAMG,QAAUH,EAAMjH,MAEhE,EAAKmG,SAAL,eACKgB,EAAKE,KADV,2BAEW,EAAKb,MAAMW,EAAKE,OAF3B,kBAGSJ,EAAMI,KAAOrH,OAtME,EA2M5BsH,YAAc,SAAAC,GACVb,QAAQC,IAAI,EAAKH,MAAMJ,YACvB,IAAIK,EAAW,GAGTxB,EAASW,EAAa4B,MAAK,SAAAvC,GAAM,OAAIA,EAAOhF,OAAS,EAAKuG,MAAMJ,WAAWnB,UAGjF,OAFAyB,QAAQC,IAAI1B,EAAOjF,OAEXiF,EAAOjF,OACX,KAAK,EACDyG,EAAW,EAAKD,MAAMiB,gBAAgBC,QAAO,SAAAC,GAAO,OAAsB,GAAlBA,EAAQ1C,UAChE,MACJ,KAAK,EACDwB,EAAW,EAAKD,MAAMiB,gBAAgBC,QAAO,SAAAC,GAAO,OAAsB,GAAlBA,EAAQ1C,UAChE,MACJ,IAAK,MACDwB,EAAW,EAAKD,MAAMiB,gBAC1B,QACIf,QAAQC,IAAI,WAEpB,EAAKR,SAAS,CACVM,SAAUA,EACVmB,UAAU,IAEdlB,QAAQC,IAAIF,IAnOY,EAuO5BoB,YAAc,SAAAN,GACV,IAAMO,EAAW,EAAKtB,MAAMiB,gBAC5B,EAAKtB,SAAS,CACVM,SAAUqB,EACVF,UAAU,EACVxB,WAAY,CACRC,KAAM,GACNS,KAAM,GACNiB,MAAO,GACP9C,OAAQW,EAAa,OA9O7B,EAAK/D,IAAMmG,IAASC,YAAYC,WAAW,YAC3C,EAAKC,YAAc,KACnB,EAAK3B,MAAQ,CACTC,SAAU,GACVgB,gBAAiB,GACjBG,UAAU,EACVxB,WAAY,CACRC,KAAM,GACNS,KAAM,GACNiB,MAAO,GACP9C,OAAQ,IAEZrF,KAAM,CACF,CACIK,MAAO,OACPD,MAAO,sBAEX,CACIC,MAAO,UACPD,MAAO,iBAEX,CACIC,MAAO,QACPD,MAAO,KAGfoI,WAAW,GAEf,EAAKC,SAAW,CACZ,CACIC,UAAW,MACXC,KAAM,KACNC,QAAQ,GAEZ,CACIF,UAAW,MACXC,KAAM,MACNE,YAAa5C,EAOb6C,MAAM,GAEV,CACIJ,UAAW,OACXC,KAAM,OACNE,YAAa5C,EAMb6C,MAAO,GAEX,CACIJ,UAAW,WACXC,KAAM,cACNE,YAAa5C,EAMb8C,UAAWxE,EACXuE,MAAM,GAEV,CACIJ,UAAW,QACXC,KAAM,sBACNE,YAAa5C,EAOb8C,UAAWxD,EACXuD,MAAM,GAEV,CACIJ,UAAW,YACXC,KAAM,eACNE,YAAa5C,EAOb8C,UAAWhE,EACX+D,MAAM,GAEV,CACIJ,UAAW,SACXC,KAAM,SACNE,YAAa5C,EASb8C,UAAW3D,EACX0D,MAAM,GAEV,CACIJ,UAAU,SACVC,KAAM,SACNE,YAAa5C,EACb+C,cAAc,EACdD,UAAWrD,IArHK,E,qDAoJ5B,WAAqB,IAAD,OAGhBuD,IAAMC,IAAIC,KACTC,MAAK,SAAAC,GACF,IAAMxC,EAAWwC,EAAIC,KAAKA,KAAKzC,SAC/BC,QAAQC,IAAIF,GACZ,EAAKN,SAAS,CACVsB,gBAAiBhB,EACjBA,SAAUA,EACV2B,WAAW,IAEf1B,QAAQC,IAAI,EAAKH,MAAMiB,oBAE1B0B,OAAM,SAACC,GACJ1C,QAAQC,IAAI,uBACZD,QAAQC,IAAIyC,Q,oBAiFpB,WAAU,IAAD,OACCC,EAAU,CACZC,QAAQ,EACRC,eAAgB,EAChBC,eAAgB,EAChBC,YAAa,EACbC,cAAe,QACfC,YAAa,OACbC,aAAc,OACdC,aAAc,OACdC,cAAe,aACfC,aAAc,WACdC,eAAgB,YAChBC,cAAe,YACfC,WAAW,EACXC,wBAAyBC,EACzBC,gBAAiB,CACjB,CACI9B,KAAM,IAAKvI,MAAO,GAEtB,CACIuI,KAAM,IAAKvI,MAAO,GAEtB,CACIuI,KAAM,MACNvI,MAAOH,KAAK2G,MAAMC,SAAS6D,SAE/BC,UAAW1K,KAAK2G,MAAMC,SAAS6D,QAE7BlC,EAAYvI,KAAK2G,MAAM4B,UACvBR,EAAW/H,KAAK2G,MAAMoB,SAC5BlB,QAAQC,IAAIiB,GAGZ,IAAM1B,EAAMrG,KAAK2G,MAAMJ,WAAWC,KAC5BQ,EAAQhH,KAAK2G,MAAMJ,WAAWU,KAE9B0D,GADO3K,KAAK2G,MAAMJ,WAAW2B,MACflI,KAAK2G,MAAMJ,WAAWnB,QAkKpCmF,EAAc,SAACK,EAAMvK,EAAI4C,GAAX,OAChB,uBAAMvD,UAAU,yCAAhB,qBACYkL,EADZ,OACwBvK,EADxB,OACkC4C,EADlC,eAKJ,OACIsF,EACI,8DAEA,eAAC,IAAD,WACI,cAAC,IAAD,CAAaxI,KAAQC,KAAK2G,MAAM5G,OAChC,cAAC,qBAAD,CAAoB8K,WAAYC,IAAkBtB,GAAlD,SA3KS,SAAC,GAAD,IAAGuB,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,qBAApB,OACjB,gCACE,cAAC,IAAD,CACEC,SAAS,MACTC,QAAU,EAAK1C,SACfa,KAAO,EAAK1C,MAAMC,SAClBuE,QAAM,EAJR,SAOI,SAAAC,GAAY,OACV,gCACI,cAAC,IAAD,UACI,qBAAK1L,UAAU,mBAAf,SAEQ,cAAC,IAAD,CAAMW,GAAE,gBAAmBC,MAAM,qBAAqBZ,UAAU,+BAAhE,SACI,cAAC,IAAD,CAAQ8F,MAAM,UAAd,6BAKhB,eAAC,IAAD,WAEI,qBAAK9F,UAAU,WAAf,SACI,cAAC,IAAD,CACA8H,KAAK,aADL,SAGI,sBAAK9H,UAAU,MAAf,UACI,qBAAKA,UAAU,cAAf,SACI,oBAAIA,UAAU,6DAIlB,cAAC,IAAD,CAAWA,UAAU,WAArB,SACI,sBAAKA,UAAU,YAAf,UACI,uBAAOA,UAAU,YAAjB,kBACA,cAAC,IAAD,CACA2L,WAAY,CAAC3L,UAAW,gBACxB4L,aAAcjF,EACdlG,MAAOkG,EACPkF,SAAU,EAAKnF,mBAKvB,cAAC,IAAD,CAAW1G,UAAU,WAArB,SACI,sBAAKA,UAAU,YAAf,UACI,uBAAOA,UAAU,YAAjB,oBACA,cAAC,IAAD,CACA2L,WAAY,CAAC3L,UAAW,gBACxB8L,YAAY,EACZF,aAActE,EACd7G,MAAO6G,EACPyE,WAAW,UACXF,SAAU,EAAKxE,qBAKvB,cAAC,IAAD,CAAWrH,UAAU,WAArB,SACI,sBAAKA,UAAU,YAAf,UACI,uBAAOA,UAAU,YAAjB,sBACA,cAAC,IAAD,CACAsD,KAAK,SACLwE,KAAK,SACLkE,YAAY,qBACZH,SAAU,EAAKrE,eACf/G,MAAOwK,EALP,SAOK5E,EAAa9F,KAAI,SAACmF,GAAD,OACd,uCAAUA,EAAOhF,MAAjB,iBAKf2H,EACD,sBAAKrI,UAAU,qCAAf,UACI,sBAAMA,UAAU,8CAA8CiM,QAAS,EAAK3D,cAC5E,6CAGJ,sBAAKtI,UAAU,qCAAf,UACI,sBAAMA,UAAU,8CAA8CiM,QAAS,EAAKlE,cAC5E,mBAAG/H,UAAU,oBAAb,mCAQhB,qBAAKA,UAAU,qCAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAACwE,EAAD,2BACSkH,EAAaQ,aADtB,IAEIlM,UAAU,uBACVmM,MAAQ,CAAErG,MAAO,QACjBkG,YAAY,6DAGpB,qBAAKhM,UAAU,wBAAf,SACI,oBAAIA,UAAU,mCAM9B,eAAC,IAAD,CAAMA,UAAU,OAAhB,UACI,cAAC,IAAD,CAAUA,UAAU,YAApB,SACI,cAAC,IAAD,yBACAoM,YAAU,EACVC,OAAK,EACLlE,OAAQmE,MACRpG,UAAWA,GACNwF,EAAaa,WACbjB,MAGT,cAAC,IAAD,OAKJ,qBAAKtL,UAAU,MAAf,SACI,sBAAKA,UAAU,aAAf,UAEI,eAAC0E,EAAD,2BAAsBgH,EAAac,UAAnC,IAA8CxM,UAAU,kBAAxD,UACI,cAAC,IAAD,CAAQ8F,MAAM,YAAd,SACI,oBAAI9F,UAAU,6BAElB,oBAAIA,UAAU,wCAAd,2CAGJ,eAAC,IAAD,CAAMW,GAAG,GAAGC,MAAM,oBAAoBZ,UAAU,cAAhD,UACI,cAAC,IAAD,CAAQ8F,MAAM,YAAd,SACI,oBAAI9F,UAAU,+BAElB,oBAAIA,UAAU,wCAAd,qCAEJ,qBAAKA,UAAU,WAAf,eAIA,qBAAKA,UAAU,uBAAf,SACI,uBAAOA,UAAU,sBAAjB,+DASZ,qBAAKA,UAAU,mBAAf,SACI,cAAC,2BAAD,eAA+BqL,mB,GAxbjCxK,aAodX2F","file":"static/js/25.04d3e70f.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeadingMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.path\r\n        return (\r\n            <div className=\"content-heading\">\r\n                    <ol className=\"breadcrumb\">\r\n                        {path.map((element) =>\r\n                            element.value == '' ? (\r\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\r\n                            ):(\r\n                                <li className=\"breadcrumb-item\"> \r\n                                    <Link to={element.value} title={element.label}> \r\n                                        { element.label } \r\n                                    </Link> \r\n                                </li>\r\n                            )\r\n                        )}\r\n                   </ol>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadingMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"]);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport firebase from '../../../firebase';\r\nimport axios from 'axios';\r\nimport {url_machines} from '../../../urls'\r\n//\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Progress, Button, Row, CardBody, CardHeader, CardFooter, Card, Form, FormGroup, Input } from 'reactstrap';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport filterFactory,{textFilter, selectFilter, dateFilter, numberFilter} from 'react-bootstrap-table2-filter';\r\nimport paginationFactory, { PaginationProvider, PaginationListStandalone } from 'react-bootstrap-table2-paginator';\r\nimport ToolkitProvider, { Search, CSVExport } from 'react-bootstrap-table2-toolkit';\r\nimport HeadingMenu from '../HeadingMenu';\r\nconst { SearchBar } = Search;\r\nconst { ExportCSVButton } = CSVExport;\r\n\r\n\r\n/**  Custom Formatter */\r\n// format de l'adresse de la machine\r\nfunction LocaliteFormatter(cell, row) {\r\n    const {lieu, pays, quartier, ville} = new Object(row.localite)\r\n    return (\r\n        <address>\r\n            <span> {quartier} </span>\r\n            <br/>\r\n            <small className=\"text-italic\"> {lieu} </small>\r\n        </address>\r\n    )\r\n}\r\n\r\n// format de la date\r\nfunction DateFormatter(cell, row) {\r\n    const date = new Date(row.createdAt)\r\n    const created = date.toUTCString()\r\n    \r\n    return(\r\n        <span> {created} </span> \r\n    )\r\n}\r\n\r\n// format du status de la machine\r\nfunction StatusFormatter(cell, row) {\r\n    if (row.status) {\r\n      return (<div className=\"circle circle-lg bg-success\" data-title=\"normal\"/>);\r\n    }\r\n\r\n    return (<div className=\"circle circle-lg bg-danger\" data-title=\"normal\"/>);\r\n}\r\n\r\n// format du niveau de remplissage de la machine\r\nfunction LevelFormatter(cell, row) {\r\n    let vari;\r\n    row.level == 0 ? (\r\n        vari = (<Progress color='gray-light' value='100'> 0% </Progress>)\r\n    ): row.level < 50? (\r\n        vari = (<Progress color='warning' value={cell}> {cell}% </Progress>)        \r\n    ) : row.level < 75? (\r\n        vari = (<Progress color='warning' value={cell}> {cell}% </Progress>)        \r\n    ) : ( \r\n        vari = (<Progress color='danger' value={cell}> {cell}% </Progress>)        \r\n    )\r\n    return vari;\r\n}\r\n\r\n// format des options sur les données\r\nfunction OptionFormatter(cell, row, rowIndex) {\r\n    return (\r\n        <div className=\"md-6 row \">\r\n            <div className='pl-3 pr-3'>\r\n                <Link to={`/show_machine/${row.key}`}><span className=\"fas fa-info-circle fa-1x text-info\"/> </Link>\r\n            </div>\r\n            <div className='pl-3'>\r\n                <Link to={`/edit_machine/${row.key}`}><span className=\"fas fa-pencil-alt fa-1x text-warning\"/> </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n// action déclenchée lorsqu'on selectionne une ligne\r\nconst selectRow = {\r\n    mode: 'radio',\r\n    clickToSelect: true\r\n};\r\n\r\n// enable list filter\r\nlet listFilter = {\r\n    nameFilter: '',\r\n    zoneFilter: '',\r\n    adresseFilter: '',\r\n    statusFilter: '',\r\n    createdFilter: '',\r\n    levelFilter: '',\r\n}\r\n\r\nconst selectStatus = [\r\n    {\r\n        label: 'tous',\r\n        value: 'all'\r\n    },\r\n    {\r\n        label: 'disponible',\r\n        value : true\r\n    },\r\n    {\r\n        label: 'indisponible',\r\n        value: false\r\n    }\r\n]\r\n\r\n// header style for datatable\r\nconst headingStyle = {\r\n    backgroundColor : '#E5F1FB',\r\n    color: ''\r\n}\r\n\r\nclass ListMachine extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.ref = firebase.firestore().collection('machines');\r\n        this.unsubscribe = null;\r\n        this.state = { \r\n            machines: [],\r\n            defaultMachines: [],\r\n            isFilter: false,\r\n            formFilter: {\r\n                date: '',\r\n                mois: '',\r\n                heure: '',\r\n                status: '',\r\n            },\r\n            path: [\r\n                { \r\n                    label: 'Home',\r\n                    value: '/dashboard_machine',\r\n                },\r\n                { \r\n                    label: 'Machine',\r\n                    value: '/list_machine',\r\n                },\r\n                { \r\n                    label: 'Liste',\r\n                    value: '',\r\n                }\r\n            ],\r\n            isLoading: true,\r\n        };\r\n        this._columns = [\r\n            {\r\n                dataField: 'key',\r\n                text: 'ID',\r\n                hidden: true\r\n            },\r\n            {\r\n                dataField: 'nom',\r\n                text: 'Nom',\r\n                headerStyle: headingStyle,\r\n                /*filter: textFilter({\r\n                    placeholder: '',\r\n                    getFilter: (filter) => {\r\n                        listFilter.nameFilter = filter;\r\n                    }\r\n                }),*/\r\n                sort: true\r\n            },\r\n            {\r\n                dataField: 'zone',\r\n                text: 'Zone',\r\n                headerStyle: headingStyle,\r\n                /*filter: textFilter({\r\n                    getFilter: (filter) => {\r\n                        listFilter.zoneFilter = filter;\r\n                    }\r\n                }),*/                \r\n                sort : true\r\n            },\r\n            {\r\n                dataField: 'localite',\r\n                text: 'Emplacement',\r\n                headerStyle: headingStyle,\r\n                /*filter: textFilter({\r\n                    getFilter: (filter) => {\r\n                        listFilter.adressFilter = filter;\r\n                    }\r\n                }),*/                \r\n                formatter: LocaliteFormatter,\r\n                sort: true\r\n            },\r\n            {\r\n                dataField: 'level',\r\n                text: 'Taux de remplissage',\r\n                headerStyle: headingStyle,                              \r\n                /*filter: textFilter({\r\n                    //withoutEmptyComparatorOption: true,\r\n                    getFilter: (filter) => {\r\n                        listFilter.levelFilter = filter;\r\n                    }\r\n                }), */               \r\n                formatter: LevelFormatter,\r\n                sort: true\r\n            },\r\n            {\r\n                dataField: 'createdAt',\r\n                text: 'Date d\\'ajout',\r\n                headerStyle: headingStyle,\r\n                /*filter: dateFilter({\r\n                    className: 'row',\r\n                    getFilter(filter) {\r\n                        listFilter.dateFilter = filter;\r\n                    }\r\n                }),*/\r\n                formatter: DateFormatter,\r\n                sort: true\r\n            },\r\n            {\r\n                dataField: 'status',\r\n                text: 'Statut',\r\n                headerStyle: headingStyle,\r\n                /*filter: selectFilter({\r\n                    options: selectStatus,\r\n                    style: {\r\n                      backgroundColor: ''\r\n                    },\r\n                    className: 'test-classname',\r\n                    datamycustomattr: 'datamycustomattr'\r\n                }),*/                \r\n                formatter: StatusFormatter,\r\n                sort: true\r\n            },\r\n            {\r\n                dataField:'option',\r\n                text: 'Option',\r\n                headerStyle: headingStyle,\r\n                isDummyField: true,\r\n                formatter: OptionFormatter\r\n            }\r\n        ];   \r\n    }\r\n    \r\n    /* 1. connect directly to firestore /\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        const machines = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const { nom, zone, r_modele, level, localite, created, status } = doc.data();\r\n          /* remplir le tableau /\r\n          machines.push({\r\n            key: doc.id,\r\n            doc, // DocumentSnapshot\r\n            nom,\r\n            zone,\r\n            localite,\r\n            level,\r\n            created,\r\n            status,\r\n          });\r\n        });\r\n        this.setState({\r\n          defaultMachines: machines,\r\n          machines: machines, \r\n          isLoading: false,\r\n       });\r\n       console.log(this.state.defaultMachines)\r\n    }\r\n    */\r\n    \r\n    componentDidMount() {\r\n        //this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n        \r\n        axios.get(url_machines)\r\n        .then(res => {\r\n            const machines = res.data.data.machines\r\n            console.log(machines);\r\n            this.setState({\r\n                defaultMachines: machines,\r\n                machines: machines, \r\n                isLoading: false,\r\n            })\r\n            console.log(this.state.defaultMachines);\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"get machine failed!\")\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    // form for filtering date\r\n    onChangeDay = (day) => {\r\n        this.setState({\r\n            formFilter: {\r\n                date: day\r\n            }\r\n        });\r\n        const testDate = (day.toDate()).toUTCString()\r\n        const testok = this.state.machines[0].created\r\n        console.log(testok)\r\n        \r\n    }\r\n    \r\n    onChangeMonth = (month) => {\r\n        this.setState({\r\n            formFilter: {\r\n                mois: month\r\n            }\r\n        });\r\n    }\r\n\r\n    //form for other filter type\r\n    onChangeStatus = event => {\r\n        const input = event.target;\r\n        const form = input.form;\r\n        const value = input.type === 'checkbox' ? input.checked : input.value;\r\n\r\n        this.setState({\r\n            [form.name]: {\r\n                ...this.state[form.name],\r\n                [input.name]: value\r\n            }\r\n        })\r\n    };    \r\n\r\n    allowFilter = e => {\r\n        console.log(this.state.formFilter);\r\n        let machines = []\r\n\r\n        // status filter\r\n        const status = selectStatus.find(status => status.label == this.state.formFilter.status)\r\n        console.log(status.value)\r\n\r\n        switch (status.value) {\r\n            case true:\r\n                machines = this.state.defaultMachines.filter(machine => machine.status == true)\r\n                break;\r\n            case false:\r\n                machines = this.state.defaultMachines.filter(machine => machine.status == false)\r\n                break;\r\n            case 'all':\r\n                machines = this.state.defaultMachines\r\n            default:\r\n                console.log('default')\r\n        }\r\n        this.setState({\r\n            machines: machines,\r\n            isFilter: true\r\n        })\r\n        console.log(machines)\r\n    }\r\n\r\n    //clear filter\r\n    clearFilter = e => {\r\n        const original = this.state.defaultMachines\r\n        this.setState({\r\n            machines: original,\r\n            isFilter: false,\r\n            formFilter: {\r\n                date: '',\r\n                mois: '',\r\n                heure: '',\r\n                status: selectStatus[0],\r\n            },                \r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const options = {\r\n            custom: true,\r\n            paginationSize: 4,\r\n            pageStartIndex: 1,\r\n            sizePerPage: 4,\r\n            firstPageText: 'First',\r\n            prePageText: 'Back',\r\n            nextPageText: 'Next',\r\n            lastPageText: 'Last',\r\n            nextPageTitle: 'First page',\r\n            prePageTitle: 'Pre page',\r\n            firstPageTitle: 'Next page',\r\n            lastPageTitle: 'Last page',\r\n            showTotal: true,\r\n            paginationTotalRenderer: customTotal,\r\n            sizePerPageList: [\r\n            {\r\n                text: '2', value: 2\r\n            }, \r\n            {\r\n                text: '5', value: 5\r\n            }, \r\n            {\r\n                text: 'All',\r\n                value: this.state.machines.length\r\n            }],\r\n            totalSize: this.state.machines.length\r\n        };\r\n        const isLoading = this.state.isLoading;\r\n        const isFilter = this.state.isFilter;\r\n        console.log(isFilter)\r\n\r\n        //filter date attribute\r\n        const day = this.state.formFilter.date\r\n        const month = this.state.formFilter.mois\r\n        const hour = this.state.formFilter.heure;\r\n        const labelStatus = this.state.formFilter.status\r\n\r\n\r\n        const contentTable = ({ paginationProps, paginationTableProps }) => (\r\n            <div>\r\n              <ToolkitProvider\r\n                keyField=\"key\"\r\n                columns={ this._columns }\r\n                data={ this.state.machines }\r\n                search           \r\n                >\r\n                {\r\n                  toolkitprops => (\r\n                    <div>\r\n                        <Row>\r\n                            <div className=\"col-xl-3 ml-auto\">\r\n                                    {/*add icon */}\r\n                                    <Link to={`/add_machine/`} title=\"Editer la GreenBox\" className=\"d-flex col-xl-7 ml-auto pr-3\">\r\n                                        <Button color=\"success\"> Ajouter </Button>\r\n                                    </Link>\r\n                            </div>\r\n                        </Row>\r\n                        {/*Fitre et barre de recherche */}\r\n                        <Row>\r\n                            {/*filtre */}\r\n                            <div className=\"col-xl-7\">\r\n                                <Form \r\n                                name=\"formFilter\" \r\n                                >\r\n                                    <div className=\"row\">\r\n                                        <div className=\"ml-3 d-flex\">\r\n                                            <em className=\"m-0 fas fa-filter fa-2x text-success align-self-center\"/>\r\n                                            {/*<em> Filtrer vos données ici </em>*/}\r\n                                        </div>\r\n                                        {/*date */}\r\n                                        <FormGroup className=\"col-xl-3\">\r\n                                            <div className=\"pl-2 mr-2\">\r\n                                                <label className=\"text-bold\">Date</label>\r\n                                                <Datetime \r\n                                                inputProps={{className: 'form-control'}}\r\n                                                defaultValue={day}\r\n                                                value={day}\r\n                                                onChange={this.onChangeDay}\r\n                                                />\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {/*month */}\r\n                                        <FormGroup className=\"col-xl-3\">\r\n                                            <div className=\"pl-2 mr-2\">\r\n                                                <label className=\"text-bold\"> Mois </label>\r\n                                                <Datetime \r\n                                                inputProps={{className: 'form-control'}}\r\n                                                timeFormat={false}\r\n                                                defaultValue={month}\r\n                                                value={month}\r\n                                                dateFormat=\"YYYY-MM\" \r\n                                                onChange={this.onChangeMonth}\r\n                                                />\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {/*status */}\r\n                                        <FormGroup className=\"col-xl-3\">\r\n                                            <div className=\"pl-2 mr-2\">\r\n                                                <label className=\"text-bold\"> Status </label>\r\n                                                <Input \r\n                                                type=\"select\"\r\n                                                name=\"status\" \r\n                                                placeholder=\"etat de la machine\" \r\n                                                onChange={this.onChangeStatus}\r\n                                                value={labelStatus}\r\n                                                >\r\n                                                    {selectStatus.map((status) =>\r\n                                                        <option> {status.label} </option>\r\n                                                    )}\r\n                                                </Input>\r\n                                            </div>\r\n                                        </FormGroup>\r\n                                        {isFilter? (\r\n                                        <div className=\"row pl-4 d-flex align-items-center\">\r\n                                            <span className=\"fas fa-minus-square text-inverse fa-2x mr-2\" onClick={this.clearFilter}/>\r\n                                            <p> Effacer </p>\r\n                                        </div>\r\n                                        ):(\r\n                                        <div className=\"row pl-4 d-flex align-items-center\">\r\n                                            <span className=\"fas fa-check-square text-success fa-2x mr-2\" onClick={this.allowFilter}/>\r\n                                            <p className=\"align-self-center\"> Appliquer </p>\r\n                                        </div>\r\n                                    \r\n                                        )}\r\n                                    </div>\r\n                                </Form>\r\n                            </div>                                        \r\n                            {/*search bar */}\r\n                            <div className=\"col-xl-4 align-self-center ml-auto\">\r\n                                <div className=\"media\">\r\n                                    <div className=\"media-body\">\r\n                                        <SearchBar \r\n                                            { ...toolkitprops.searchProps }\r\n                                            className=\"custome-search-field\"\r\n                                            style={ { color: 'dark' } }\r\n                                            placeholder=\"Rechercher un nom, une zone, un niveau de remplissage\"                    \r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"align-self-start mr-2\">\r\n                                        <em className=\"fas fa-search fa-2x \"></em>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Row>\r\n                        {/*table */}\r\n                        <Card className=\"m-20\">\r\n                            <CardBody className=\"ml-5 mr-5\">\r\n                                <BootstrapTable\r\n                                bootstrap4\r\n                                hover\r\n                                filter={filterFactory()}\r\n                                selectRow={selectRow}\r\n                                { ...toolkitprops.baseProps }\r\n                                { ...paginationTableProps }\r\n                                />\r\n                            </CardBody>\r\n                            <CardFooter>\r\n                                \r\n                            </CardFooter>\r\n                        </Card>\r\n                        {/*Print or export */}\r\n                        <div className=\"col\">\r\n                            <div className=\"media m-10\">\r\n                                {/*export icon */}\r\n                                <ExportCSVButton { ...toolkitprops.csvProps } className=\"d-flex p-0 mr-5\" >\r\n                                    <Button color=\"secondary\">\r\n                                        <em className=\"fas fa-share text-info\"></em>\r\n                                    </Button>                          \r\n                                    <em className=\"align-self-center text-dark text-bold\">  Exporter au format CSV </em>\r\n                                </ExportCSVButton>\r\n                                {/*print icon */}\r\n                                <Link to=\"\" title=\"Imprimer la liste\" className=\"d-flex mr-3\">\r\n                                    <Button color=\"secondary\">\r\n                                        <em className=\"fa fa-print text-purple \"></em>\r\n                                    </Button>                                \r\n                                    <em className=\"align-self-center text-dark text-bold\">  Imprimer la liste </em>\r\n                                </Link>\r\n                                <div className=\"col-xl-3\">\r\n                                    .\r\n                                </div>\r\n                                {/*updated date */}\r\n                                <div className=\"col-xl-1 ml-auto p-0\">\r\n                                    <small className=\"mb-0 mt-1 text-dark\">Mis à jour le : 04/05/21 14:24:18</small>\r\n                                </div>\r\n                            </div>\r\n                        </div>                        \r\n                    </div>\r\n                  )\r\n                }\r\n              </ToolkitProvider>\r\n                    {/*pagination list */}\r\n                        <div className=\"ml-auto col-xl-3\">\r\n                            <PaginationListStandalone { ...paginationProps } />\r\n                        </div>\r\n                    </div>\r\n        );\r\n        \r\n        const customTotal = (from, to, size) => (\r\n            <span className=\"react-bootstrap-table-pagination-total\">\r\n              Showing { from } to { to } of { size } Results\r\n            </span>\r\n        );\r\n        \r\n        return  (\r\n            isLoading? (\r\n                <div> En cours de chargement... </div>\r\n            ):(\r\n                <ContentWrapper>\r\n                    <HeadingMenu path = {this.state.path}/>\r\n                    <PaginationProvider pagination={paginationFactory(options)}>\r\n                        { contentTable }\r\n                    </PaginationProvider>\r\n                </ContentWrapper>\r\n            )\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMachine;\r\n\r\n\r\n"],"sourceRoot":""}