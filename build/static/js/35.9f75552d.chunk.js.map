{"version":3,"sources":["components/Common/FormValidator.js","components/Authentication/AuthFunction.js","../node_modules/reactstrap/es/CustomFileInput.js","../node_modules/reactstrap/es/CustomInput.js","components/Authentication/SignInUser.js"],"names":["FormValidator","validate","element","isCheckbox","type","value","checked","name","Error","param","getAttribute","validations","JSON","parse","result","length","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","document","getElementById","equals","isLength","min","max","toInt","list","isIn","bulkValidate","inputs","errors","hasError","input","Object","keys","some","val","signIn","email","password","a","console","log","firebase","auth","signInWithEmailAndPassword","userCredential","signOut","propTypes","className","PropTypes","string","id","oneOfType","number","isRequired","label","node","valid","bool","invalid","bsSize","htmlFor","cssModule","object","onChange","func","children","array","innerRef","CustomFileInput","_React$Component","props","_this","call","this","state","files","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","target","getSelectedFiles","apply","arguments","setState","multiple","slice","map","file","join","indexOf","parts","split","render","_this$props","dataBrowse","hidden","attributes","_objectWithoutPropertiesLoose","customClass","mapToCssModules","classNames","validationClassNames","labelHtmlFor","React","createElement","_extends","ref","Component","inline","CustomInput","_rest","wrapperClasses","rest","Login","formLogin","validateOnChange","event","form","onSubmit","elements","filter","i","includes","nodeName","preventDefault","connexion","then","response","history","push","catch","error","swal","message","formName","inputName","method","href","placeholder","data-validate","to"],"mappings":"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","file":"static/js/35.9f75552d.chunk.js","sourcesContent":["// https://github.com/chriso/validator.js\nimport validator from 'validator';\n\n/**\n * Helper methods to validate form inputs\n * using controlled components\n */\nconst FormValidator = {\n    /**\n     * Validate input element\n     * @param element Dome element of the input\n     * Uses the following attributes\n     *     data-validate: array in json format with validation methods\n     *     data-param: used to provide arguments for certain methods.\n     */\n    validate(element) {\n\n        const isCheckbox = element.type === 'checkbox';\n        const value = isCheckbox ? element.checked : element.value;\n        const name = element.name;\n\n        if (!name) throw new Error('Input name must not be empty.');\n\n        // use getAttribute to support IE10+\n        const param = element.getAttribute('data-param');\n        const validations = JSON.parse(element.getAttribute('data-validate'));\n\n        let result = []\n        if(validations && validations.length) {\n            /*  Result of each validation must be true if the input is invalid\n                and false if valid. */\n            validations.forEach(m => {\n                switch (m) {\n                    case 'required':\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\n                        break;\n                    case 'email':\n                        result[m] = !validator.isEmail(value)\n                        break;\n                    case 'number':\n                        result[m] = !validator.isNumeric(value)\n                        break;\n                    case 'integer':\n                        result[m] = !validator.isInt(value)\n                        break;\n                    case 'alphanum':\n                        result[m] = !validator.isAlphanumeric(value)\n                        break;\n                    case 'url':\n                        result[m] = !validator.isURL(value)\n                        break;\n                    case 'equalto':\n                        // here we expect a valid ID as param\n                        const value2 = document.getElementById(param).value;\n                        result[m] = !validator.equals(value, value2)\n                        break;\n                    case 'minlen':\n                        result[m] = !validator.isLength(value, { min: param })\n                        break;\n                    case 'maxlen':\n                        result[m] = !validator.isLength(value, { max: param })\n                        break;\n                    case 'len':\n                        const [min, max] = JSON.parse(param)\n                        result[m] = !validator.isLength(value, { min, max })\n                        break;\n                    case 'min':\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\n                        break;\n                    case 'max':\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\n                        break;\n                    case 'list':\n                        const list = JSON.parse(param)\n                        result[m] = !validator.isIn(value, list)\n                        break;\n                    default:\n                        throw new Error('Unrecognized validator.');\n                }\n\n            })\n        }\n\n        return result;\n    },\n\n    /**\n     * Bulk validation of input elements.\n     * Used with form elements collection.\n     * @param  {Array} inputs Array for DOM element\n     * @return {Object}       Contains array of error and a flag to\n     *                        indicate if there was a validation error\n     */\n    bulkValidate(inputs) {\n        let errors = {},\n            hasError = false;\n\n        inputs.forEach(input => {\n            let result = this.validate(input)\n            errors = { ...errors, [input.name]: result }\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\n        })\n\n        return {\n            errors,\n            hasError\n        }\n    }\n}\n\nexport default FormValidator;","import firebase from '../../firebase';\nimport axios from 'axios';\nimport {url_managers} from '../../urls';\n\n\n// L'administrateur ajoute les managers\nconst createManager = async (email, name) => {\n    console.log(email)\n    // generated password\n    const password = (Math.random() + 1).toString(36).substring(5)\n    console.log(password)\n    try {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(email, password)\n        console.log(`User ${email} added succefully!`)\n        const user = userCredential.user\n        const response = {\n            password,\n            user,\n        }\n        return (response) \n    } \n    catch (error) {\n        throw new Error(error.message)\n    }\n};\n\n// Login\nconst signIn = async (email, password) => {\n    console.log(email, password)\n    const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password)\n    console.log(\"user : \", userCredential)\n    console.log(`Sign in succeed ${email}!`);\n    return (userCredential) \n}\n\nconst signOut = async () => {\n    firebase.auth().signOut()\n}\n\nexport { \n    signIn, \n    createManager,\n    signOut,\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  label: PropTypes.node,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  onChange: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nvar CustomFileInput = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CustomFileInput, _React$Component);\n\n  function CustomFileInput(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      files: null\n    };\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = CustomFileInput.prototype;\n\n  _proto.onChange = function onChange(e) {\n    var input = e.target;\n    var onChange = this.props.onChange;\n    var files = this.getSelectedFiles(input);\n\n    if (typeof onChange === \"function\") {\n      onChange.apply(void 0, arguments);\n    }\n\n    this.setState({\n      files: files\n    });\n  };\n\n  _proto.getSelectedFiles = function getSelectedFiles(input) {\n    var multiple = this.props.multiple;\n\n    if (multiple && input.files) {\n      var files = [].slice.call(input.files);\n      return files.map(function (file) {\n        return file.name;\n      }).join(\", \");\n    }\n\n    if (input.value.indexOf(\"fakepath\") !== -1) {\n      var parts = input.value.split(\"\\\\\");\n      return parts[parts.length - 1];\n    }\n\n    return input.value;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        label = _this$props.label,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        bsSize = _this$props.bsSize,\n        innerRef = _this$props.innerRef,\n        htmlFor = _this$props.htmlFor,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        dataBrowse = _this$props.dataBrowse,\n        hidden = _this$props.hidden,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"label\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\", \"type\", \"onChange\", \"dataBrowse\", \"hidden\"]);\n\n    var customClass = mapToCssModules(classNames(className, \"custom-file\"), cssModule);\n    var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n    var labelHtmlFor = htmlFor || attributes.id;\n    var files = this.state.files;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: customClass,\n      hidden: hidden || false\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({\n      type: \"file\"\n    }, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, mapToCssModules(\"custom-file-input\", cssModule)),\n      onChange: this.onChange\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: mapToCssModules(\"custom-file-label\", cssModule),\n      htmlFor: labelHtmlFor,\n      \"data-browse\": dataBrowse\n    }, files || label || \"Choose file\"), children);\n  };\n\n  return CustomFileInput;\n}(React.Component);\n\nCustomFileInput.propTypes = propTypes;\nexport default CustomFileInput;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules } from './utils';\nimport CustomFileInput from './CustomFileInput';\nvar propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.node,\n  inline: PropTypes.bool,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  bsSize: PropTypes.string,\n  htmlFor: PropTypes.string,\n  cssModule: PropTypes.object,\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.array, PropTypes.func]),\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\n\nfunction CustomInput(props) {\n  var className = props.className,\n      label = props.label,\n      inline = props.inline,\n      valid = props.valid,\n      invalid = props.invalid,\n      cssModule = props.cssModule,\n      children = props.children,\n      bsSize = props.bsSize,\n      innerRef = props.innerRef,\n      htmlFor = props.htmlFor,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"label\", \"inline\", \"valid\", \"invalid\", \"cssModule\", \"children\", \"bsSize\", \"innerRef\", \"htmlFor\"]);\n\n  var type = attributes.type;\n  var customClass = mapToCssModules(classNames(className, \"custom-\" + type, bsSize ? \"custom-\" + type + \"-\" + bsSize : false), cssModule);\n  var validationClassNames = mapToCssModules(classNames(invalid && \"is-invalid\", valid && \"is-valid\"), cssModule);\n  var labelHtmlFor = htmlFor || attributes.id;\n\n  if (type === \"select\") {\n    var _type = attributes.type,\n        _rest = _objectWithoutPropertiesLoose(attributes, [\"type\"]);\n\n    return /*#__PURE__*/React.createElement(\"select\", _extends({}, _rest, {\n      ref: innerRef,\n      className: classNames(validationClassNames, customClass),\n      \"aria-invalid\": invalid\n    }), children);\n  }\n\n  if (type === \"file\") {\n    return /*#__PURE__*/React.createElement(CustomFileInput, props);\n  }\n\n  if (type !== \"checkbox\" && type !== \"radio\" && type !== \"switch\") {\n    return /*#__PURE__*/React.createElement(\"input\", _extends({}, attributes, {\n      ref: innerRef,\n      \"aria-invalid\": invalid,\n      className: classNames(validationClassNames, customClass)\n    }));\n  }\n\n  var wrapperClasses = classNames(customClass, mapToCssModules(classNames(\"custom-control\", {\n    \"custom-control-inline\": inline\n  }), cssModule));\n\n  var hidden = attributes.hidden,\n      rest = _objectWithoutPropertiesLoose(attributes, [\"hidden\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: wrapperClasses,\n    hidden: hidden || false\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, rest, {\n    type: type === \"switch\" ? \"checkbox\" : type,\n    ref: innerRef,\n    \"aria-invalid\": invalid,\n    className: classNames(validationClassNames, mapToCssModules(\"custom-control-input\", cssModule))\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    className: mapToCssModules(\"custom-control-label\", cssModule),\n    htmlFor: labelHtmlFor\n  }, label), children);\n}\n\nCustomInput.propTypes = propTypes;\nexport default CustomInput;","import React, { Component, useEffect, useState } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Input, CustomInput, Col } from 'reactstrap';\nimport { signIn } from './AuthFunction.js';\nimport FormValidator from '../Common/FormValidator.js';\nimport swal from 'sweetalert';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    state = {\n        formLogin: {\n            email: '',\n            password: ''\n        }\n    }\n     /**\n      * Validate input using onChange event\n      * @param  {String} formName The name of the form in the state object\n      * @return {Function} a function used for the event\n      */\n    validateOnChange = event => {\n        const input = event.target;\n        const form = input.form\n        const value = input.type === 'checkbox' ? input.checked : input.value;\n\n        const result = FormValidator.validate(input);\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                [input.name]: value,\n                errors: {\n                    ...this.state[form.name].errors,\n                    [input.name]: result\n                }\n            }\n        });\n\n    }\n\n    onSubmit = e => {\n        const form = e.target;\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\n\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                errors\n            }\n        });\n\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\n        e.preventDefault()\n\n        this.connexion()\n    }\n\n    connexion = () => {\n        const email =this.state.formLogin.email\n        const password = this.state.formLogin.password\n        console.log(email, password)\n        signIn(email, password)\n        .then((response) => {\n            this.props.history.push('/')\n        })\n        .catch ((error) => {\n            console.log(\"error\", error);\n            swal(\"Connexion Failed\", error.message , \"warning\")\n        })\n    }\n\n    /* Simplify error check */\n    hasError = (formName, inputName, method) => {\n        return  this.state[formName] &&\n                this.state[formName].errors &&\n                this.state[formName].errors[inputName] &&\n                this.state[formName].errors[inputName][method]\n    }\n\n    render() {\n        return (\n        <div className='row'>\n            {/*<img src=\"img/Businessman-pana.png\" alt=\"Fonctionnalite indisponible\" width=\"60%\" height=\"70%\" />*/}\n            <div className=\"block-center mt-4 wd-xl \">\n                <div className=\"card card-flat\">\n                    <div className=\"card-header text-center bg-dark\">\n                        <a href=\"\">\n                            <em className=\"fas fa-recycle text-success fa-1x\"></em>\n                        </a>\n                    </div>\n                    <div className=\"card-body\">\n                        <p className=\"text-center py-2\">Au plaisir de vous revoir !</p>\n                        <form className=\"mb-3\" name=\"formLogin\" onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <div className=\"input-group with-focus\">\n                                    <Input type=\"email\"\n                                        name=\"email\"\n                                        className=\"border-right-0\"\n                                        placeholder=\"Enter email\"\n                                        invalid={this.hasError('formLogin','email','required')||this.hasError('formLogin','email','email')}\n                                        onChange={this.validateOnChange}\n                                        data-validate='[\"required\", \"email\"]'\n                                        value={this.state.formLogin.email}/>\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\n                                            <em className=\"fa fa-envelope\"></em>\n                                        </span>\n                                    </div>\n                                    { this.hasError('formLogin','email','required') && <span className=\"invalid-feedback\">Veuillez renseigner ce champ</span> }\n                                    { this.hasError('formLogin','email','email') && <span className=\"invalid-feedback\">Cette adresse n'est pas valide</span> }\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <div className=\"input-group with-focus\">\n                                    <Input type=\"password\"\n                                        id=\"id-password\"\n                                        name=\"password\"\n                                        className=\"border-right-0\"\n                                        placeholder=\"Password\"\n                                        invalid={this.hasError('formLogin','password','required')}\n                                        onChange={this.validateOnChange}\n                                        data-validate='[\"required\"]'\n                                        value={this.state.formLogin.password}\n                                    />\n                                    <div className=\"input-group-append\">\n                                        <span className=\"input-group-text text-muted bg-transparent border-left-0\">\n                                            <em className=\"fa fa-lock\"></em>\n                                        </span>\n                                    </div>\n                                    <span className=\"invalid-feedback\">Veuillez renseigner ce champ</span>\n                                </div>\n                            </div>\n                            <div className=\"clearfix\">\n                                <CustomInput hidden type=\"checkbox\" id=\"rememberme\"\n                                    className=\"float-left mt-0\"\n                                    name=\"remember\"\n                                    label=\"Remember Me\">\n                                </CustomInput>\n                                <div className=\"float-right\">\n                                    <Link to=\"recover\" className=\"text-muted\">Mot de passe oublié?</Link>\n                                </div>\n                            </div>\n                            <button className=\"btn btn-block btn-primary mt-3\" type=\"submit\">Connexion</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        \n        </div>\n        );\n    }\n}\n\nexport default Login;\n"],"sourceRoot":""}