{"version":3,"sources":["components/Machine/Layout/ContentWrapper.js","components/Machine/HeadingMenu.js","../node_modules/reactstrap/es/Row.js","../node_modules/reactstrap/es/Col.js","allconfig.js","components/Machine/Maps/MapMachine.js","components/Machine/Dashboard/ApercuMachine.js","components/Machine/Dashboard/HeaderDashboard.js","components/Machine/Dashboard/Dashboard_machine.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","HeadingMenu","path","this","map","element","value","label","to","title","Component","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","cssModule","object","form","xs","sm","md","lg","xl","widths","Row","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","Col","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","length","googleMapsApiKey","FullMarker","position","onClick","key","DemoMapCustomMarkers","console","log","customMarkers","mapContainerStyle","containerStyle","zoom","center","machine","MapMachine","onResize","state","customStyle","featureType","stylers","visibility","color","elementType","lightness","machines","listeMachine","positions","lat","parseFloat","coordonnees","latitude","lng","longitude","nom","isSelect","currentMachine","etatFalse","etatTrue","ApercuMachine","localite","level","status","qte_bte","modele","Object","libelle","description","pays","ville","quartier","lieu","nb_bte","etat","levelFormatter","levelColor","outline","data-title","hidden","HeaderDashboard","toggleTab","tab","activeTab","setState","machinesPleines","machinesDown","nb_machines","chiffres","nb_pleines","nb_down","width","height","Dashboard_machine","context","selectMachine","e","latLng","toJSON","toString","find","_","isEqual","filter","labelFilter","isSelectMachine","selectedMachine","resizeMap","defaultMachines","plein","indisponible","isLoading","axios","get","url_machines","then","res","data","catch","error","total_bte","reduce","previousValue","currentValue","keySelected","Card","href","src","alt","withTranslation"],"mappings":"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","file":"static/js/17.87e69de4.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass HeadingMenu extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    render() {\r\n        const path = this.props.path\r\n        return (\r\n            <div className=\"content-heading\">\r\n                    <ol className=\"breadcrumb\">\r\n                        {path.map((element) =>\r\n                            element.value == '' ? (\r\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\r\n                            ):(\r\n                                <li className=\"breadcrumb-item\"> \r\n                                    <Link to={element.value} title={element.label}> \r\n                                        { element.label } \r\n                                    </Link> \r\n                                </li>\r\n                            )\r\n                        )}\r\n                   </ol>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\nexport default HeadingMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","const googleMapsApiKey=\"AIzaSyB2gRtnm_h3PmxB6ZhZ1ZBpvwAYiQheb1Y\"\r\n\r\nexport { googleMapsApiKey}","import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { googleMapsApiKey} from '../../../allconfig';\r\n\r\nconst svgMarker = {\r\n    path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\r\n    fillColor: \"green\",\r\n    fillOpacity: 1,\r\n    strokeWeight: 0,\r\n    rotation: 0,\r\n    scale: 2,\r\n    //anchor: new google.maps.Point(15, 30),\r\n};\r\n\r\nconst FullMarker = props => (\r\n    <Marker \r\n    key={props.key} \r\n    position={props.position}\r\n    onClick={props.onClick}\r\n    />\r\n)\r\n\r\nconst LowMarker = props => (\r\n    <Marker \r\n    key={props.key} \r\n    position={props.position}\r\n    onClick={props.onClick}\r\n    icon={svgMarker}\r\n    title={props.title}\r\n    />\r\n)\r\n\r\n// Demo with multiple markers\r\nconst DemoMapCustomMarkers = props => {\r\n    console.log(props)\r\n    const test = true\r\n    return (\r\n        props.customMarkers.length ? (\r\n            <GoogleMap \r\n                mapContainerStyle={props.containerStyle} \r\n                zoom={props.zoom} \r\n                center={props.center}\r\n            >\r\n                {props.customMarkers.map( (machine) =>\r\n                    //test? (\r\n                        <FullMarker \r\n                        key={machine.key} \r\n                        position={machine.value}\r\n                        onClick={props.onClick}\r\n                        //title={machine.nom}\r\n                        />\r\n                   /* ):(\r\n                        <LowMarker \r\n                        key={i} \r\n                        position={loc}\r\n                        onClick={props.onClick}\r\n                        />  \r\n                    )*/\r\n                )}\r\n\r\n            </GoogleMap>\r\n        ):(\r\n            <GoogleMap mapContainerStyle={props.containerStyle} zoom={props.zoom} center={props.center}/>\r\n        )\r\n    )\r\n}\r\n \r\n\r\n//default value for lat, long\r\nconst defaultPosition = {\r\n    lat: 4.0004737, \r\n    lng: 9.8057055\r\n}\r\n\r\nclass MapMachine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            center: {},\r\n            customStyle: [\r\n                {featureType:'water',stylers:[{visibility:'on'},{color:'#bdd1f9'}]},\r\n                {featureType:'all',elementType:'labels.text.fill',stylers:[{color:'#334165'}]},\r\n                {featureType:'landscape',stylers:[{color:'#e9ebf1'}]},\r\n                {featureType:'road.highway',elementType:'geometry',stylers:[{color:'#c5c6c6'}]},\r\n                {featureType:'road.arterial',elementType:'geometry',stylers:[{color:'#fff'}]},\r\n                {featureType:'road.local',elementType:'geometry',stylers:[{color:'#fff'}]},\r\n                {featureType:'transit',elementType:'geometry',stylers:[{color:'#d8dbe0'}]},\r\n                {featureType:'poi',elementType:'geometry',stylers:[{color:'#cfd5e0'}]},\r\n                {featureType:'administrative',stylers:[{visibility:'on'},{lightness:33}]},\r\n                {featureType:'poi.park',elementType:'labels',stylers:[{visibility:'on'},\r\n                {lightness:20}]},{featureType:'road',stylers:[{color:'#d8dbe0',lightness:20}]}\r\n            ]\r\n        }\r\n    }\r\n\r\n    onResize = this.props.onResize;\r\n\r\n    render() {\r\n        // get all position\r\n        const machines = this.props.listeMachine\r\n        //console.log(machines)\r\n        const positions = []\r\n        machines.map((machine) => {\r\n            positions.push({\r\n                key: machine.key,\r\n                value :{\r\n                    lat: parseFloat(machine.coordonnees.latitude),\r\n                    lng: parseFloat(machine.coordonnees.longitude)\r\n                },\r\n                nom: machine.nom,\r\n                //level: machine.level,\r\n            })\r\n        })\r\n        const isSelect = this.props.isSelect\r\n        let zoom = this.props.zoom\r\n        console.log(this.state.center)\r\n        \r\n        let center = positions[0].value\r\n        if (isSelect) {\r\n            center = this.props.currentMachine.coordonnees\r\n        }\r\n        console.log(center)\r\n        const containerStyle = this.props.containerStyle\r\n\r\n        return (\r\n            <LoadScript\r\n                googleMapsApiKey = {googleMapsApiKey}\r\n            >\r\n                <ContentWrapper>\r\n                    <Card className=\"card-default\">\r\n                        <CardBody>\r\n                            <DemoMapCustomMarkers \r\n                             customMarkers={positions}\r\n                             center={center}\r\n                             zoom = {zoom} \r\n                             containerStyle={containerStyle}\r\n                             onClick={this.props.onClick}\r\n                            />\r\n                        </CardBody>\r\n                        <CardFooter className=\"ml-auto\">\r\n                            <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\r\n                        </CardFooter>\r\n                    </Card>\r\n             </ContentWrapper>\r\n            </LoadScript>\r\n        );\r\n\r\n        //return(<div> Just for test</div>)\r\n    }\r\n\r\n}\r\n\r\nexport default MapMachine;\r\n\r\n","import React, { Component } from 'react';\r\nimport { Progress, Row, Col, Card, CardHeader, CardBody, CardFooter, Input } from 'reactstrap';\r\n\r\nconst etatFalse = {\r\n    label: 'déconnectée',\r\n    color: 'circle circle-lg bg-danger',\r\n}\r\n\r\nconst etatTrue = {\r\n    label: 'connectée',\r\n    color: 'circle circle-lg bg-success',\r\n}\r\n\r\nclass ApercuMachine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.currentMachine)\r\n        const { nom, localite, level, status, qte_bte, modele } = this.props.currentMachine\r\n        const {libelle, description} = new Object(modele)\r\n        const {pays, ville, quartier, lieu} = new Object(localite);\r\n        //const libelle =  'A-18'\r\n        //const description = 'Machine de rue'\r\n        const nb_bte = qte_bte\r\n        const nb_tickect = 18\r\n\r\n        //Status formatter\r\n        let etat = {}\r\n        status? (\r\n            etat = etatTrue\r\n        ):(\r\n            etat = etatFalse\r\n        )\r\n        //end status formatter\r\n        // level formatter\r\n        let levelFormatter = { levelColor: 'danger', value: level }\r\n        level == 0 ? (\r\n            levelFormatter = { levelColor: 'gray-light', value: level }\r\n        ): level <= 70 ? (\r\n            levelFormatter = { levelColor: 'success', value: level } \r\n        ): level <=85 ? (\r\n            levelFormatter = { levelColor: 'success', value: level }\r\n        ):(\r\n            console.log(levelFormatter)\r\n        )\r\n        // end level formatter\r\n    \r\n        const {label, color} = etat\r\n        const {value, levelColor} = levelFormatter\r\n\r\n\r\n        // \r\n        return (\r\n            \r\n            <div className=\"row\">\r\n                    {/*Info Machine */}\r\n                    <Card outline color=\"info\" >\r\n                            <CardHeader className=\"mr-3 mt-3 bg-gray-light\">\r\n                                <div className=\"float-right row\">\r\n                                    {/*<span className=\"align-self-center\"> {label} </span>*/}\r\n                                    <div className={color}/>\r\n                                </div>\r\n                                <h4 className=\"m-0\">{nom}</h4>\r\n                                <small className=\"text-muted\"></small>\r\n                            </CardHeader>\r\n                            <CardBody>\r\n                                <div className=\"d-flex align-items-center mb-4 \">\r\n                                    <div className=\"w-100\" data-title=\"Health\">\r\n                                        { level==0? (\r\n                                            <Progress className=\"progress-xs m-0\" value={100} color={levelColor}> </Progress>\r\n                                        ):(\r\n                                            <Progress className=\"progress-xs m-0\" value={level} color={levelColor}> </Progress>\r\n\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"wd-xxs text-right\">\r\n                                        <div className=\"text-bold text-muted\">{level}%</div>\r\n                                    </div>\r\n                                </div>\r\n                            <div className=\"mb-3 mt-3\">                            \r\n                                {/*Adresse */}\r\n                                <div className=\"media mb-3 pl-2\">\r\n                                    <div className=\"align-self-start mr-2\">\r\n                                        <em className=\"fas fas fa-map-marker-alt fa-2x\"></em>\r\n                                    </div>\r\n                                    <div className=\"media-body text-center\">\r\n                                        <address>\r\n                                            <strong> {lieu} </strong>\r\n                                            <br/> {quartier}\r\n                                            <br/> \r\n                                            <span> {ville} - {pays} </span>\r\n                                        </address>\r\n                                    </div>\r\n                                </div>                            \r\n                                {/*Modele */}\r\n                                <div className=\"media mb-4 pl-2\">\r\n                                    <div className=\"align-self-start mr-2\">\r\n                                        <em className=\"fas fa-box fa-2x\"></em>\r\n                                    </div>\r\n                                    <div className=\"media-body text-center\">\r\n                                        <span> {libelle} </span>\r\n                                        <br/>\r\n                                        <span className=\"pl-3\"> {description} </span>\r\n                                    </div>\r\n                                </div>                            \r\n                                {/*Chiffres */}\r\n                                <label className=\"mr-3 pl-1 mb-3\">Ajourdh'ui...</label>\r\n                                {/*bte collectees */}\r\n                                <div className=\"media mb-4\">\r\n                                    <div className=\"align-self-center mr-2\">\r\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\r\n                                    </div>\r\n                                    <div className=\"media-body text-center\">\r\n                                        <h4 className=\"mt-0 text-bold\">{nb_bte}</h4>\r\n                                        {nb_bte <= 1? (\r\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE </p>\r\n                                        ):(\r\n                                            <p className=\"mb-0 text-muted\">BOUTEILLES COLLECTEES</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                {/*tickets imprimés */}\r\n                                <div hidden className=\"media mt-4 mb-3\">\r\n                                    <div className=\"align-self-center mr-2\">\r\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\r\n                                    </div>\r\n                                    <div className=\"media-body text-center\">\r\n                                        <h4 className=\"mt-0 text-bold\">{nb_tickect}</h4>\r\n                                        <p className=\"mb-0 text-muted text-bold\">TICKETS IMPRIMES</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            </CardBody>\r\n                            {/*<CardFooter className=\"text-center mb-auto mt-2\"color=\"bg-gray\">\r\n                            </CardFooter>*/}\r\n                    </Card>\r\n                </div>\r\n        ); \r\n    }\r\n}\r\n\r\nexport default ApercuMachine;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\n\r\nclass HeaderDashboard extends Component {\r\n\r\n    toggleTab = tab => {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    machinesPleines = this.props.machinesPleines\r\n    machinesDown = this.props.machinesDown\r\n    machines = this.props.machines\r\n\r\n    render() {\r\n        // nombre de machines\r\n        const nb_machines = this.props.chiffres.nb_machines;\r\n        const nb_pleines = this.props.chiffres.nb_pleines;\r\n        const nb_down = this.props.chiffres.nb_down;\r\n        const nb_bte = this.props.chiffres.nb_bte;\r\n\r\n        return (\r\n            <ContentWrapper> \r\n                {/* START row */}\r\n                <div className=\"row\">\r\n                    {/*Machines pleines */}\r\n                    <div className=\"col-xl-3\" onClick={this.machinesPleines}>\r\n                        {/* START card- */}\r\n                        <div className=\"card border-0\">\r\n                            <div className=\"row row-flush\">\r\n                                <div className=\"col-4 bg-danger-light text-center d-flex align-items-center justify-content-center rounded-left\">\r\n                                    <em className=\"fa fa-tasks fa-2x\"></em>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"mt-0\">{nb_pleines}</h4>\r\n                                        {nb_pleines == 0? (\r\n                                            <p className=\"mb-0 text-muted\">MACHINE PLEINE </p>\r\n                                        ):nb_pleines == 1? (\r\n                                            <p className=\"mb-0 text-muted\">MACHINE PLEINE </p>\r\n                                        ):(\r\n                                            <p className=\"mb-0 text-muted\">MACHINES PLEINES</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* END card- */}\r\n                    </div>\r\n                    {/*Machines indisponibles */}\r\n                    <div className=\"col-xl-3\" onClick={this.machinesDown}>\r\n                        {/* START card- */}\r\n                        <div className=\"card border-0\">\r\n                            <div className=\"row row-flush\">\r\n                                <div className=\"col-4 bg-gray-light text-center d-flex align-items-center justify-content-center rounded-left\">\r\n                                    <em className=\"icon-dislike fa-2x text-danger\"></em>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"mt-0\">{nb_down}</h4>\r\n                                        {nb_down == 0? (\r\n                                            <p className=\"mb-0 text-muted\">AUCUNE MACHINE DECONNECTEE</p>\r\n                                        ):nb_down == 1? (\r\n                                            <p className=\"mb-0 text-muted\">MACHINE DECONNECTEE</p>\r\n                                        ):(\r\n                                            <p className=\"mb-0 text-muted\">MACHINES DECONNECTEES</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* END card- */}\r\n                    </div>\r\n                    {/*Bouteilles collectées */}\r\n                    <div className=\"col-xl-3\" >\r\n                        {/* START card- */}\r\n                        <div className=\"card border-0\">\r\n                            <div className=\"row row-flush\">\r\n                                <div className=\"col-4 bg-success-light text-center d-flex align-items-center justify-content-center rounded-left\">\r\n                                    <em className=\"fas fa-plus fa-2x\"></em>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"mt-0\">{nb_bte}</h4>\r\n                                        {nb_bte == 0? (\r\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE</p>\r\n                                        ):nb_bte == 1? (\r\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE </p>\r\n                                        ):(\r\n                                            <p className=\"mb-0 text-muted\">BOUTEILLES COLLECTEES</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {/* END card- */}\r\n                    </div>\r\n                    {/*Toutes les machines  */}\r\n                    <div className=\"col-xl-3\" onClick={this.machines}>\r\n                        {/* START card- */}\r\n                        <div className=\"card border-0\">\r\n                            <div className=\"row row-flush\">\r\n                                <div className=\"col-4 bg-info-light text-center d-flex align-items-center justify-content-center rounded-left\">\r\n                                    <em className=\"fab fa-bitbucket fa-2x\"></em>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"card-body text-center\">\r\n                                        <h4 className=\"mt-0\">{nb_machines}</h4>\r\n                                        {nb_machines == 0? (\r\n                                            <p className=\"mb-0 text-muted\">AUCUNE MACHINE </p>\r\n                                        ):nb_machines == 1? (\r\n                                            <p className=\"mb-0 text-muted\">MACHINE </p>\r\n                                        ):(\r\n                                            <p className=\"mb-0 text-muted\">MACHINES</p>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* END card- */}\r\n                    </div>\r\n                </div>\r\n                {/* END row */}\r\n                \r\n            </ContentWrapper>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HeaderDashboard;\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { withTranslation, Trans } from 'react-i18next';\r\n\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport HeaderDashboard from './HeaderDashboard';\r\nimport { Row, Col,Card } from 'reactstrap';\r\nimport MapMachine from '../Maps/MapMachine';\r\nimport ApercuMachine from '../Dashboard/ApercuMachine';\r\nimport HeadingMenu from '../HeadingMenu';\r\nimport _ from 'lodash';\r\nimport {url_machines} from '../../../urls'\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '450px'\r\n}\r\n\r\nconst path = [\r\n    { \r\n        label: 'Home',\r\n        value: '/dashboard_machine',\r\n    }\r\n]\r\n\r\nconst defaultZoom = 10;\r\n\r\nclass Dashboard_machine extends Component {\r\n    constructor(props, context) {\r\n        super(props, context);\r\n        this.state = { \r\n            machines: [], // liste à filtrer\r\n            defaultMachines: [], // liste initiale\r\n            selectedMachine: {}, //id de la machine courante\r\n            isLoading: true,\r\n            isSelectMachine: false,\r\n            zoom: defaultZoom,\r\n            filter: {\r\n                plein: false,\r\n                indisponible: false,\r\n            },\r\n            labelFilter : '',\r\n        }; \r\n    }\r\n    \r\n    componentDidMount() {\r\n        // liste des machines\r\n        axios.get(url_machines)\r\n        .then(res => {\r\n            const machines = res.data.data.machines\r\n            console.log(machines);\r\n            this.setState({\r\n                machines: machines,\r\n                defaultMachines: machines,\r\n                isLoading: false,\r\n             });\r\n        })\r\n        .catch((error) => {\r\n            console.log(\"get machine failed!\")\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    selectMachine = e => {\r\n        const {lat, lng} = e.latLng.toJSON()\r\n        const position = {\r\n            latitude: lat.toString(),\r\n            longitude: lng.toString(),\r\n        }\r\n        //console.log(position)\r\n        const machines = this.state.machines\r\n        //console.log(_.isEqual(machines[1].coordonnees, position))\r\n        const machine = machines.find(machine => _.isEqual(machine.coordonnees, position))\r\n        //console.log(machine)\r\n        \r\n        this.setState({\r\n            filter : true,\r\n            labelFilter: 'Machine selectionnée',\r\n            isSelectMachine: true,\r\n            selectedMachine: machine,\r\n            zoom: 18\r\n        })\r\n        console.log(this.state.selectedMachine)\r\n    }\r\n\r\n    resizeMap = () => {\r\n        this.setState({\r\n            filter : false,\r\n            labelFilter: 'Aucun filtre',\r\n            isSelectMachine: false,\r\n            selectedMachine: {},\r\n            zoom: defaultZoom,\r\n        })\r\n        console.log(this.state.zoom)\r\n    }\r\n\r\n    machines = () => {\r\n        this.setState({ \r\n            machines : this.state.defaultMachines,\r\n            filter: false,\r\n            labelFilter: 'Toutes les machines'\r\n        })\r\n    }\r\n\r\n    machinesPleines = () => {\r\n        if (this.state.filter.plein) {\r\n            this.machines()\r\n            return (false)\r\n        }\r\n        if(this.state.isSelectMachine) {\r\n            this.resizeMap();\r\n        }\r\n        const machinesPleines = this.state.defaultMachines.filter(machine =>  machine.level >= 75)\r\n        this.setState({\r\n            machines : machinesPleines,\r\n            filter : { plein: true},\r\n            labelFilter: 'Machines pleines'\r\n        })\r\n    }\r\n\r\n    machinesDown = () => {\r\n        if (this.state.filter.indisponible) {\r\n            this.machines()\r\n            return (false)\r\n        }\r\n        if(this.state.isSelectMachine) {\r\n            this.resizeMap();\r\n        }\r\n        const machinesDown = this.state.defaultMachines.filter(machine =>  machine.status == false)\r\n        this.setState({\r\n            machines : machinesDown,\r\n            filter: {indisponible : true},\r\n            labelFilter: 'Machines indisponibles'\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.zoom)\r\n        const machines = this.state.machines\r\n        const zoom = this.state.zoom \r\n        const label = this.state.labelFilter\r\n        const machinesPleines = this.state.defaultMachines.filter(machine =>  machine.level >= 75)\r\n        const machinesDown = this.state.defaultMachines.filter(machine => machine.status == false)\r\n        let initialValue = 0\r\n        let total_bte = this.state.defaultMachines.reduce(function (previousValue, currentValue) {\r\n            return previousValue + currentValue.qte_bte\r\n        }, initialValue)\r\n\r\n        const chiffres = {\r\n            nb_machines: this.state.defaultMachines.length,\r\n            nb_pleines: machinesPleines.length,\r\n            nb_down: machinesDown.length,\r\n            nb_bte: total_bte,\r\n        }\r\n        \r\n        const isLoading = this.state.isLoading\r\n        //console.log(isLoading)\r\n        const isSelectMachine = this.state.isSelectMachine\r\n        let selectedMachine;\r\n        let keySelected = '';\r\n        if (isSelectMachine) {\r\n            selectedMachine = this.state.selectedMachine\r\n            keySelected = this.state.selectedMachine.key\r\n            console.log(this.state.selectedMachine)\r\n        }\r\n        console.log(selectedMachine) \r\n\r\n        return (\r\n          !isLoading? (\r\n            <ContentWrapper>\r\n                <HeadingMenu path={path}/>\r\n                <HeaderDashboard \r\n                 chiffres={chiffres} \r\n                 machinesPleines={this.machinesPleines}\r\n                 machinesDown = {this.machinesDown}\r\n                 machines = {this.machines}\r\n                 />\r\n                <div> \r\n                    <span> {label} </span>\r\n                </div>\r\n                <Row>\r\n                    <Col md={8}>\r\n                        <MapMachine \r\n                         listeMachine={machines}\r\n                         currentMachine={selectedMachine}\r\n                         isSelect={isSelectMachine}\r\n                         zoom={zoom}\r\n                         containerStyle={containerStyle}\r\n                         onClick={this.selectMachine}\r\n                         onResize={this.resizeMap}\r\n                        />\r\n                    </Col>\r\n                    \r\n                    <Col md={4}>\r\n                    {isSelectMachine? (\r\n                        <div className=\"row mr-20 col-xl-8\" >\r\n                            <ApercuMachine \r\n                            currentMachine={selectedMachine}\r\n                            isLoading = {isLoading}\r\n                            isSelect={isSelectMachine}\r\n                            className=\"col-xl-7 pr-4 \"\r\n                            />\r\n                            {/* Option sur la machine */}\r\n                            <Card className=\"col-xl-5 ml-auto mr-6\">\r\n                                {/*<OptionMachine currentMachine={selectedMachine}/>*/}\r\n                                <ContentWrapper>\r\n                                    {/*plus d'infos */}\r\n                                    <div className=\"col mb-4 ml-auto\">\r\n                                        <div className=\"align-self-start mr-2\">\r\n                                            <span className=\"fa-stack text-center\">\r\n                                                <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\r\n                                                <em className=\"fas fa-info fa-stack-1x fa-inverse text-white\"></em>\r\n                                            </span>\r\n                                        </div>\r\n                                        <Link to={`/show_machine/${keySelected}`} className=\"media-body text-truncate\">\r\n                                            <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Plus d'infos</a> </p>    \r\n                                        </Link>\r\n                                    </div>\r\n                                    {/*itinéraire */}\r\n                                    <div className=\"col mb-4\" hidden>\r\n                                        <div className=\"align-self-start mr-2\">\r\n                                            <span className=\"fa-stack text-center\">\r\n                                                <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\r\n                                                <em className=\"fab fa-telegram-plane fa-stack-1x fa-inverse text-white\"></em>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"media-body text-truncate\">\r\n                                            <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Obtenir l'itineraire</a> </p>    \r\n                                        </div>\r\n                                    </div>\r\n                                    {/*st */}\r\n                                    <div className=\"col mb-4 \" hidden>\r\n                                        <div className=\"align-self-start mr-2\">\r\n                                            <span className=\"fa-stack text-center\">\r\n                                                <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\r\n                                                <em className=\"fas fa-chart-bar fa-stack-1x fa-inverse text-white\"></em>\r\n                                            </span>\r\n                                        </div>\r\n                                        <div className=\"media-body text-truncate\">\r\n                                            <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Consulter les statistiques</a> </p>    \r\n                                        </div>\r\n                                    </div>\r\n                                </ContentWrapper>\r\n                            </Card>\r\n                        </div>  \r\n                    ):(\r\n                        <div className=\"d-flex rox\">\r\n                            <Link to='/add_machine'> Ajouter une GreenBox </Link>\r\n                            <span className=\"align-self-center align-items-center\"> Selectionner une machine et retrouvez ses informations </span>\r\n                            <img src=\"img/landing/Server status-rafiki.png\" alt=\"Fonctionnalite indisponible\" width=\"400\" height=\"500\"/>\r\n                        </div>\r\n                    )}        \r\n                    </Col>\r\n                </Row>\r\n            </ContentWrapper>\r\n          ):(\r\n            <span> En cours de chargement...</span>\r\n          )\r\n    );\r\n\r\n    }\r\n}\r\n\r\nexport default withTranslation('translations')(Dashboard_machine);\r\n"],"sourceRoot":""}