{"version":3,"sources":["components/Client/Services/AddUpService.js","components/Client/Services/Add_Service.js","components/Client/Layout/ContentWrapper.js","components/Common/FormValidator.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Card.js","components/Client/Layout/HeadingMenu.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["AddUpService","props","toggleStep","validateOnChange","hasError","handleSubmit","formRef","nom","this","service","formCategorie","description","logo","progressValue","ContentWrapper","className","Form","innerRef","name","onSubmit","Card","CardHeader","TabContent","activeTab","activeStep","TabPane","id","tabId","FormGroup","row","Input","type","placeholder","invalid","onChange","data-validate","value","Button","color","Component","AddService","form","formCategorieRef","tabPane","document","getElementById","state","inputs","slice","call","querySelectorAll","FormValidator","bulkValidate","errors","setState","console","log","event","input","target","checked","result","validate","formName","inputName","method","e","elements","filter","i","includes","nodeName","preventDefault","addService","axios","post","url_categories","then","docRef","swal","history","push","catch","error","message","node","isLoading","path","label","HeadingMenu","unwrap","children","defaultProps","element","isCheckbox","Error","param","getAttribute","validations","JSON","parse","length","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","equals","isLength","min","max","toInt","list","isIn","Object","keys","some","val","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","inverse","bool","body","outline","oneOfType","func","ref","map","to","title","inline","_Component","_this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","check","disabled"],"mappings":"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","file":"static/js/26.bad1c21c.chunk.js","sourcesContent":["/** modifier/ajouter les informations d'un manager */\nimport React, { Component } from 'react';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Row,\n    Progress,\n    Col,\n    FormGroup,\n    Input,\n    TabContent,\n    TabPane,\n    Button,\n    Nav,\n    Form,\n    NavItem,\n    NavLink,\n    CustomInput, \n} \nfrom 'reactstrap';\nimport classnames from 'classnames';\n\nconst stepNavitemStyle = {\n    backgroundColor: 'bg-gray-dark'\n};\n\n/*color for next and previous button */\nconst previousColor = \"inverse\"\nconst nextColor = \"success\"\n\n\nclass AddUpService extends Component {\n    constructor(props) { \n        super(props);        \n    }\n    \n    toggleStep = this.props.toggleStep\n    validateOnChange = this.props.validateOnChange\n    hasError = this.props.hasError\n    handleSubmit = this.props.handleSubmit\n    formRef = this.props.formRef\n\n    render() {     \n        const nom = this.props.service.formCategorie.nom\n        const description = this.props.service.formCategorie.description\n        const logo = this.props.service.formCategorie.logo\n\n        // tab item active\n        const tab1 = this.props.service.progressValue[0]\n        const tab2 = this.props.service.progressValue[1]\n        const tab3 = this.props.service.progressValue[2]\n        \n        return (            \n            <ContentWrapper>\n                {/* START form */}\n                <div className=\"block-center col-md-8\">\n                    <Form\n                    innerRef={this.formRef}\n                    className=\"form-horizontal\" \n                    name=\"formCategorie\" \n                    onSubmit={this.handleSubmit}\n                    >\n                        <Card className=\"card-default\">\n                            <CardHeader className=\"pb-0\">\n                                {/*<div className=\"col pr-0\"> <Progress color=\"success-light\" value={100}/> </div>*/}\n                            </CardHeader>                            \n                            <TabContent activeTab={this.props.service.activeStep}>\n                                {/*informations */}\n                                <TabPane id=\"tabPane1\" tabId=\"1\">\n                                    <div className=\"pt-3 mb-3\">\n                                        {/*nom */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\">Nom</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"text\"\n                                                id=\"nom\"\n                                                name=\"nom\" \n                                                placeholder=\"Nom\" \n                                                invalid={this.hasError('formCategorie','nom','required')}\n                                                onChange={this.validateOnChange}\n                                                data-validate='[\"required\"]'\n                                                value={nom}\n                                                />\n                                                <span className=\"invalid-feedback\">Veuillez entrer le nom du service</span>                                            \n                                            </div>\n                                        </FormGroup>\n                                        {/*description */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\" > Description</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"description\"\n                                                id=\"description\"\n                                                name=\"description\"\n                                                placeholder=\"Description\"\n                                                invalid={this.hasError('formCategorie','description','required')}\n                                                onChange={this.validateOnChange}\n                                                value={description}\n                                                data-validate='[\"required\"]' \n                                                />\n                                                { this.hasError('formCategorie','description','required') && <span className=\"invalid-feedback\">Veuillez remplir ce champ</span> }\n                                             </div>\n                                        </FormGroup>\n                                        {/*logo */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\">Logo</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"file\"\n                                                id=\"logo\"\n                                                name=\"logo\" \n                                                placeholder=\"Choisir une image correspondant à ce service\" \n                                                onChange={this.validateOnChange}\n                                                value={logo} \n                                                />\n                                               {/*</Input>   \n                                                <Input \n                                                type=\"file\" \n                                                id=\"logo\" \n                                                name=\"logo\"\n                                                value={logo} />*/}\n                                            </div>\n                                        </FormGroup>\n                                    </div>\n                                    <hr />\n                                    <div className=\"d-flex\">\n                                        <Button color=\"secondary\"> Annuler </Button>\n                                        <Button\n                                        className=\"ml-auto\"\n                                        color={nextColor}\n                                        type=\"submit\" \n                                        //onClick={this.toggleStep('2')}\n                                        >\n                                            Ajouter\n                                        </Button>\n                                    </div>   \n                                </TabPane>\n                            </TabContent>                                            \n                        </Card>\n                        {/* END card */}\n                    </Form>\n                </div>\n            </ContentWrapper>\n        );\n    }\n \n}\n\nexport default AddUpService;\n","/**editer les informations d'une machine */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { url_categories } from '../../../urls';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport FormValidator from '../../Common/FormValidator';\nimport swal from 'sweetalert';\nimport HeadingMenu from '../Layout/HeadingMenu';\nimport AddUpService from './AddUpService';\n\nconst stepNavitemStyle = {\n    backgroundColor: 'bg-gray-dark'\n};\n\nclass AddService extends Component {\n    constructor() {\n        super();   \n        this.state = {\n            formCategorie : {\n                nom: '',\n                description: '',\n                logo: '',\n            },\n            isLoading: true,\n            activeStep: '1',\n            progressValue: [100, 0, 0],\n            path: [\n                { \n                    label: 'Home',\n                    value: '/dashboard_client',\n                },\n                { \n                    label: 'Ajouter un service',\n                    value: '',\n                }\n            ]\n        };\n    }\n\n    toggleStep = activeStep => () => {\n        // For submit we can obtain the form from the event\n        // but for each step we need a global ref to the element\n        const form = this.formCategorieRef;\n        // To validate only the inputs in the current steps, we use an id to query the tabPane\n        // and then find all form elements for the current step only.\n        const tabPane = document.getElementById('tabPane' + this.state.activeStep);\n        const inputs = [].slice.call(tabPane.querySelectorAll('input,select'));\n        // Run validation of inputs\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\n\n        // Update state so the validation message are shown/hidden\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                errors\n            }\n        });\n\n        // and prevent change the if form is not valid\n        if (!hasError) {\n            const progessValue1 = [100, 0, 0];\n            const progessValue2 = [0, 100, 0];\n            const progessValue3 = [0, 0, 100];\n            \n            if (this.state.activeStep !== activeStep) {\n                this.setState({\n                    activeStep\n                });\n            }\n            \n            switch (activeStep) {\n                case '1':\n                    this.setState({\n                        progressValue: progessValue1\n                    });\n                    break;\n                case '2':\n                    this.setState({\n                        progressValue: progessValue2\n                    });\n                    break;\n                case '3':\n                    this.setState({\n                        progressValue: progessValue3\n                    });\n                    break;\n                default:\n                    console.log('default')\n            }\n        }\n    }\n\n    /**\n      * Validate input using onChange event\n      * @param  {String} formName The name of the form in the state object\n      * @return {Function} a function used for the event\n    */\n    validateOnChange = event => {\n        const input = event.target;\n        const form = input.form;\n        const value = input.type === 'checkbox' ? input.checked : input.value;\n\n        const result = FormValidator.validate(input);\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                [input.name]: value,\n                errors: {\n                    ...this.state[form.name].errors,\n                    [input.name]: result\n                }\n            }\n        });\n/*\n        if (input.name == 'logo') {\n            // update les informations sur le rôle\n            const selectedRole = this.state.logos.find(logo => logo.nom == value)\n            console.log(selectedRole )       \n            this.setState({\n                selectedRole  : selectedRole,\n            })\n        }*/\n    };\n\n    /* Simplify error check */\n    hasError = (formName, inputName, method) => {\n        return  this.state[formName] &&\n                this.state[formName].errors &&\n                this.state[formName].errors[inputName] &&\n                this.state[formName].errors[inputName][method]\n    }    \n\n    handleSubmit = e => {\n        const form = e.target;\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\n\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                errors\n            }\n        });\n\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\n        e.preventDefault();\n        console.log(hasError)\n        if (!hasError) {\n            this.addService();\n        }     \n    }\n    \n    addService = () => {\n        const { nom, description, logo } = this.state.formCategorie;\n        axios.post(url_categories, {\n            nom,\n            description,\n            logo,\n        })\n        .then((docRef) => {\n            this.setState({\n                formCategorie : {            \n                    nom: '',\n                    description: '',\n                    logo: '',\n                },\n            });\n            //feedback\n            console.log(\"Un service de plus !\");\n            swal(\"Super!\", `Service ${nom} ajouté avec succès`, \"success\").then((value) => {\n                this.props.history.push(\"/list_service/\")\n            }) \n        })\n        .catch((error) => {\n          console.error(\"Error adding service: \", error);\n          swal(\"Desolée!\", error.message , \"warning\")\n        });\n    }\n\n    // Keep a reference to the form to access from the steps methods\n    formRef = node => (this.formCategorieRef = node);    \n\n    render() {\n        console.log(this.state.formCategorie)\n       \n        return (            \n            <ContentWrapper>\n                <HeadingMenu path = {this.state.path}/>\n                <AddUpService \n                service={this.state}\n                formRef={this.formRef}\n                toggleStep={this.toggleStep}\n                validateOnChange = {this.validateOnChange}\n                hasError={this.hasError}\n                handleSubmit = {this.handleSubmit} />\n            </ContentWrapper>\n        \n        );\n    }\n\n}\n\nexport default AddService;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Wrapper element for template content\n */\nconst ContentWrapper = props =>(\n    <div className=\"content-wrapper\">\n        {props.unwrap ?\n            (<div className=\"unwrap\">{props.children}</div>)\n            :\n            (props.children)\n        }\n    </div>\n)\n\nContentWrapper.propTypes = {\n    /** add element with 'unwrap' class to expand content area */\n    unwrap: PropTypes.bool\n}\nContentWrapper.defaultProps = {\n    unwrap: false\n}\n\nexport default ContentWrapper;\n","// https://github.com/chriso/validator.js\nimport validator from 'validator';\n\n/**\n * Helper methods to validate form inputs\n * using controlled components\n */\nconst FormValidator = {\n    /**\n     * Validate input element\n     * @param element Dome element of the input\n     * Uses the following attributes\n     *     data-validate: array in json format with validation methods\n     *     data-param: used to provide arguments for certain methods.\n     */\n    validate(element) {\n\n        const isCheckbox = element.type === 'checkbox';\n        const value = isCheckbox ? element.checked : element.value;\n        const name = element.name;\n\n        if (!name) throw new Error('Input name must not be empty.');\n\n        // use getAttribute to support IE10+\n        const param = element.getAttribute('data-param');\n        const validations = JSON.parse(element.getAttribute('data-validate'));\n\n        let result = []\n        if(validations && validations.length) {\n            /*  Result of each validation must be true if the input is invalid\n                and false if valid. */\n            validations.forEach(m => {\n                switch (m) {\n                    case 'required':\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\n                        break;\n                    case 'email':\n                        result[m] = !validator.isEmail(value)\n                        break;\n                    case 'number':\n                        result[m] = !validator.isNumeric(value)\n                        break;\n                    case 'integer':\n                        result[m] = !validator.isInt(value)\n                        break;\n                    case 'alphanum':\n                        result[m] = !validator.isAlphanumeric(value)\n                        break;\n                    case 'url':\n                        result[m] = !validator.isURL(value)\n                        break;\n                    case 'equalto':\n                        // here we expect a valid ID as param\n                        const value2 = document.getElementById(param).value;\n                        result[m] = !validator.equals(value, value2)\n                        break;\n                    case 'minlen':\n                        result[m] = !validator.isLength(value, { min: param })\n                        break;\n                    case 'maxlen':\n                        result[m] = !validator.isLength(value, { max: param })\n                        break;\n                    case 'len':\n                        const [min, max] = JSON.parse(param)\n                        result[m] = !validator.isLength(value, { min, max })\n                        break;\n                    case 'min':\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\n                        break;\n                    case 'max':\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\n                        break;\n                    case 'list':\n                        const list = JSON.parse(param)\n                        result[m] = !validator.isIn(value, list)\n                        break;\n                    default:\n                        throw new Error('Unrecognized validator.');\n                }\n\n            })\n        }\n\n        return result;\n    },\n\n    /**\n     * Bulk validation of input elements.\n     * Used with form elements collection.\n     * @param  {Array} inputs Array for DOM element\n     * @return {Object}       Contains array of error and a flag to\n     *                        indicate if there was a validation error\n     */\n    bulkValidate(inputs) {\n        let errors = {},\n            hasError = false;\n\n        inputs.forEach(input => {\n            let result = this.validate(input)\n            errors = { ...errors, [input.name]: result }\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\n        })\n\n        return {\n            errors,\n            hasError\n        }\n    }\n}\n\nexport default FormValidator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HeadingMenu extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const path = this.props.path\n        return (\n            <div className=\"content-heading\">\n                    <ol className=\"breadcrumb\">\n                        {path.map((element) =>\n                            element.value == '' ? (\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\n                            ):(\n                                <li className=\"breadcrumb-item\"> \n                                    <Link to={element.value} title={element.label}> \n                                        { element.label } \n                                    </Link> \n                                </li>\n                            )\n                        )}\n                   </ol>\n            </div>\n                \n        )\n    }\n}\n\nexport default HeadingMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}