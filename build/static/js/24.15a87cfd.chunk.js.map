{"version":3,"sources":["components/Administrateur/Manager/AppUpManager.js","components/Administrateur/Manager/AddManager.js","components/Administrateur/Layout/ContentWrapper.js","components/Common/FormValidator.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Card.js","components/Authentication/AuthFunction.js","../node_modules/reactstrap/es/Form.js","../node_modules/reactstrap/es/FormGroup.js","components/Administrateur/HeadingMenu.js"],"names":["Manager","props","toggleStep","validateOnChange","hasError","handleSubmit","formRef","nom","this","manager","formManager","email","role","description","selectedRole","progressValue","ContentWrapper","className","Form","innerRef","name","onSubmit","Card","CardHeader","TabContent","activeTab","activeStep","TabPane","id","tabId","FormGroup","row","Input","type","placeholder","invalid","onChange","data-validate","value","htmlFor","roles","map","Button","color","Component","AddManager","getRoles","axios","get","url_roles","then","res","data","console","log","setState","isLoading","state","catch","error","swal","form","formManagerRef","tabPane","document","getElementById","inputs","slice","call","querySelectorAll","FormValidator","bulkValidate","errors","event","input","target","checked","result","validate","find","formName","inputName","method","e","elements","filter","i","includes","nodeName","preventDefault","addManager","post","url_managers","docRef","history","push","message","node","path","label","HeadingMenu","unwrap","children","defaultProps","element","isCheckbox","Error","param","getAttribute","validations","JSON","parse","length","forEach","m","validator","isEmpty","isEmail","isNumeric","isInt","isAlphanumeric","isURL","value2","equals","isLength","min","max","toInt","list","isIn","Object","keys","some","val","propTypes","tag","tagPropType","PropTypes","string","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","inverse","bool","body","outline","oneOfType","func","ref","signIn","password","a","firebase","auth","signInWithEmailAndPassword","userCredential","signOut","inline","_Component","_this","getRef","bind","_assertThisInitialized","submit","_inheritsLoose","_proto","prototype","render","_this$props","check","disabled","to","title"],"mappings":"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","file":"static/js/24.15a87cfd.chunk.js","sourcesContent":["/** modifier/ajouter les informations d'un manager */\nimport React, { Component } from 'react';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Row,\n    Progress,\n    Col,\n    FormGroup,\n    Input,\n    TabContent,\n    TabPane,\n    Button,\n    Nav,\n    Form,\n    NavItem,\n    NavLink, } \nfrom 'reactstrap';\nimport classnames from 'classnames';\nconst stepNavitemStyle = {\n    backgroundColor: 'bg-gray-dark'\n};\n\n/*color for next and previous button */\nconst previousColor = \"inverse\"\nconst nextColor = \"success\"\n\nconst containerStyle = {\n    width: '100%',\n    height: '400px'\n};\n\n\nclass Manager extends Component {\n    constructor(props) { \n        super(props);        \n    }\n    \n    toggleStep = this.props.toggleStep\n    validateOnChange = this.props.validateOnChange\n    hasError = this.props.hasError\n    handleSubmit = this.props.handleSubmit\n    formRef = this.props.formRef\n\n    render() {     \n        const nom = this.props.manager.formManager.nom\n        const email = this.props.manager.formManager.email\n        const role = this.props.manager.formManager.role\n        const description = this.props.manager.selectedRole.description\n        // tab item active\n        const tab1 = this.props.manager.progressValue[0]\n        const tab2 = this.props.manager.progressValue[1]\n        const tab3 = this.props.manager.progressValue[2]\n        \n        return (            \n            <ContentWrapper>\n                {/* START form */}\n                <div className=\"block-center col-md-8\">\n                    <Form\n                    innerRef={this.formRef}\n                    className=\"form-horizontal\" \n                    name=\"formManager\" \n                    onSubmit={this.handleSubmit}\n                    >\n                        <Card className=\"card-default\">\n                            <CardHeader className=\"pb-0\">\n                                {/*<div className=\"col pr-0\"> <Progress color=\"success-light\" value={100}/> </div>*/}\n                            </CardHeader>                            \n                            <TabContent activeTab={this.props.manager.activeStep}>\n                                {/*informations */}\n                                <TabPane id=\"tabPane1\" tabId=\"1\">\n                                    <div className=\"pt-3 mb-3\">\n                                        {/*nom */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\">Nom</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"text\"\n                                                id=\"nom\"\n                                                name=\"nom\" \n                                                placeholder=\"Nom\" \n                                                invalid={this.hasError('formManager','nom','required')}\n                                                onChange={this.validateOnChange}\n                                                data-validate='[\"required\"]'\n                                                value={nom}\n                                                />\n                                                <span className=\"invalid-feedback\">Veuillez entrer le nom du rôle</span>                                            \n                                            </div>\n                                        </FormGroup>\n                                        {/*email */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\" htmlFor=\"signupInputEmail1\">Adresse email</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"email\"\n                                                id=\"email\"\n                                                name=\"email\" \n                                                invalid={this.hasError('formManager','email','required')||this.hasError('formManager','email','email')}\n                                                onChange={this.validateOnChange}\n                                                value={email}\n                                                data-validate='[\"required\", \"email\"]' \n                                                />\n                                                { this.hasError('formManager','email','required') && <span className=\"invalid-feedback\">Veuillez remplir ce champ</span> }\n                                                { this.hasError('fformManager','email','email') && <span className=\"invalid-feedback\">Cette adresse mail n'est pas valide</span> }                                                                                         \n                                            </div>\n                                        </FormGroup>\n                                        {/*role */}\n                                        <FormGroup row>\n                                            <label className=\"col-xl-2 col-form-label\">Rôle</label>\n                                            <div className=\"col-xl-10\">\n                                                <Input \n                                                type=\"select\"\n                                                id=\"role\"\n                                                name=\"role\" \n                                                placeholder=\"Affecté un rôle à ce manager\" \n                                                invalid={this.hasError('formManager','role', 'required')}\n                                                onChange={this.validateOnChange}\n                                                value={role}\n                                                data-validate='[\"required\"]' \n                                                >\n                                                    {this.props.manager.roles.map((role) =>\n                                                        <option> {role.nom} </option>\n                                                    )}\n                                                <span className=\"invalid-feedback\">Veuillez sélectionner un rôle pour ce manager</span>\n                                                </Input>\n                                                <small> {description} </small>                                                                                            \n                                            </div>\n                                        </FormGroup>\n                                    </div>\n                                    <hr />\n                                    <div className=\"d-flex\">\n                                        {/*<Button color=\"secondary\">Previous</Button>*/}\n                                        <Button\n                                        className=\"ml-auto\"\n                                        color={nextColor}\n                                        type=\"submit\" \n                                        //onClick={this.toggleStep('2')}\n                                        >\n                                            Suivant\n                                        </Button>\n                                    </div>   \n                                </TabPane>\n                            </TabContent>                                            \n                        </Card>\n                        {/* END card */}\n                    </Form>\n                </div>\n            </ContentWrapper>\n            );\n    }\n \n}\n\nexport default Manager;\n","/**ajouter un manager */\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { url_managers, url_roles } from '../../../urls';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport FormValidator from '../../Common/FormValidator';\nimport swal from 'sweetalert';\nimport HeadingMenu from '../HeadingMenu';\nimport Manager from './AppUpManager';\nimport { createManager } from '../../Authentication/AuthFunction';\n\nconst stepNavitemStyle = {\n    backgroundColor: 'bg-gray-dark'\n};\n\nclass AddManager extends Component {\n    constructor() {\n        super();        \n        /*Ajouter les fonctionnalités par la suite, les horaires ou le planning */\n        this.state = {\n            formManager : {\n                nom: '',\n                email: '',\n                role: '',\n            },\n            roles : [],\n            selectedRole : {},\n            isLoading: true,\n            activeStep: '1',\n            progressValue: [100, 0, 0],\n            path: [\n                { \n                    label: 'Home',\n                    value: '/dashboard_admin',\n                },\n                { \n                    label: 'Ajouter un manager',\n                    value: '',\n                }\n            ]\n        };\n    }\n\n    componentDidMount() {\n        this.getRoles();\n    }\n\n    getRoles = () => {\n        axios.get(url_roles)\n        .then(res => {\n            const roles = res.data.data\n            console.log(roles)\n            this.setState({\n                formManager : {\n                    role: roles[0]\n                },\n                roles: roles,\n                isLoading: false\n            })\n            console.log(this.state.roles);\n        })\n        .catch((error) => {\n            console.log(\"get roles failed!\", error)\n            swal(\"Desolée!\", \"Une erreur est survenue, contacter notre service client au numéro +237-655-244-570\", \"warning\")\n        })\n    }\n\n    toggleStep = activeStep => () => {\n        // For submit we can obtain the form from the event\n        // but for each step we need a global ref to the element\n        const form = this.formManagerRef;\n        // To validate only the inputs in the current steps, we use an id to query the tabPane\n        // and then find all form elements for the current step only.\n        const tabPane = document.getElementById('tabPane' + this.state.activeStep);\n        const inputs = [].slice.call(tabPane.querySelectorAll('input,select'));\n        // Run validation of inputs\n        const { errors, hasError } = FormValidator.bulkValidate(inputs);\n\n        // Update state so the validation message are shown/hidden\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                errors\n            }\n        });\n\n        // and prevent change the if form is not valid\n        if (!hasError) {\n            const progessValue1 = [100, 0, 0];\n            const progessValue2 = [0, 100, 0];\n            const progessValue3 = [0, 0, 100];\n            \n            if (this.state.activeStep !== activeStep) {\n                this.setState({\n                    activeStep\n                });\n            }\n            \n            switch (activeStep) {\n                case '1':\n                    this.setState({\n                        progressValue: progessValue1\n                    });\n                    break;\n                case '2':\n                    this.setState({\n                        progressValue: progessValue2\n                    });\n                    break;\n                case '3':\n                    this.setState({\n                        progressValue: progessValue3\n                    });\n                    break;\n                default:\n                    console.log('default')\n            }\n        }\n    }\n\n    /**\n      * Validate input using onChange event\n      * @param  {String} formName The name of the form in the state object\n      * @return {Function} a function used for the event\n    */\n    validateOnChange = event => {\n        const input = event.target;\n        const form = input.form;\n        const value = input.type === 'checkbox' ? input.checked : input.value;\n\n        const result = FormValidator.validate(input);\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                [input.name]: value,\n                errors: {\n                    ...this.state[form.name].errors,\n                    [input.name]: result\n                }\n            }\n        });\n\n        if (input.name == 'role') {\n            // update les informations sur le rôle\n            const selectedRole = this.state.roles.find(role => role.nom == value)\n            console.log(selectedRole )       \n            this.setState({\n                selectedRole  : selectedRole,\n            })\n        }\n    };\n\n    /* Simplify error check */\n    hasError = (formName, inputName, method) => {\n        return  this.state[formName] &&\n                this.state[formName].errors &&\n                this.state[formName].errors[inputName] &&\n                this.state[formName].errors[inputName][method]\n    }    \n\n    handleSubmit = e => {\n        const form = e.target;\n        const inputs = [...form.elements].filter(i => ['INPUT', 'SELECT'].includes(i.nodeName))\n\n        const { errors, hasError } = FormValidator.bulkValidate(inputs)\n\n        this.setState({\n            [form.name]: {\n                ...this.state[form.name],\n                errors\n            }\n        });\n\n        console.log(hasError ? 'Form has errors. Check!' : 'Form Submitted!')\n        e.preventDefault();\n        console.log(hasError)\n        if (!hasError) {\n            this.addManager();\n        }     \n    }\n     \n    addManager = () => {\n        const { nom, email } = this.state.formManager;\n        axios.post(url_managers, {\n            nom,\n            email,\n            role: this.state.selectedRole,\n        })\n        .then((docRef) => {\n            this.setState({\n                formManager : {            \n                nom: '',\n                email: '',\n                role: '',\n                },\n                selectedRole : {},\n            });\n            //feedback\n            console.log(\"Un manager de plus !\");\n            swal(\"Super!\", `Manager ${nom} ajouté avec succès`, \"success\").then((value) => {\n                this.props.history.push(\"/list_manager/\")\n            }) \n        })\n        .catch((error) => {\n          console.error(\"Error adding manager: \", error);\n          swal(\"Desolée!\", error.message , \"warning\")\n        });\n    }\n\n    // Keep a reference to the form to access from the steps methods\n    formRef = node => (this.formManagerRef = node);    \n\n    render() {\n        console.log(this.state.formManager)\n       \n        return (            \n            <ContentWrapper>\n                <HeadingMenu path = {this.state.path}/>\n                <Manager \n                manager={this.state}\n                formRef={this.formRef}\n                toggleStep={this.toggleStep}\n                validateOnChange = {this.validateOnChange}\n                hasError={this.hasError}\n                handleSubmit = {this.handleSubmit} />\n            </ContentWrapper>\n        \n        );\n    }\n\n}\n\nexport default AddManager;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Wrapper element for template content\n */\nconst ContentWrapper = props =>(\n    <div className=\"content-wrapper\">\n        {props.unwrap ?\n            (<div className=\"unwrap\">{props.children}</div>)\n            :\n            (props.children)\n        }\n    </div>\n)\n\nContentWrapper.propTypes = {\n    /** add element with 'unwrap' class to expand content area */\n    unwrap: PropTypes.bool\n}\nContentWrapper.defaultProps = {\n    unwrap: false\n}\n\nexport default ContentWrapper;\n","// https://github.com/chriso/validator.js\nimport validator from 'validator';\n\n/**\n * Helper methods to validate form inputs\n * using controlled components\n */\nconst FormValidator = {\n    /**\n     * Validate input element\n     * @param element Dome element of the input\n     * Uses the following attributes\n     *     data-validate: array in json format with validation methods\n     *     data-param: used to provide arguments for certain methods.\n     */\n    validate(element) {\n\n        const isCheckbox = element.type === 'checkbox';\n        const value = isCheckbox ? element.checked : element.value;\n        const name = element.name;\n\n        if (!name) throw new Error('Input name must not be empty.');\n\n        // use getAttribute to support IE10+\n        const param = element.getAttribute('data-param');\n        const validations = JSON.parse(element.getAttribute('data-validate'));\n\n        let result = []\n        if(validations && validations.length) {\n            /*  Result of each validation must be true if the input is invalid\n                and false if valid. */\n            validations.forEach(m => {\n                switch (m) {\n                    case 'required':\n                        result[m] = isCheckbox ? value === false : validator.isEmpty(value)\n                        break;\n                    case 'email':\n                        result[m] = !validator.isEmail(value)\n                        break;\n                    case 'number':\n                        result[m] = !validator.isNumeric(value)\n                        break;\n                    case 'integer':\n                        result[m] = !validator.isInt(value)\n                        break;\n                    case 'alphanum':\n                        result[m] = !validator.isAlphanumeric(value)\n                        break;\n                    case 'url':\n                        result[m] = !validator.isURL(value)\n                        break;\n                    case 'equalto':\n                        // here we expect a valid ID as param\n                        const value2 = document.getElementById(param).value;\n                        result[m] = !validator.equals(value, value2)\n                        break;\n                    case 'minlen':\n                        result[m] = !validator.isLength(value, { min: param })\n                        break;\n                    case 'maxlen':\n                        result[m] = !validator.isLength(value, { max: param })\n                        break;\n                    case 'len':\n                        const [min, max] = JSON.parse(param)\n                        result[m] = !validator.isLength(value, { min, max })\n                        break;\n                    case 'min':\n                        result[m] = !validator.isInt(value, { min: validator.toInt(param) })\n                        break;\n                    case 'max':\n                        result[m] = !validator.isInt(value, { max: validator.toInt(param) })\n                        break;\n                    case 'list':\n                        const list = JSON.parse(param)\n                        result[m] = !validator.isIn(value, list)\n                        break;\n                    default:\n                        throw new Error('Unrecognized validator.');\n                }\n\n            })\n        }\n\n        return result;\n    },\n\n    /**\n     * Bulk validation of input elements.\n     * Used with form elements collection.\n     * @param  {Array} inputs Array for DOM element\n     * @return {Object}       Contains array of error and a flag to\n     *                        indicate if there was a validation error\n     */\n    bulkValidate(inputs) {\n        let errors = {},\n            hasError = false;\n\n        inputs.forEach(input => {\n            let result = this.validate(input)\n            errors = { ...errors, [input.name]: result }\n            if (!hasError) hasError = Object.keys(result).some(val => result[val])\n        })\n\n        return {\n            errors,\n            hasError\n        }\n    }\n}\n\nexport default FormValidator;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import firebase from '../../firebase';\nimport axios from 'axios';\nimport {url_managers} from '../../urls';\n\n\n// L'administrateur ajoute les managers\nconst createManager = async (email, name) => {\n    console.log(email)\n    // generated password\n    const password = (Math.random() + 1).toString(36).substring(5)\n    console.log(password)\n    try {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(email, password)\n        console.log(`User ${email} added succefully!`)\n        const user = userCredential.user\n        const response = {\n            password,\n            user,\n        }\n        return (response) \n    } \n    catch (error) {\n        throw new Error(error.message)\n    }\n};\n\n// Login\nconst signIn = async (email, password) => {\n    console.log(email, password)\n    const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password)\n    console.log(\"user : \", userCredential)\n    console.log(`Sign in succeed ${email}!`);\n    return (userCredential) \n}\n\nconst signOut = async () => {\n    firebase.auth().signOut()\n}\n\nexport { \n    signIn, \n    createManager,\n    signOut,\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  inline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'form'\n};\n\nvar Form = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Form, _Component);\n\n  function Form(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.submit = _this.submit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Form.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.submit = function submit() {\n    if (this.ref) {\n      this.ref.submit();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        inline = _this$props.inline,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"className\", \"cssModule\", \"inline\", \"tag\", \"innerRef\"]);\n\n    var classes = mapToCssModules(classNames(className, inline ? 'form-inline' : false), cssModule);\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes\n    }));\n  };\n\n  return Form;\n}(Component);\n\nForm.propTypes = propTypes;\nForm.defaultProps = defaultProps;\nexport default Form;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HeadingMenu extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const path = this.props.path\n        return (\n            <div className=\"content-heading\">\n                    <ol className=\"breadcrumb\">\n                        {path.map((element) =>\n                            element.value == '' ? (\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\n                            ):(\n                                <li className=\"breadcrumb-item\"> \n                                    <Link to={element.value} title={element.label}> \n                                        { element.label } \n                                    </Link> \n                                </li>\n                            )\n                        )}\n                   </ol>\n            </div>\n                \n        )\n    }\n}\n\nexport default HeadingMenu;"],"sourceRoot":""}