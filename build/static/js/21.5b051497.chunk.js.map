{"version":3,"sources":["components/Machine/Layout/ContentWrapper.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","allconfig.js","components/Machine/Maps/MapMachine.js","../node_modules/reactstrap/es/CardFooter.js"],"names":["ContentWrapper","props","className","unwrap","children","defaultProps","propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","cssModule","object","innerRef","oneOfType","func","Card","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","CardBody","googleMapsApiKey","FullMarker","position","onClick","key","DemoMapCustomMarkers","console","log","customMarkers","length","mapContainerStyle","containerStyle","zoom","center","map","machine","value","MapMachine","onResize","state","customStyle","featureType","stylers","visibility","elementType","lightness","machines","this","listeMachine","positions","push","lat","parseFloat","coordonnees","latitude","lng","longitude","nom","isSelect","currentMachine","Component","CardFooter"],"mappings":"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","file":"static/js/21.5b051497.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Wrapper element for template content\r\n */\r\nconst ContentWrapper = props =>(\r\n    <div className=\"content-wrapper\">\r\n        {props.unwrap ?\r\n            (<div className=\"unwrap\">{props.children}</div>)\r\n            :\r\n            (props.children)\r\n        }\r\n    </div>\r\n)\r\n\r\nContentWrapper.propTypes = {\r\n    /** add element with 'unwrap' class to expand content area */\r\n    unwrap: PropTypes.bool\r\n}\r\nContentWrapper.defaultProps = {\r\n    unwrap: false\r\n}\r\n\r\nexport default ContentWrapper;\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","const googleMapsApiKey=\"AIzaSyB2gRtnm_h3PmxB6ZhZ1ZBpvwAYiQheb1Y\"\r\n\r\nexport { googleMapsApiKey}","import React, { Component } from 'react';\r\nimport ContentWrapper from '../Layout/ContentWrapper';\r\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport { googleMapsApiKey} from '../../../allconfig';\r\n\r\nconst svgMarker = {\r\n    path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\r\n    fillColor: \"green\",\r\n    fillOpacity: 1,\r\n    strokeWeight: 0,\r\n    rotation: 0,\r\n    scale: 2,\r\n    //anchor: new google.maps.Point(15, 30),\r\n};\r\n\r\nconst FullMarker = props => (\r\n    <Marker \r\n    key={props.key} \r\n    position={props.position}\r\n    onClick={props.onClick}\r\n    />\r\n)\r\n\r\nconst LowMarker = props => (\r\n    <Marker \r\n    key={props.key} \r\n    position={props.position}\r\n    onClick={props.onClick}\r\n    icon={svgMarker}\r\n    title={props.title}\r\n    />\r\n)\r\n\r\n// Demo with multiple markers\r\nconst DemoMapCustomMarkers = props => {\r\n    console.log(props)\r\n    const test = true\r\n    return (\r\n        props.customMarkers.length ? (\r\n            <GoogleMap \r\n                mapContainerStyle={props.containerStyle} \r\n                zoom={props.zoom} \r\n                center={props.center}\r\n            >\r\n                {props.customMarkers.map( (machine) =>\r\n                    //test? (\r\n                        <FullMarker \r\n                        key={machine.key} \r\n                        position={machine.value}\r\n                        onClick={props.onClick}\r\n                        //title={machine.nom}\r\n                        />\r\n                   /* ):(\r\n                        <LowMarker \r\n                        key={i} \r\n                        position={loc}\r\n                        onClick={props.onClick}\r\n                        />  \r\n                    )*/\r\n                )}\r\n\r\n            </GoogleMap>\r\n        ):(\r\n            <GoogleMap mapContainerStyle={props.containerStyle} zoom={props.zoom} center={props.center}/>\r\n        )\r\n    )\r\n}\r\n \r\n\r\n//default value for lat, long\r\nconst defaultPosition = {\r\n    lat: 4.0004737, \r\n    lng: 9.8057055\r\n}\r\n\r\nclass MapMachine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            center: {},\r\n            customStyle: [\r\n                {featureType:'water',stylers:[{visibility:'on'},{color:'#bdd1f9'}]},\r\n                {featureType:'all',elementType:'labels.text.fill',stylers:[{color:'#334165'}]},\r\n                {featureType:'landscape',stylers:[{color:'#e9ebf1'}]},\r\n                {featureType:'road.highway',elementType:'geometry',stylers:[{color:'#c5c6c6'}]},\r\n                {featureType:'road.arterial',elementType:'geometry',stylers:[{color:'#fff'}]},\r\n                {featureType:'road.local',elementType:'geometry',stylers:[{color:'#fff'}]},\r\n                {featureType:'transit',elementType:'geometry',stylers:[{color:'#d8dbe0'}]},\r\n                {featureType:'poi',elementType:'geometry',stylers:[{color:'#cfd5e0'}]},\r\n                {featureType:'administrative',stylers:[{visibility:'on'},{lightness:33}]},\r\n                {featureType:'poi.park',elementType:'labels',stylers:[{visibility:'on'},\r\n                {lightness:20}]},{featureType:'road',stylers:[{color:'#d8dbe0',lightness:20}]}\r\n            ]\r\n        }\r\n    }\r\n\r\n    onResize = this.props.onResize;\r\n\r\n    render() {\r\n        // get all position\r\n        const machines = this.props.listeMachine\r\n        //console.log(machines)\r\n        const positions = []\r\n        machines.map((machine) => {\r\n            positions.push({\r\n                key: machine.key,\r\n                value :{\r\n                    lat: parseFloat(machine.coordonnees.latitude),\r\n                    lng: parseFloat(machine.coordonnees.longitude)\r\n                },\r\n                nom: machine.nom,\r\n                //level: machine.level,\r\n            })\r\n        })\r\n        const isSelect = this.props.isSelect\r\n        let zoom = this.props.zoom\r\n        console.log(this.state.center)\r\n        \r\n        let center = positions[0].value\r\n        if (isSelect) {\r\n            center = this.props.currentMachine.coordonnees\r\n        }\r\n        console.log(center)\r\n        const containerStyle = this.props.containerStyle\r\n\r\n        return (\r\n            <LoadScript\r\n                googleMapsApiKey = {googleMapsApiKey}\r\n            >\r\n                <ContentWrapper>\r\n                    <Card className=\"card-default\">\r\n                        <CardBody>\r\n                            <DemoMapCustomMarkers \r\n                             customMarkers={positions}\r\n                             center={center}\r\n                             zoom = {zoom} \r\n                             containerStyle={containerStyle}\r\n                             onClick={this.props.onClick}\r\n                            />\r\n                        </CardBody>\r\n                        <CardFooter className=\"ml-auto\">\r\n                            <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\r\n                        </CardFooter>\r\n                    </Card>\r\n             </ContentWrapper>\r\n            </LoadScript>\r\n        );\r\n\r\n        //return(<div> Just for test</div>)\r\n    }\r\n\r\n}\r\n\r\nexport default MapMachine;\r\n\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;"],"sourceRoot":""}