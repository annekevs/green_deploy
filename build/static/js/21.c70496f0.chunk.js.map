{"version":3,"sources":["components/Machine/Dashboard/HeaderDashboard.js","components/Machine/Dashboard/Dashboard_machine.js","components/Machine/Layout/ContentWrapper.js","allconfig.js","../node_modules/reactstrap/es/Row.js","components/Machine/HeadingMenu.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/Col.js","components/Machine/Maps/Map.js","components/Machine/Maps/MapDirection.js","assets/Maps/728939_flag_yellow_location_map_marker_icon.svg","../node_modules/reactstrap/es/CardFooter.js","components/Machine/Maps/MapMachine.js","components/Machine/Dashboard/ApercuMachine.js"],"names":["HeaderDashboard","toggleTab","tab","state","activeTab","setState","machinesPleines","props","machinesDown","machines","nb_machines","this","chiffres","nb_pleines","nb_down","nb_bte","ContentWrapper","className","onClick","Component","containerStyle","width","height","path","label","value","Dashboard_machine","context","selectMachine","e","latLng","toJSON","lat","lng","position","latitude","toString","longitude","machine","find","_","isEqual","coordonnees","filter","labelFilter","isSelectMachine","selectedMachine","zoom","console","log","resizeMap","defaultMachines","plein","level","indisponible","status","isLoading","currentPosition","axios","get","url_machines","then","res","data","catch","error","navigator","geolocation","getCurrentPosition","coords","pos","total_bte","reduce","previousValue","currentValue","qte_bte","length","keySelected","key","PageLoader","HeadingMenu","to","hidden","Row","Col","md","MapMachine","listeMachine","currentMachine","isSelect","onResize","ApercuMachine","Card","href","src","alt","withTranslation","unwrap","children","defaultProps","googleMapsApiKey","rowColsPropType","PropTypes","oneOfType","number","string","propTypes","tag","tagPropType","noGutters","bool","cssModule","object","form","xs","sm","lg","xl","widths","Tag","attributes","_objectWithoutPropertiesLoose","colClasses","forEach","colWidth","i","colSize","isXs","push","classes","mapToCssModules","classNames","React","createElement","_extends","map","element","title","CardHeader","stringOrNumberProp","columnProps","shape","size","order","offset","array","getColumnSizeClass","columnProp","isObject","_classNames","colSizeInterfix","colClass","_colClass","svgMarker","fillColor","fillOpacity","strokeWeight","rotation","scale","MyMap","compose","withProps","googleMapURL","loadingElement","style","containerElement","mapElement","withScriptjs","withGoogleMap","center","icon","Map","CardFooter","customStyle","featureType","stylers","visibility","color","elementType","lightness","positions","parseFloat","nom","etatFalse","etatTrue","localite","modele","Object","libelle","description","pays","ville","quartier","lieu","etat","levelFormatter","levelColor","outline","data-title"],"mappings":"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","file":"static/js/21.c70496f0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ContentWrapper from '../Layout/ContentWrapper';\n\nclass HeaderDashboard extends Component {\n\n    toggleTab = tab => {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            });\n        }\n    }\n\n    machinesPleines = this.props.machinesPleines\n    machinesDown = this.props.machinesDown\n    machines = this.props.machines\n\n    render() {\n        // nombre de machines\n        const nb_machines = this.props.chiffres.nb_machines;\n        const nb_pleines = this.props.chiffres.nb_pleines;\n        const nb_down = this.props.chiffres.nb_down;\n        const nb_bte = this.props.chiffres.nb_bte;\n\n        return (\n            <ContentWrapper> \n                {/* START row */}\n                <div className=\"row\">\n                    {/*Machines pleines */}\n                    <div className=\"col-xl-3\" onClick={this.machinesPleines}>\n                        {/* START card- */}\n                        <div className=\"card border-0\">\n                            <div className=\"row row-flush\">\n                                <div className=\"col-4 bg-danger-light text-center d-flex align-items-center justify-content-center rounded-left\">\n                                    <em className=\"fa fa-tasks fa-2x\"></em>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"card-body text-center\">\n                                        <h4 className=\"mt-0\">{nb_pleines}</h4>\n                                        {nb_pleines == 0? (\n                                            <p className=\"mb-0 text-muted\">MACHINE PLEINE </p>\n                                        ):nb_pleines == 1? (\n                                            <p className=\"mb-0 text-muted\">MACHINE PLEINE </p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">MACHINES PLEINES</p>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* END card- */}\n                    </div>\n                    {/*Machines indisponibles */}\n                    <div className=\"col-xl-3\" onClick={this.machinesDown}>\n                        {/* START card- */}\n                        <div className=\"card border-0\">\n                            <div className=\"row row-flush\">\n                                <div className=\"col-4 bg-gray-light text-center d-flex align-items-center justify-content-center rounded-left\">\n                                    <em className=\"icon-dislike fa-2x text-danger\"></em>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"card-body text-center\">\n                                        <h4 className=\"mt-0\">{nb_down}</h4>\n                                        {nb_down == 0? (\n                                            <p className=\"mb-0 text-muted\">AUCUNE MACHINE DECONNECTEE</p>\n                                        ):nb_down == 1? (\n                                            <p className=\"mb-0 text-muted\">MACHINE DECONNECTEE</p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">MACHINES DECONNECTEES</p>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* END card- */}\n                    </div>\n                    {/*Bouteilles collectées */}\n                    <div className=\"col-xl-3\" >\n                        {/* START card- */}\n                        <div className=\"card border-0\">\n                            <div className=\"row row-flush\">\n                                <div className=\"col-4 bg-success-light text-center d-flex align-items-center justify-content-center rounded-left\">\n                                    <em className=\"fas fa-plus fa-2x\"></em>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"card-body text-center\">\n                                        <h4 className=\"mt-0\">{nb_bte}</h4>\n                                        {nb_bte == 0? (\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE</p>\n                                        ):nb_bte == 1? (\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE </p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">BOUTEILLES COLLECTEES</p>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        {/* END card- */}\n                    </div>\n                    {/*Toutes les machines  */}\n                    <div className=\"col-xl-3\" onClick={this.machines}>\n                        {/* START card- */}\n                        <div className=\"card border-0\">\n                            <div className=\"row row-flush\">\n                                <div className=\"col-4 bg-info-light text-center d-flex align-items-center justify-content-center rounded-left\">\n                                    <em className=\"fab fa-bitbucket fa-2x\"></em>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"card-body text-center\">\n                                        <h4 className=\"mt-0\">{nb_machines}</h4>\n                                        {nb_machines == 0? (\n                                            <p className=\"mb-0 text-muted\">AUCUNE MACHINE </p>\n                                        ):nb_machines == 1? (\n                                            <p className=\"mb-0 text-muted\">MACHINE </p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">MACHINES</p>\n                                        )}\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        {/* END card- */}\n                    </div>\n                </div>\n                {/* END row */}\n                \n            </ContentWrapper>\n        );\n    }\n\n}\n\nexport default HeaderDashboard;\n","/*global google*/\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { withTranslation, Trans } from 'react-i18next';\n\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport HeaderDashboard from './HeaderDashboard';\nimport { Row, Col,Card } from 'reactstrap';\nimport MapMachine from '../Maps/MapMachine';\nimport ApercuMachine from '../Dashboard/ApercuMachine';\nimport HeadingMenu from '../HeadingMenu';\nimport PageLoader from '../../Common/PageLoader';\nimport _ from 'lodash';\nimport {url_machines} from '../../../urls'\n\nconst containerStyle = {\n    width: '100%',\n    height: '450px'\n}\n\nconst path = [\n    { \n        label: 'Home',\n        value: '/dashboard_machine',\n    }\n]\n\nconst defaultZoom = 10;\n\nclass Dashboard_machine extends Component {\n    constructor(props, context) {\n        super(props, context);\n        this.state = { \n            machines: [], // liste à filtrer\n            defaultMachines: [], // liste initiale\n            selectedMachine: {}, //id de la machine courante\n            isLoading: true,\n            isSelectMachine: false,\n            zoom: defaultZoom,\n            filter: {\n                plein: false,\n                indisponible: false,\n            },\n            labelFilter : '',\n            currentPosition : {}, // position de l'utilisateur actuel\n        }; \n    }\n    \n    componentDidMount() {\n        // liste des machines\n        axios.get(url_machines)\n        .then(res => {\n            const machines = res.data.data.machines\n            console.log(machines);\n            this.setState({\n                machines: machines,\n                defaultMachines: machines,\n                isLoading: false,\n             });\n        })\n        .catch((error) => {\n            console.log(\"get machine failed!\")\n            console.log(error)\n        })\n\n        // position de l'utilisateur\n        navigator?.geolocation.getCurrentPosition(({coords: {latitude: lat, longitude: lng}}) => {\n            const pos = {lat, lng}\n            this.setState({currentPosition: pos})\n        })\n    }\n\n    selectMachine = e => {\n        const {lat, lng} = e.latLng.toJSON()\n        const position = {\n            latitude: lat.toString(),\n            longitude: lng.toString(),\n        }\n        //console.log(position)\n        const machines = this.state.machines\n        //console.log(_.isEqual(machines[1].coordonnees, position))\n        const machine = machines.find(machine => _.isEqual(machine.coordonnees, position))\n        //console.log(machine)\n        \n        this.setState({\n            filter : true,\n            labelFilter: 'Machine selectionnée',\n            isSelectMachine: true,\n            selectedMachine: machine,\n            zoom: 18\n        })\n        console.log(this.state.selectedMachine)\n    }\n\n    resizeMap = () => {\n        this.setState({\n            filter : false,\n            labelFilter: 'Aucun filtre',\n            isSelectMachine: false,\n            selectedMachine: {},\n            zoom: defaultZoom,\n        })\n        console.log(this.state.zoom)\n    }\n\n    machines = () => {\n        this.setState({ \n            machines : this.state.defaultMachines,\n            filter: false,\n            labelFilter: 'Toutes les machines'\n        })\n    }\n\n    machinesPleines = () => {\n        if (this.state.filter.plein) {\n            this.machines()\n            return (false)\n        }\n        if(this.state.isSelectMachine) {\n            this.resizeMap();\n        }\n        const machinesPleines = this.state.defaultMachines.filter(machine =>  machine.level >= 75)\n        this.setState({\n            machines : machinesPleines,\n            filter : { plein: true},\n            labelFilter: 'Machines pleines'\n        })\n    }\n\n    machinesDown = () => {\n        if (this.state.filter.indisponible) {\n            this.machines()\n            return (false)\n        }\n        if(this.state.isSelectMachine) {\n            this.resizeMap();\n        }\n        const machinesDown = this.state.defaultMachines.filter(machine =>  machine.status == false)\n        this.setState({\n            machines : machinesDown,\n            filter: {indisponible : true},\n            labelFilter: 'Machines indisponibles'\n        })\n    }\n\n    render() {\n        console.log(this.state.zoom)\n        const machines = this.state.machines\n        const zoom = this.state.zoom \n        const label = this.state.labelFilter\n        const machinesPleines = this.state.defaultMachines.filter(machine =>  machine.level >= 75)\n        const machinesDown = this.state.defaultMachines.filter(machine => machine.status == false)\n        let initialValue = 0\n        let total_bte = this.state.defaultMachines.reduce(function (previousValue, currentValue) {\n            return previousValue + currentValue.qte_bte\n        }, initialValue)\n\n        const chiffres = {\n            nb_machines: this.state.defaultMachines.length,\n            nb_pleines: machinesPleines.length,\n            nb_down: machinesDown.length,\n            nb_bte: total_bte,\n        }\n        \n        const isLoading = this.state.isLoading\n        //console.log(isLoading)\n        const isSelectMachine = this.state.isSelectMachine\n        let selectedMachine;\n        let keySelected = '';\n        if (isSelectMachine) {\n            selectedMachine = this.state.selectedMachine\n            keySelected = this.state.selectedMachine.key\n            console.log(this.state.selectedMachine)\n        }\n        console.log(selectedMachine) \n\n        return (\n          !isLoading? (\n            <ContentWrapper>\n                <HeadingMenu path={path}/>\n                <Link to ='/test' hidden> Just4Test </Link>\n                <HeaderDashboard \n                 chiffres={chiffres} \n                 machinesPleines={this.machinesPleines}\n                 machinesDown = {this.machinesDown}\n                 machines = {this.machines}\n                 />\n                <div> \n                    <span> {label} </span>\n                </div>\n                <Row>\n                    <Col md={8}>\n                        <MapMachine \n                         listeMachine={machines}\n                         currentMachine={selectedMachine}\n                         isSelect={isSelectMachine}\n                         zoom={zoom}\n                         containerStyle={containerStyle}\n                         onClick={this.selectMachine}\n                         onResize={this.resizeMap}\n                         currentPosition={this.state.currentPosition}\n                        />\n                    </Col>\n                    \n                    <Col md={4}>\n                    {isSelectMachine? (\n                        <div className=\"row mr-20\" >\n                            <div className=\"col-xl-10\"> \n                                <ApercuMachine \n                                currentMachine={selectedMachine}\n                                isLoading = {isLoading}\n                                isSelect={isSelectMachine}\n                                className=\"col-xl-7 pr-4 \"\n                                />\n                                {/* Option sur la machine selectionnée*/}\n                                <Card className=\" ml-auto mr-6\">\n                                    {/*<OptionMachine currentMachine={selectedMachine}/>*/}\n                                    <ContentWrapper>\n                                        {/*plus d'infos */}\n                                        <div className=\"col mb-4 ml-auto\">\n                                            <div className=\"align-self-start mr-2\">\n                                                <span className=\"fa-stack text-center\">\n                                                    <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\n                                                    <em className=\"fas fa-info fa-stack-1x fa-inverse text-white\"></em>\n                                                </span>\n                                            </div>\n                                            <Link to={`/show_machine/${keySelected}`} className=\"media-body text-truncate\">\n                                                <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Plus d'infos</a> </p>    \n                                            </Link>\n                                        </div>\n                                        {/*itinéraire */}\n                                        <div className=\"col mb-4\" hidden>\n                                            <div className=\"align-self-start mr-2\">\n                                                <span className=\"fa-stack text-center\">\n                                                    <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\n                                                    <em className=\"fab fa-telegram-plane fa-stack-1x fa-inverse text-white\"></em>\n                                                </span>\n                                            </div>\n                                            <div className=\"media-body text-truncate\">\n                                                <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Obtenir l'itineraire</a> </p>    \n                                            </div>\n                                        </div>\n                                        {/*st */}\n                                        <div className=\"col mb-4 \" hidden>\n                                            <div className=\"align-self-start mr-2\">\n                                                <span className=\"fa-stack text-center\">\n                                                    <em className=\"fa fa-circle fa-stack-2x text-purple\"></em>\n                                                    <em className=\"fas fa-chart-bar fa-stack-1x fa-inverse text-white\"></em>\n                                                </span>\n                                            </div>\n                                            <div className=\"media-body text-truncate\">\n                                                <p className=\"mb-1\"><a className=\"text-purple m-0\" href=\"\">Consulter les statistiques</a> </p>    \n                                            </div>\n                                        </div>\n                                    </ContentWrapper>\n                                </Card>\n                            </div>\n                        </div>  \n                    ):(\n                        <div className=\"d-flex rox\">\n                            <Link to='/add_machine'> Ajouter une GreenBox </Link>\n                            <span className=\"align-self-center align-items-center\"> Selectionner une machine et retrouvez ses informations </span>\n                            <img src=\"img/landing/Server status-rafiki.png\" alt=\"Fonctionnalite indisponible\" width=\"400\" height=\"500\"/>\n                        </div>\n                    )}        \n                    </Col>\n                </Row>\n            </ContentWrapper>\n          ):(\n            <PageLoader/>\n          )\n    );\n\n    }\n}\n\nexport default withTranslation('translations')(Dashboard_machine);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Wrapper element for template content\n */\nconst ContentWrapper = props =>(\n    <div className=\"content-wrapper\">\n        {props.unwrap ?\n            (<div className=\"unwrap\">{props.children}</div>)\n            :\n            (props.children)\n        }\n    </div>\n)\n\nContentWrapper.propTypes = {\n    /** add element with 'unwrap' class to expand content area */\n    unwrap: PropTypes.bool\n}\nContentWrapper.defaultProps = {\n    unwrap: false\n}\n\nexport default ContentWrapper;\n","const googleMapsApiKey=\"AIzaSyB2gRtnm_h3PmxB6ZhZ1ZBpvwAYiQheb1Y\"\n\nexport { googleMapsApiKey}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar rowColWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar rowColsPropType = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar propTypes = {\n  tag: tagPropType,\n  noGutters: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  form: PropTypes.bool,\n  xs: rowColsPropType,\n  sm: rowColsPropType,\n  md: rowColsPropType,\n  lg: rowColsPropType,\n  xl: rowColsPropType\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: rowColWidths\n};\n\nvar Row = function Row(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      noGutters = props.noGutters,\n      Tag = props.tag,\n      form = props.form,\n      widths = props.widths,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"noGutters\", \"tag\", \"form\", \"widths\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var colSize = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!colSize) {\n      return;\n    }\n\n    var isXs = !i;\n    colClasses.push(isXs ? \"row-cols-\" + colSize : \"row-cols-\" + colWidth + \"-\" + colSize);\n  });\n  var classes = mapToCssModules(classNames(className, noGutters ? 'no-gutters' : null, form ? 'form-row' : 'row', colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nRow.propTypes = propTypes;\nRow.defaultProps = defaultProps;\nexport default Row;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass HeadingMenu extends Component {\n    constructor(props) {\n        super(props)\n    }\n\n    render() {\n        const path = this.props.path\n        return (\n            <div className=\"content-heading\">\n                    <ol className=\"breadcrumb\">\n                        {path.map((element) =>\n                            element.value == '' ? (\n                                <li className=\"breadcrumb-item active\"> { element.label } </li>\n                            ):(\n                                <li className=\"breadcrumb-item\"> \n                                    <Link to={element.value} title={element.label}> \n                                        { element.label } \n                                    </Link> \n                                </li>\n                            )\n                        )}\n                   </ol>\n            </div>\n                \n        )\n    }\n}\n\nexport default HeadingMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  tag: tagPropType,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'div',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Col = function Col(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      widths = props.widths,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"widths\", \"tag\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      var colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames)), cssModule));\n    } else {\n      var _colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n\n      colClasses.push(_colClass);\n    }\n  });\n\n  if (!colClasses.length) {\n    colClasses.push('col');\n  }\n\n  var classes = mapToCssModules(classNames(className, colClasses), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexport default Col;","/*global google*/\nimport React, {Component}  from 'react'\nimport { compose, withProps, lifecycle } from 'recompose'\nimport {\n  withScriptjs,\n  withState,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n  DirectionsRenderer,\n} from 'react-google-maps'\nimport { googleMapsApiKey} from '../../../allconfig';\nimport MapDirection from './MapDirection';\nimport stationMarker from '../../../assets/Maps/728939_flag_yellow_location_map_marker_icon.svg';\n\nconst svgMarker = {\n  path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\n  fillColor: \"green\",\n  fillOpacity: 1,\n  strokeWeight: 0,\n  rotation: 0,\n  scale: 2,\n  //anchor: new google.maps.Point(15, 30),\n};\n\n\nconst MyMap = compose(\n  withProps({\n    googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `450px` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n  )(props => {\n    \n    return (\n      props.machines.length? (\n        <GoogleMap\n          center={props.center}\n          zoom={props.zoom}\n          onClick={props.onClick}\n        > \n          {props.machines.map( (machine) => {\n            const test = (machine.level >= 50)? true : false\n            return (\n              test? (\n                <Marker key={machine.key} position={machine.value} onClick={props.onClick}/>\n              ):(\n                <Marker key={machine.key} position={machine.value} onClick={props.onClick} icon={svgMarker}/>\n              )\n            )\n          })}\n        </GoogleMap>\n      ):(\n        <GoogleMap center={props.center} zoom={props.zoom} />\n      )\n    )\n  }\n\n\n)\n\n// display directions\nconst start = {lat: 4.0004737, lng: 9.8057055}\nconst end = {lat: 4.001925800, lng: 9.76514100}\nconst fromTo = [start, end]\n\nclass Map extends Component {\n  \n  onClick = this.props.onClick\n  \n  render() {\n    const machines = this.props.machines\n    const zoom = this.props.zoom\n    const center = this.props.currentMachine? this.props.currentMachine.coordonnees : {lat: 4.0004737, lng: 9.8057055}\n    console.log(machines)\n    const positions = []\n    /*this.props.machines.map((machine) => {\n      positions.push({\n        lat: parseFloat(machine.coordonnees.latitude),\n        lng: parseFloat(machine.coordonnees.longitude)\n      })\n    })*/\n\n    return(\n      <div>\n        <MyMap \n          machines={machines} \n          zoom={zoom} \n          onClick={this.onClick}\n          center={center}\n          />\n        {/*<MapDirection\n        origin={this.props.currentPosition} \n        destination={end}\n        zoom={zoom}\n        />*/}\n      </div>\n    )\n  }\n}\n\nexport default Map;","/*global google*/\nimport React, { Component } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  DirectionsRenderer\n} from \"react-google-maps\";\nimport { googleMapsApiKey} from '../../../allconfig';\n\nclass MapDirection extends Component {\n  state = {\n    directions: null\n  };\n\n  componentDidMount() {\n    const directionsService = new google.maps.DirectionsService();\n\n    let origin = this.props.origin? this.props.origin : {lat: 4.0004737, lng: 9.8057055}\n    let destination = this.props.destination? this.props.destination : {lat: 4.0004740,lng: 9.8057055}\n    //waypoints\n    const start = {lat: 4.0054737, lng: 9.8057055}\n    const end = {lat: 4.002925800, lng: 9.76514100}\n    const fromTo = [start, end]    \n    directionsService.route(\n      {\n        origin: origin,\n        destination: destination,\n        waypoints: [\n          {\n             location: new google.maps.LatLng(4.0004937, 9.8757055)\n          },\n          {\n            location: new google.maps.LatLng(4.001855800, 9.76244100)\n          }\n        ],\n        travelMode: google.maps.TravelMode.DRIVING,\n      },\n      (result, status) => {\n        if (status === google.maps.DirectionsStatus.OK) {\n          this.setState({\n            directions: result\n          });\n        } else {\n          console.error(`error fetching directions ${result}`);\n        }\n      }\n    );\n  }\n  \n  render() {\n    const GoogleMapExample = withGoogleMap(props => (\n      <GoogleMap\n        defaultCenter={{ lat: 40.756795, lng: -73.954298 }}\n        defaultZoom={13}\n      >\n        <DirectionsRenderer\n          directions={this.state.directions}\n        />\n      </GoogleMap>\n    ));\n\n    const MapOk = () => (\n        <GoogleMapExample\n        containerElement={<div style={{ height: `400px`}} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    )\n\n    const MapLoader = withScriptjs(MapOk);\n\n    return (\n      <div>\n          <MapLoader\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&v=3.exp&libraries=geometry,drawing,places`}\n            loadingElement={<div style={{ height: `100%` }} />}\n          />\n      </div>\n    );\n  }\n}\n\nexport default MapDirection;\n","export default __webpack_public_path__ + \"static/media/728939_flag_yellow_location_map_marker_icon.c4fa07d5.svg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","/*global google*/\nimport React, { Component } from 'react';\nimport ContentWrapper from '../Layout/ContentWrapper';\nimport { Card, CardHeader, CardBody, CardFooter } from 'reactstrap';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { googleMapsApiKey} from '../../../allconfig';\nimport Map from './Map';\n\nconst svgMarker = {\n    path: \"M10.453 14.016l6.563-6.609-1.406-1.406-5.156 5.203-2.063-2.109-1.406 1.406zM12 2.016q2.906 0 4.945 2.039t2.039 4.945q0 1.453-0.727 3.328t-1.758 3.516-2.039 3.070-1.711 2.273l-0.75 0.797q-0.281-0.328-0.75-0.867t-1.688-2.156-2.133-3.141-1.664-3.445-0.75-3.375q0-2.906 2.039-4.945t4.945-2.039z\",\n    fillColor: \"green\",\n    fillOpacity: 1,\n    strokeWeight: 0,\n    rotation: 0,\n    scale: 2,\n    //anchor: new google.maps.Point(15, 30),\n};\n\nconst FullMarker = props => (\n    <Marker \n    key={props.key} \n    position={props.position}\n    onClick={props.onClick}\n    />\n)\n\nconst LowMarker = props => (\n    <Marker \n    key={props.key} \n    position={props.position}\n    onClick={props.onClick}\n    icon={svgMarker}\n    title={props.title}\n    />\n)\n\n// Demo with multiple markers\nconst DemoMapCustomMarkers = props => { \n    console.log(props)\n    const id = (Math.random() + 1).toString(36).substring(5)\n    return (\n        props.customMarkers.length ? (\n            <GoogleMap\n                id={id}\n                mapContainerStyle={props.containerStyle} \n                zoom={props.zoom} \n                center={props.center}\n            >\n                {props.customMarkers.map( (machine) => {\n                    const test = (machine.level >= 50)? true : false\n                    return (\n                        test? (\n                            <FullMarker \n                            key={machine.key} \n                            position={machine.value}\n                            onClick={props.onClick}\n                            //title={machine.nom}\n                            />\n                       ):(\n                            <LowMarker \n                            key={machine.key} \n                            position={machine.value}\n                            onClick={props.onClick}\n                            />  \n                        )\n                    )}\n                )}\n\n            </GoogleMap>\n        ):(\n            <GoogleMap mapContainerStyle={props.containerStyle} zoom={props.zoom} center={props.center}/>\n        )\n    )\n}\n\n\n//default value for lat, long\nconst defaultPosition = {\n    lat: 4.0004737, \n    lng: 9.8057055\n}\n\nclass MapMachine extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            center: {},\n            customStyle: [\n                {featureType:'water',stylers:[{visibility:'on'},{color:'#bdd1f9'}]},\n                {featureType:'all',elementType:'labels.text.fill',stylers:[{color:'#334165'}]},\n                {featureType:'landscape',stylers:[{color:'#e9ebf1'}]},\n                {featureType:'road.highway',elementType:'geometry',stylers:[{color:'#c5c6c6'}]},\n                {featureType:'road.arterial',elementType:'geometry',stylers:[{color:'#fff'}]},\n                {featureType:'road.local',elementType:'geometry',stylers:[{color:'#fff'}]},\n                {featureType:'transit',elementType:'geometry',stylers:[{color:'#d8dbe0'}]},\n                {featureType:'poi',elementType:'geometry',stylers:[{color:'#cfd5e0'}]},\n                {featureType:'administrative',stylers:[{visibility:'on'},{lightness:33}]},\n                {featureType:'poi.park',elementType:'labels',stylers:[{visibility:'on'},\n                {lightness:20}]},{featureType:'road',stylers:[{color:'#d8dbe0',lightness:20}]}\n            ]\n        }\n    }\n\n   /* componentDidMount() {\n        //console.log(this.props)\n        this.setState({ center : this.props.currentMachine.coordonnees})\n    }*/\n\n    onResize = this.props.onResize;\n\n    render() {\n        // get all position\n        const machines = this.props.listeMachine\n        //console.log(machines)\n        const positions = []\n        machines.map((machine) => {\n            positions.push({\n                key: machine.key,\n                value :{\n                    lat: parseFloat(machine.coordonnees.latitude),\n                    lng: parseFloat(machine.coordonnees.longitude)\n                },\n                nom: machine.nom,\n                level: machine.level,\n            })\n        })\n        const isSelect = this.props.isSelect\n        const zoom = this.props.zoom\n        \n        const containerStyle = this.props.containerStyle\n\n        return (\n            <ContentWrapper>\n                <Card className=\"card-default\">\n                    <CardBody>\n                        <Map\n                            machines={positions}\n                            currentMachine={this.props.currentMachine}\n                            zoom={zoom}\n                            onClick={this.props.onClick}\n                            currentPosition={this.props.currentPosition}\n                        />\n                    </CardBody>\n                    <CardFooter className=\"ml-auto\">\n                        <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\n                    </CardFooter>\n                </Card>\n            </ContentWrapper>\n        )\n       /* return (\n            <LoadScript\n                googleMapsApiKey = {googleMapsApiKey}\n            >\n                <ContentWrapper>\n                    <Card className=\"card-default\">\n                        <CardBody>\n                            <DemoMapCustomMarkers \n                             customMarkers={positions}\n                             center={center}\n                             zoom = {zoom} \n                             containerStyle={containerStyle}\n                             onClick={this.props.onClick}\n                            />\n                        </CardBody>\n                        <CardFooter className=\"ml-auto\">\n                            <span className=\"fas fa-compress pl-auto text-dark fa-2x\" onClick={this.onResize}> </span>\n                        </CardFooter>\n                    </Card>\n             </ContentWrapper>\n            </LoadScript>\n        );*/\n\n        //return(<div> Just for test</div>)\n    }\n\n}\n\nexport default MapMachine;\n\n","import React, { Component } from 'react';\nimport { Progress, Row, Col, Card, CardHeader, CardBody, CardFooter, Input } from 'reactstrap';\n\nconst etatFalse = {\n    label: 'déconnectée',\n    color: 'circle circle-lg bg-danger',\n}\n\nconst etatTrue = {\n    label: 'connectée',\n    color: 'circle circle-lg bg-success',\n}\n\nclass ApercuMachine extends Component {\n    constructor(props) {\n        super(props);\n        \n    }\n\n    render() {\n        console.log(this.props.currentMachine)\n        const { nom, localite, level, status, qte_bte, modele } = this.props.currentMachine\n        const {libelle, description} = new Object(modele)\n        const {pays, ville, quartier, lieu} = new Object(localite);\n        //const libelle =  'A-18'\n        //const description = 'Machine de rue'\n        const nb_bte = qte_bte\n        const nb_tickect = 18\n\n        //Status formatter\n        let etat = {}\n        status? (\n            etat = etatTrue\n        ):(\n            etat = etatFalse\n        )\n        //end status formatter\n        // level formatter\n        let levelFormatter = { levelColor: 'danger', value: level }\n        level == 0 ? (\n            levelFormatter = { levelColor: 'gray-light', value: level }\n        ): level <= 70 ? (\n            levelFormatter = { levelColor: 'success', value: level } \n        ): level <=85 ? (\n            levelFormatter = { levelColor: 'success', value: level }\n        ):(\n            console.log(levelFormatter)\n        )\n        // end level formatter\n    \n        const {label, color} = etat\n        const {value, levelColor} = levelFormatter\n\n\n        // \n        return (\n            \n            <div className=\"row\">\n                    {/*Info Machine */}\n                    <Card outline color=\"info\" >\n                            <CardHeader className=\"mr-3 mt-3 bg-gray-light\">\n                                <div className=\"float-right row\">\n                                    {/*<span className=\"align-self-center\"> {label} </span>*/}\n                                    <div className={color}/>\n                                </div>\n                                <h4 className=\"m-0\">{nom}</h4>\n                                <small className=\"text-muted\"></small>\n                            </CardHeader>\n                            <CardBody>\n                                <div className=\"d-flex align-items-center mb-4 \">\n                                    <div className=\"w-100\" data-title=\"Health\">\n                                        { level==0? (\n                                            <Progress className=\"progress-xs m-0\" value={100} color={levelColor}> </Progress>\n                                        ):(\n                                            <Progress className=\"progress-xs m-0\" value={level} color={levelColor}> </Progress>\n\n                                        )}\n                                    </div>\n                                    <div className=\"wd-xxs text-right\">\n                                        <div className=\"text-bold text-muted\">{level}%</div>\n                                    </div>\n                                </div>\n                            <div className=\"mb-3 mt-3\">                            \n                                {/*Adresse */}\n                                <div className=\"media mb-3 pl-2\">\n                                    <div className=\"align-self-start mr-2\">\n                                        <em className=\"fas fas fa-map-marker-alt fa-2x\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <address>\n                                            <strong> {lieu} </strong>\n                                            <br/> {quartier}\n                                            <br/> \n                                            <span> {ville} - {pays} </span>\n                                        </address>\n                                    </div>\n                                </div>                            \n                                {/*Modele */}\n                                <div className=\"media mb-4 pl-2\">\n                                    <div className=\"align-self-start mr-2\">\n                                        <em className=\"fas fa-box fa-2x\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <span> {libelle} </span>\n                                        <br/>\n                                        <span className=\"pl-3\"> {description} </span>\n                                    </div>\n                                </div>                            \n                                {/*Chiffres */}\n                                <label className=\"mr-3 pl-1 mb-3\">Ajourdh'ui...</label>\n                                {/*bte collectees */}\n                                <div className=\"media mb-4\">\n                                    <div className=\"align-self-center mr-2\">\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <h4 className=\"mt-0 text-bold\">{nb_bte}</h4>\n                                        {nb_bte <= 1? (\n                                            <p className=\"mb-0 text-muted\">BOUTEILLE COLLECTEE </p>\n                                        ):(\n                                            <p className=\"mb-0 text-muted\">BOUTEILLES COLLECTEES</p>\n                                        )}\n                                    </div>\n                                </div>\n                                {/*tickets imprimés */}\n                                <div hidden className=\"media mt-4 mb-3\">\n                                    <div className=\"align-self-center mr-2\">\n                                        <em className=\"fas fas fa-check fa-2x text-success\"></em>\n                                    </div>\n                                    <div className=\"media-body text-center\">\n                                        <h4 className=\"mt-0 text-bold\">{nb_tickect}</h4>\n                                        <p className=\"mb-0 text-muted text-bold\">TICKETS IMPRIMES</p>\n                                    </div>\n                                </div>\n                            </div>\n                            </CardBody>\n                            {/*<CardFooter className=\"text-center mb-auto mt-2\"color=\"bg-gray\">\n                            </CardFooter>*/}\n                    </Card>\n                </div>\n        ); \n    }\n}\n\nexport default ApercuMachine;\n\n\n"],"sourceRoot":""}